-----------------------------------------------------------------------------
Info file generated by Happy Version 1.19.12 from ParKotlin.y
-----------------------------------------------------------------------------


-----------------------------------------------------------------------------
Grammar
-----------------------------------------------------------------------------
	%start_pProg -> Prog                               (0)
	Integer -> L_integ                                 (1)
	String -> L_quoted                                 (2)
	Ident -> L_ident                                   (3)
	Prog -> ListInst                                   (4)
	Exp -> Exp OpAssign Exp1                           (5)
	Exp -> Exp1                                        (6)
	Exp1 -> Exp3 '?' Exp1 ':' Exp2                     (7)
	Exp1 -> Exp2                                       (8)
	Exp2 -> Exp2 '||' Exp3                             (9)
	Exp2 -> Exp3                                       (10)
	Exp3 -> Exp3 '&&' Exp4                             (11)
	Exp3 -> Exp4                                       (12)
	Exp4 -> Exp4 '==' Exp5                             (13)
	Exp4 -> Exp4 '!=' Exp5                             (14)
	Exp4 -> Exp5                                       (15)
	Exp5 -> Exp5 '<' Exp6                              (16)
	Exp5 -> Exp5 '>' Exp6                              (17)
	Exp5 -> Exp5 '<=' Exp6                             (18)
	Exp5 -> Exp5 '>=' Exp6                             (19)
	Exp5 -> Exp6                                       (20)
	Exp6 -> Exp6 '+' Exp7                              (21)
	Exp6 -> Exp6 '-' Exp7                              (22)
	Exp6 -> Exp7                                       (23)
	Exp7 -> Exp7 '*' Exp8                              (24)
	Exp7 -> Exp7 '/' Exp8                              (25)
	Exp7 -> Exp7 '%' Exp8                              (26)
	Exp7 -> Exp8                                       (27)
	Exp8 -> '-' Exp8                                   (28)
	Exp8 -> '!' Exp8                                   (29)
	Exp8 -> '++' Exp12                                 (30)
	Exp8 -> '--' Exp12                                 (31)
	Exp8 -> Exp9                                       (32)
	Exp9 -> Exp12 '++'                                 (33)
	Exp9 -> Exp12 '--'                                 (34)
	Exp9 -> Exp10                                      (35)
	Exp10 -> 'Tupla' '(' ListExp ')'                   (36)
	Exp10 -> Integer                                   (37)
	Exp10 -> String                                    (38)
	Exp10 -> 'true'                                    (39)
	Exp10 -> 'false'                                   (40)
	Exp10 -> 'null'                                    (41)
	Exp10 -> FunctionExp                               (42)
	Exp10 -> Ident ListDimExp                          (43)
	Exp10 -> '{' ListArg '->' ListStm '}'              (44)
	Exp10 -> Exp11                                     (45)
	Exp11 -> Exp11 '!!'                                (46)
	Exp11 -> Exp12                                     (47)
	Exp12 -> Ident                                     (48)
	Exp12 -> '(' Exp ')'                               (49)
	ListExp ->                                         (50)
	ListExp -> Exp                                     (51)
	ListExp -> Exp ',' ListExp                         (52)
	DimExp -> '[' Exp ']'                              (53)
	ListDimExp -> DimExp                               (54)
	ListDimExp -> DimExp ListDimExp                    (55)
	OpAssign -> '='                                    (56)
	OpAssign -> '+='                                   (57)
	OpAssign -> '-='                                   (58)
	OpAssign -> '*='                                   (59)
	OpAssign -> '/='                                   (60)
	OpAssign -> '%='                                   (61)
	BaseType -> 'Tupla' '<' ListType '>'               (62)
	BaseType -> 'Bool'                                 (63)
	BaseType -> 'Int'                                  (64)
	BaseType -> 'String'                               (65)
	RetType -> 'Unit'                                  (66)
	RetType -> Type                                    (67)
	Type -> BaseType '?'                               (68)
	Type -> BaseType                                   (69)
	Type -> '(' ListType ')' '->' RetType              (70)
	ListType ->                                        (71)
	ListType -> Type                                   (72)
	ListType -> Type ',' ListType                      (73)
	Arg -> Ident ':' Type                              (74)
	ListArg ->                                         (75)
	ListArg -> Arg                                     (76)
	ListArg -> Arg ',' ListArg                         (77)
	Stm -> Dec                                         (78)
	Stm -> Exp ';'                                     (79)
	Stm -> 'run' '{' ListStm '}'                       (80)
	Stm -> 'for' '(' Ident 'in' Iterable ')' '{' ListStm '}'   (81)
	Stm -> 'while' '(' Exp ')' '{' ListStm '}'         (82)
	Stm -> 'break' ';'                                 (83)
	Stm -> 'continue' ';'                              (84)
	Stm -> 'return' Exp ';'                            (85)
	Stm -> 'return' ';'                                (86)
	Stm -> 'if' '(' Exp ')' '{' ListStm '}'            (87)
	Stm -> 'if' '(' Exp ')' '{' ListStm '}' 'else' '{' ListStm '}'   (88)
	Stm -> 'print' '(' Exp ')' ';'                     (89)
	Stm -> 'println' '(' Exp ')' ';'                   (90)
	Stm -> Exp '?.let' '{' ListStm '}'                 (91)
	ListStm ->                                         (92)
	ListStm -> ListStm Stm                             (93)
	Inst -> Dec                                        (94)
	ListInst ->                                        (95)
	ListInst -> ListInst Inst                          (96)
	Dec -> FunctionDec                                 (97)
	Dec -> ArrayDec                                    (98)
	Dec -> 'var' Ident ':' Type '=' Exp ';'            (99)
	Dec -> 'val' Ident ':' Type '=' Exp ';'            (100)
	Dec -> 'var' Ident ':' Type ';'                    (101)
	Dec -> 'val' Ident ':' Type ';'                    (102)
	FunctionDec -> 'fun' Ident '(' ListArg ')' ':' RetType '{' ListStm '}'   (103)
	FunctionExp -> Ident '(' ListExp ')'               (104)
	Iterable -> Ident                                  (105)
	Iterable -> Exp '..' Exp                           (106)
	Iterable -> Exp 'until' Exp                        (107)
	Iterable -> Exp 'downTo' Exp                       (108)
	Iterable -> Exp 'until' Exp 'step' Exp             (109)
	Iterable -> Exp 'downTo' Exp 'step' Exp            (110)
	ArrayDec -> 'val' Ident '=' 'Array' '(' Exp ',' Exp ')' ';'   (111)
	ArrayDec -> 'val' Ident '=' '[' Iterable ']' ';'   (112)

-----------------------------------------------------------------------------
Terminals
-----------------------------------------------------------------------------
	'!'            { PT _ (TS _ 1) }
	'!!'           { PT _ (TS _ 2) }
	'!='           { PT _ (TS _ 3) }
	'%'            { PT _ (TS _ 4) }
	'%='           { PT _ (TS _ 5) }
	'&&'           { PT _ (TS _ 6) }
	'('            { PT _ (TS _ 7) }
	')'            { PT _ (TS _ 8) }
	'*'            { PT _ (TS _ 9) }
	'*='           { PT _ (TS _ 10) }
	'+'            { PT _ (TS _ 11) }
	'++'           { PT _ (TS _ 12) }
	'+='           { PT _ (TS _ 13) }
	','            { PT _ (TS _ 14) }
	'-'            { PT _ (TS _ 15) }
	'--'           { PT _ (TS _ 16) }
	'-='           { PT _ (TS _ 17) }
	'->'           { PT _ (TS _ 18) }
	'..'           { PT _ (TS _ 19) }
	'/'            { PT _ (TS _ 20) }
	'/='           { PT _ (TS _ 21) }
	':'            { PT _ (TS _ 22) }
	';'            { PT _ (TS _ 23) }
	'<'            { PT _ (TS _ 24) }
	'<='           { PT _ (TS _ 25) }
	'='            { PT _ (TS _ 26) }
	'=='           { PT _ (TS _ 27) }
	'>'            { PT _ (TS _ 28) }
	'>='           { PT _ (TS _ 29) }
	'?'            { PT _ (TS _ 30) }
	'?.let'        { PT _ (TS _ 31) }
	'Array'        { PT _ (TS _ 32) }
	'Bool'         { PT _ (TS _ 33) }
	'Int'          { PT _ (TS _ 34) }
	'String'       { PT _ (TS _ 35) }
	'Tupla'        { PT _ (TS _ 36) }
	'Unit'         { PT _ (TS _ 37) }
	'['            { PT _ (TS _ 38) }
	']'            { PT _ (TS _ 39) }
	'break'        { PT _ (TS _ 40) }
	'continue'     { PT _ (TS _ 41) }
	'downTo'       { PT _ (TS _ 42) }
	'else'         { PT _ (TS _ 43) }
	'false'        { PT _ (TS _ 44) }
	'for'          { PT _ (TS _ 45) }
	'fun'          { PT _ (TS _ 46) }
	'if'           { PT _ (TS _ 47) }
	'in'           { PT _ (TS _ 48) }
	'null'         { PT _ (TS _ 49) }
	'print'        { PT _ (TS _ 50) }
	'println'      { PT _ (TS _ 51) }
	'return'       { PT _ (TS _ 52) }
	'run'          { PT _ (TS _ 53) }
	'step'         { PT _ (TS _ 54) }
	'true'         { PT _ (TS _ 55) }
	'until'        { PT _ (TS _ 56) }
	'val'          { PT _ (TS _ 57) }
	'var'          { PT _ (TS _ 58) }
	'while'        { PT _ (TS _ 59) }
	'{'            { PT _ (TS _ 60) }
	'||'           { PT _ (TS _ 61) }
	'}'            { PT _ (TS _ 62) }
	L_integ        { PT _ (TI $$) }
	L_quoted       { PT _ (TL $$) }
	L_ident        { PT _ (TV $$) }

-----------------------------------------------------------------------------
Non-terminals
-----------------------------------------------------------------------------
	%start_pProg    rule  0
	Integer         rule  1
	String          rule  2
	Ident           rule  3
	Prog            rule  4
	Exp             rules 5, 6
	Exp1            rules 7, 8
	Exp2            rules 9, 10
	Exp3            rules 11, 12
	Exp4            rules 13, 14, 15
	Exp5            rules 16, 17, 18, 19, 20
	Exp6            rules 21, 22, 23
	Exp7            rules 24, 25, 26, 27
	Exp8            rules 28, 29, 30, 31, 32
	Exp9            rules 33, 34, 35
	Exp10           rules 36, 37, 38, 39, 40, 41, 42, 43, 44, 45
	Exp11           rules 46, 47
	Exp12           rules 48, 49
	ListExp         rules 50, 51, 52
	DimExp          rule  53
	ListDimExp      rules 54, 55
	OpAssign        rules 56, 57, 58, 59, 60, 61
	BaseType        rules 62, 63, 64, 65
	RetType         rules 66, 67
	Type            rules 68, 69, 70
	ListType        rules 71, 72, 73
	Arg             rule  74
	ListArg         rules 75, 76, 77
	Stm             rules 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91
	ListStm         rules 92, 93
	Inst            rule  94
	ListInst        rules 95, 96
	Dec             rules 97, 98, 99, 100, 101, 102
	FunctionDec     rule  103
	FunctionExp     rule  104
	Iterable        rules 105, 106, 107, 108, 109, 110
	ArrayDec        rules 111, 112

-----------------------------------------------------------------------------
States
-----------------------------------------------------------------------------
State 0


	'fun'          reduce using rule 95
	'val'          reduce using rule 95
	'var'          reduce using rule 95
	%eof           reduce using rule 95

	Prog           goto state 3
	ListInst       goto state 4

State 1


	L_integ        shift, and enter state 2


State 2

	Integer -> L_integ .                                (rule 1)

	'!='           reduce using rule 1
	'%'            reduce using rule 1
	'%='           reduce using rule 1
	'&&'           reduce using rule 1
	')'            reduce using rule 1
	'*'            reduce using rule 1
	'*='           reduce using rule 1
	'+'            reduce using rule 1
	'+='           reduce using rule 1
	','            reduce using rule 1
	'-'            reduce using rule 1
	'-='           reduce using rule 1
	'..'           reduce using rule 1
	'/'            reduce using rule 1
	'/='           reduce using rule 1
	':'            reduce using rule 1
	';'            reduce using rule 1
	'<'            reduce using rule 1
	'<='           reduce using rule 1
	'='            reduce using rule 1
	'=='           reduce using rule 1
	'>'            reduce using rule 1
	'>='           reduce using rule 1
	'?'            reduce using rule 1
	'?.let'        reduce using rule 1
	']'            reduce using rule 1
	'downTo'       reduce using rule 1
	'step'         reduce using rule 1
	'until'        reduce using rule 1
	'||'           reduce using rule 1


State 3

	%start_pProg -> Prog .                              (rule 0)

	%eof           accept


State 4

	Prog -> ListInst .                                  (rule 4)
	ListInst -> ListInst . Inst                         (rule 96)

	'fun'          shift, and enter state 9
	'val'          shift, and enter state 10
	'var'          shift, and enter state 11
	%eof           reduce using rule 4

	Inst           goto state 5
	Dec            goto state 6
	FunctionDec    goto state 7
	ArrayDec       goto state 8

State 5

	ListInst -> ListInst Inst .                         (rule 96)

	'fun'          reduce using rule 96
	'val'          reduce using rule 96
	'var'          reduce using rule 96
	%eof           reduce using rule 96


State 6

	Inst -> Dec .                                       (rule 94)

	'fun'          reduce using rule 94
	'val'          reduce using rule 94
	'var'          reduce using rule 94
	%eof           reduce using rule 94


State 7

	Dec -> FunctionDec .                                (rule 97)

	'!'            reduce using rule 97
	'('            reduce using rule 97
	'++'           reduce using rule 97
	'-'            reduce using rule 97
	'--'           reduce using rule 97
	'Tupla'        reduce using rule 97
	'break'        reduce using rule 97
	'continue'     reduce using rule 97
	'false'        reduce using rule 97
	'for'          reduce using rule 97
	'fun'          reduce using rule 97
	'if'           reduce using rule 97
	'null'         reduce using rule 97
	'print'        reduce using rule 97
	'println'      reduce using rule 97
	'return'       reduce using rule 97
	'run'          reduce using rule 97
	'true'         reduce using rule 97
	'val'          reduce using rule 97
	'var'          reduce using rule 97
	'while'        reduce using rule 97
	'{'            reduce using rule 97
	'}'            reduce using rule 97
	L_integ        reduce using rule 97
	L_quoted       reduce using rule 97
	L_ident        reduce using rule 97
	%eof           reduce using rule 97


State 8

	Dec -> ArrayDec .                                   (rule 98)

	'!'            reduce using rule 98
	'('            reduce using rule 98
	'++'           reduce using rule 98
	'-'            reduce using rule 98
	'--'           reduce using rule 98
	'Tupla'        reduce using rule 98
	'break'        reduce using rule 98
	'continue'     reduce using rule 98
	'false'        reduce using rule 98
	'for'          reduce using rule 98
	'fun'          reduce using rule 98
	'if'           reduce using rule 98
	'null'         reduce using rule 98
	'print'        reduce using rule 98
	'println'      reduce using rule 98
	'return'       reduce using rule 98
	'run'          reduce using rule 98
	'true'         reduce using rule 98
	'val'          reduce using rule 98
	'var'          reduce using rule 98
	'while'        reduce using rule 98
	'{'            reduce using rule 98
	'}'            reduce using rule 98
	L_integ        reduce using rule 98
	L_quoted       reduce using rule 98
	L_ident        reduce using rule 98
	%eof           reduce using rule 98


State 9

	FunctionDec -> 'fun' . Ident '(' ListArg ')' ':' RetType '{' ListStm '}'    (rule 103)

	L_ident        shift, and enter state 13

	Ident          goto state 15

State 10

	Dec -> 'val' . Ident ':' Type '=' Exp ';'           (rule 100)
	Dec -> 'val' . Ident ':' Type ';'                   (rule 102)
	ArrayDec -> 'val' . Ident '=' 'Array' '(' Exp ',' Exp ')' ';'    (rule 111)
	ArrayDec -> 'val' . Ident '=' '[' Iterable ']' ';'    (rule 112)

	L_ident        shift, and enter state 13

	Ident          goto state 14

State 11

	Dec -> 'var' . Ident ':' Type '=' Exp ';'           (rule 99)
	Dec -> 'var' . Ident ':' Type ';'                   (rule 101)

	L_ident        shift, and enter state 13

	Ident          goto state 12

State 12

	Dec -> 'var' Ident . ':' Type '=' Exp ';'           (rule 99)
	Dec -> 'var' Ident . ':' Type ';'                   (rule 101)

	':'            shift, and enter state 19


State 13

	Ident -> L_ident .                                  (rule 3)

	'!!'           reduce using rule 3
	'!='           reduce using rule 3
	'%'            reduce using rule 3
	'%='           reduce using rule 3
	'&&'           reduce using rule 3
	'('            reduce using rule 3
	')'            reduce using rule 3
	'*'            reduce using rule 3
	'*='           reduce using rule 3
	'+'            reduce using rule 3
	'++'           reduce using rule 3
	'+='           reduce using rule 3
	','            reduce using rule 3
	'-'            reduce using rule 3
	'--'           reduce using rule 3
	'-='           reduce using rule 3
	'..'           reduce using rule 3
	'/'            reduce using rule 3
	'/='           reduce using rule 3
	':'            reduce using rule 3
	';'            reduce using rule 3
	'<'            reduce using rule 3
	'<='           reduce using rule 3
	'='            reduce using rule 3
	'=='           reduce using rule 3
	'>'            reduce using rule 3
	'>='           reduce using rule 3
	'?'            reduce using rule 3
	'?.let'        reduce using rule 3
	'['            reduce using rule 3
	']'            reduce using rule 3
	'downTo'       reduce using rule 3
	'in'           reduce using rule 3
	'step'         reduce using rule 3
	'until'        reduce using rule 3
	'||'           reduce using rule 3


State 14

	Dec -> 'val' Ident . ':' Type '=' Exp ';'           (rule 100)
	Dec -> 'val' Ident . ':' Type ';'                   (rule 102)
	ArrayDec -> 'val' Ident . '=' 'Array' '(' Exp ',' Exp ')' ';'    (rule 111)
	ArrayDec -> 'val' Ident . '=' '[' Iterable ']' ';'    (rule 112)

	':'            shift, and enter state 17
	'='            shift, and enter state 18


State 15

	FunctionDec -> 'fun' Ident . '(' ListArg ')' ':' RetType '{' ListStm '}'    (rule 103)

	'('            shift, and enter state 16


State 16

	FunctionDec -> 'fun' Ident '(' . ListArg ')' ':' RetType '{' ListStm '}'    (rule 103)

	')'            reduce using rule 75
	L_ident        shift, and enter state 13

	Ident          goto state 30
	Arg            goto state 31
	ListArg        goto state 32

State 17

	Dec -> 'val' Ident ':' . Type '=' Exp ';'           (rule 100)
	Dec -> 'val' Ident ':' . Type ';'                   (rule 102)

	'('            shift, and enter state 22
	'Bool'         shift, and enter state 23
	'Int'          shift, and enter state 24
	'String'       shift, and enter state 25
	'Tupla'        shift, and enter state 26

	BaseType       goto state 20
	Type           goto state 29

State 18

	ArrayDec -> 'val' Ident '=' . 'Array' '(' Exp ',' Exp ')' ';'    (rule 111)
	ArrayDec -> 'val' Ident '=' . '[' Iterable ']' ';'    (rule 112)

	'Array'        shift, and enter state 27
	'['            shift, and enter state 28


State 19

	Dec -> 'var' Ident ':' . Type '=' Exp ';'           (rule 99)
	Dec -> 'var' Ident ':' . Type ';'                   (rule 101)

	'('            shift, and enter state 22
	'Bool'         shift, and enter state 23
	'Int'          shift, and enter state 24
	'String'       shift, and enter state 25
	'Tupla'        shift, and enter state 26

	BaseType       goto state 20
	Type           goto state 21

State 20

	Type -> BaseType . '?'                              (rule 68)
	Type -> BaseType .                                  (rule 69)

	')'            reduce using rule 69
	','            reduce using rule 69
	'->'           reduce using rule 69
	';'            reduce using rule 69
	'='            reduce using rule 69
	'>'            reduce using rule 69
	'?'            shift, and enter state 73
	'{'            reduce using rule 69


State 21

	Dec -> 'var' Ident ':' Type . '=' Exp ';'           (rule 99)
	Dec -> 'var' Ident ':' Type . ';'                   (rule 101)

	';'            shift, and enter state 71
	'='            shift, and enter state 72


State 22

	Type -> '(' . ListType ')' '->' RetType             (rule 70)

	'('            shift, and enter state 22
	')'            reduce using rule 71
	'Bool'         shift, and enter state 23
	'Int'          shift, and enter state 24
	'String'       shift, and enter state 25
	'Tupla'        shift, and enter state 26

	BaseType       goto state 20
	Type           goto state 69
	ListType       goto state 70

State 23

	BaseType -> 'Bool' .                                (rule 63)

	')'            reduce using rule 63
	','            reduce using rule 63
	'->'           reduce using rule 63
	';'            reduce using rule 63
	'='            reduce using rule 63
	'>'            reduce using rule 63
	'?'            reduce using rule 63
	'{'            reduce using rule 63


State 24

	BaseType -> 'Int' .                                 (rule 64)

	')'            reduce using rule 64
	','            reduce using rule 64
	'->'           reduce using rule 64
	';'            reduce using rule 64
	'='            reduce using rule 64
	'>'            reduce using rule 64
	'?'            reduce using rule 64
	'{'            reduce using rule 64


State 25

	BaseType -> 'String' .                              (rule 65)

	')'            reduce using rule 65
	','            reduce using rule 65
	'->'           reduce using rule 65
	';'            reduce using rule 65
	'='            reduce using rule 65
	'>'            reduce using rule 65
	'?'            reduce using rule 65
	'{'            reduce using rule 65


State 26

	BaseType -> 'Tupla' . '<' ListType '>'              (rule 62)

	'<'            shift, and enter state 68


State 27

	ArrayDec -> 'val' Ident '=' 'Array' . '(' Exp ',' Exp ')' ';'    (rule 111)

	'('            shift, and enter state 67


State 28

	ArrayDec -> 'val' Ident '=' '[' . Iterable ']' ';'    (rule 112)

	'!'            shift, and enter state 56
	'('            shift, and enter state 57
	'++'           shift, and enter state 58
	'-'            shift, and enter state 59
	'--'           shift, and enter state 60
	'Tupla'        shift, and enter state 61
	'false'        shift, and enter state 62
	'null'         shift, and enter state 63
	'true'         shift, and enter state 64
	'{'            shift, and enter state 65
	L_integ        shift, and enter state 2
	L_quoted       shift, and enter state 66
	L_ident        shift, and enter state 13

	Integer        goto state 38
	String         goto state 39
	Ident          goto state 40
	Exp            goto state 41
	Exp1           goto state 42
	Exp2           goto state 43
	Exp3           goto state 44
	Exp4           goto state 45
	Exp5           goto state 46
	Exp6           goto state 47
	Exp7           goto state 48
	Exp8           goto state 49
	Exp9           goto state 50
	Exp10          goto state 51
	Exp11          goto state 52
	Exp12          goto state 53
	FunctionExp    goto state 54
	Iterable       goto state 55

State 29

	Dec -> 'val' Ident ':' Type . '=' Exp ';'           (rule 100)
	Dec -> 'val' Ident ':' Type . ';'                   (rule 102)

	';'            shift, and enter state 36
	'='            shift, and enter state 37


State 30

	Arg -> Ident . ':' Type                             (rule 74)

	':'            shift, and enter state 35


State 31

	ListArg -> Arg .                                    (rule 76)
	ListArg -> Arg . ',' ListArg                        (rule 77)

	')'            reduce using rule 76
	','            shift, and enter state 34
	'->'           reduce using rule 76


State 32

	FunctionDec -> 'fun' Ident '(' ListArg . ')' ':' RetType '{' ListStm '}'    (rule 103)

	')'            shift, and enter state 33


State 33

	FunctionDec -> 'fun' Ident '(' ListArg ')' . ':' RetType '{' ListStm '}'    (rule 103)

	':'            shift, and enter state 123


State 34

	ListArg -> Arg ',' . ListArg                        (rule 77)

	')'            reduce using rule 75
	'->'           reduce using rule 75
	L_ident        shift, and enter state 13

	Ident          goto state 30
	Arg            goto state 31
	ListArg        goto state 122

State 35

	Arg -> Ident ':' . Type                             (rule 74)

	'('            shift, and enter state 22
	'Bool'         shift, and enter state 23
	'Int'          shift, and enter state 24
	'String'       shift, and enter state 25
	'Tupla'        shift, and enter state 26

	BaseType       goto state 20
	Type           goto state 121

State 36

	Dec -> 'val' Ident ':' Type ';' .                   (rule 102)

	'!'            reduce using rule 102
	'('            reduce using rule 102
	'++'           reduce using rule 102
	'-'            reduce using rule 102
	'--'           reduce using rule 102
	'Tupla'        reduce using rule 102
	'break'        reduce using rule 102
	'continue'     reduce using rule 102
	'false'        reduce using rule 102
	'for'          reduce using rule 102
	'fun'          reduce using rule 102
	'if'           reduce using rule 102
	'null'         reduce using rule 102
	'print'        reduce using rule 102
	'println'      reduce using rule 102
	'return'       reduce using rule 102
	'run'          reduce using rule 102
	'true'         reduce using rule 102
	'val'          reduce using rule 102
	'var'          reduce using rule 102
	'while'        reduce using rule 102
	'{'            reduce using rule 102
	'}'            reduce using rule 102
	L_integ        reduce using rule 102
	L_quoted       reduce using rule 102
	L_ident        reduce using rule 102
	%eof           reduce using rule 102


State 37

	Dec -> 'val' Ident ':' Type '=' . Exp ';'           (rule 100)

	'!'            shift, and enter state 56
	'('            shift, and enter state 57
	'++'           shift, and enter state 58
	'-'            shift, and enter state 59
	'--'           shift, and enter state 60
	'Tupla'        shift, and enter state 61
	'false'        shift, and enter state 62
	'null'         shift, and enter state 63
	'true'         shift, and enter state 64
	'{'            shift, and enter state 65
	L_integ        shift, and enter state 2
	L_quoted       shift, and enter state 66
	L_ident        shift, and enter state 13

	Integer        goto state 38
	String         goto state 39
	Ident          goto state 74
	Exp            goto state 120
	Exp1           goto state 42
	Exp2           goto state 43
	Exp3           goto state 44
	Exp4           goto state 45
	Exp5           goto state 46
	Exp6           goto state 47
	Exp7           goto state 48
	Exp8           goto state 49
	Exp9           goto state 50
	Exp10          goto state 51
	Exp11          goto state 52
	Exp12          goto state 53
	FunctionExp    goto state 54

State 38

	Exp10 -> Integer .                                  (rule 37)

	'!='           reduce using rule 37
	'%'            reduce using rule 37
	'%='           reduce using rule 37
	'&&'           reduce using rule 37
	')'            reduce using rule 37
	'*'            reduce using rule 37
	'*='           reduce using rule 37
	'+'            reduce using rule 37
	'+='           reduce using rule 37
	','            reduce using rule 37
	'-'            reduce using rule 37
	'-='           reduce using rule 37
	'..'           reduce using rule 37
	'/'            reduce using rule 37
	'/='           reduce using rule 37
	':'            reduce using rule 37
	';'            reduce using rule 37
	'<'            reduce using rule 37
	'<='           reduce using rule 37
	'='            reduce using rule 37
	'=='           reduce using rule 37
	'>'            reduce using rule 37
	'>='           reduce using rule 37
	'?'            reduce using rule 37
	'?.let'        reduce using rule 37
	']'            reduce using rule 37
	'downTo'       reduce using rule 37
	'step'         reduce using rule 37
	'until'        reduce using rule 37
	'||'           reduce using rule 37


State 39

	Exp10 -> String .                                   (rule 38)

	'!='           reduce using rule 38
	'%'            reduce using rule 38
	'%='           reduce using rule 38
	'&&'           reduce using rule 38
	')'            reduce using rule 38
	'*'            reduce using rule 38
	'*='           reduce using rule 38
	'+'            reduce using rule 38
	'+='           reduce using rule 38
	','            reduce using rule 38
	'-'            reduce using rule 38
	'-='           reduce using rule 38
	'..'           reduce using rule 38
	'/'            reduce using rule 38
	'/='           reduce using rule 38
	':'            reduce using rule 38
	';'            reduce using rule 38
	'<'            reduce using rule 38
	'<='           reduce using rule 38
	'='            reduce using rule 38
	'=='           reduce using rule 38
	'>'            reduce using rule 38
	'>='           reduce using rule 38
	'?'            reduce using rule 38
	'?.let'        reduce using rule 38
	']'            reduce using rule 38
	'downTo'       reduce using rule 38
	'step'         reduce using rule 38
	'until'        reduce using rule 38
	'||'           reduce using rule 38


State 40

	Exp10 -> Ident . ListDimExp                         (rule 43)
	Exp12 -> Ident .                                    (rule 48)
	FunctionExp -> Ident . '(' ListExp ')'              (rule 104)
	Iterable -> Ident .                                 (rule 105)

	'!!'           reduce using rule 48
	'!='           reduce using rule 48
	'%'            reduce using rule 48
	'%='           reduce using rule 48
	'&&'           reduce using rule 48
	'('            shift, and enter state 118
	')'            reduce using rule 105
	'*'            reduce using rule 48
	'*='           reduce using rule 48
	'+'            reduce using rule 48
	'++'           reduce using rule 48
	'+='           reduce using rule 48
	'-'            reduce using rule 48
	'--'           reduce using rule 48
	'-='           reduce using rule 48
	'..'           reduce using rule 48
	'/'            reduce using rule 48
	'/='           reduce using rule 48
	'<'            reduce using rule 48
	'<='           reduce using rule 48
	'='            reduce using rule 48
	'=='           reduce using rule 48
	'>'            reduce using rule 48
	'>='           reduce using rule 48
	'?'            reduce using rule 48
	'['            shift, and enter state 119
	']'            reduce using rule 105
	'downTo'       reduce using rule 48
	'until'        reduce using rule 48
	'||'           reduce using rule 48

	DimExp         goto state 116
	ListDimExp     goto state 117

State 41

	Exp -> Exp . OpAssign Exp1                          (rule 5)
	Iterable -> Exp . '..' Exp                          (rule 106)
	Iterable -> Exp . 'until' Exp                       (rule 107)
	Iterable -> Exp . 'downTo' Exp                      (rule 108)
	Iterable -> Exp . 'until' Exp 'step' Exp            (rule 109)
	Iterable -> Exp . 'downTo' Exp 'step' Exp           (rule 110)

	'%='           shift, and enter state 107
	'*='           shift, and enter state 108
	'+='           shift, and enter state 109
	'-='           shift, and enter state 110
	'..'           shift, and enter state 111
	'/='           shift, and enter state 112
	'='            shift, and enter state 113
	'downTo'       shift, and enter state 114
	'until'        shift, and enter state 115

	OpAssign       goto state 106

State 42

	Exp -> Exp1 .                                       (rule 6)

	'%='           reduce using rule 6
	')'            reduce using rule 6
	'*='           reduce using rule 6
	'+='           reduce using rule 6
	','            reduce using rule 6
	'-='           reduce using rule 6
	'..'           reduce using rule 6
	'/='           reduce using rule 6
	';'            reduce using rule 6
	'='            reduce using rule 6
	'?.let'        reduce using rule 6
	']'            reduce using rule 6
	'downTo'       reduce using rule 6
	'step'         reduce using rule 6
	'until'        reduce using rule 6


State 43

	Exp1 -> Exp2 .                                      (rule 8)
	Exp2 -> Exp2 . '||' Exp3                            (rule 9)

	'%='           reduce using rule 8
	')'            reduce using rule 8
	'*='           reduce using rule 8
	'+='           reduce using rule 8
	','            reduce using rule 8
	'-='           reduce using rule 8
	'..'           reduce using rule 8
	'/='           reduce using rule 8
	':'            reduce using rule 8
	';'            reduce using rule 8
	'='            reduce using rule 8
	'?.let'        reduce using rule 8
	']'            reduce using rule 8
	'downTo'       reduce using rule 8
	'step'         reduce using rule 8
	'until'        reduce using rule 8
	'||'           shift, and enter state 105


State 44

	Exp1 -> Exp3 . '?' Exp1 ':' Exp2                    (rule 7)
	Exp2 -> Exp3 .                                      (rule 10)
	Exp3 -> Exp3 . '&&' Exp4                            (rule 11)

	'%='           reduce using rule 10
	'&&'           shift, and enter state 103
	')'            reduce using rule 10
	'*='           reduce using rule 10
	'+='           reduce using rule 10
	','            reduce using rule 10
	'-='           reduce using rule 10
	'..'           reduce using rule 10
	'/='           reduce using rule 10
	':'            reduce using rule 10
	';'            reduce using rule 10
	'='            reduce using rule 10
	'?'            shift, and enter state 104
	'?.let'        reduce using rule 10
	']'            reduce using rule 10
	'downTo'       reduce using rule 10
	'step'         reduce using rule 10
	'until'        reduce using rule 10
	'||'           reduce using rule 10


State 45

	Exp3 -> Exp4 .                                      (rule 12)
	Exp4 -> Exp4 . '==' Exp5                            (rule 13)
	Exp4 -> Exp4 . '!=' Exp5                            (rule 14)

	'!='           shift, and enter state 101
	'%='           reduce using rule 12
	'&&'           reduce using rule 12
	')'            reduce using rule 12
	'*='           reduce using rule 12
	'+='           reduce using rule 12
	','            reduce using rule 12
	'-='           reduce using rule 12
	'..'           reduce using rule 12
	'/='           reduce using rule 12
	':'            reduce using rule 12
	';'            reduce using rule 12
	'='            reduce using rule 12
	'=='           shift, and enter state 102
	'?'            reduce using rule 12
	'?.let'        reduce using rule 12
	']'            reduce using rule 12
	'downTo'       reduce using rule 12
	'step'         reduce using rule 12
	'until'        reduce using rule 12
	'||'           reduce using rule 12


State 46

	Exp4 -> Exp5 .                                      (rule 15)
	Exp5 -> Exp5 . '<' Exp6                             (rule 16)
	Exp5 -> Exp5 . '>' Exp6                             (rule 17)
	Exp5 -> Exp5 . '<=' Exp6                            (rule 18)
	Exp5 -> Exp5 . '>=' Exp6                            (rule 19)

	'!='           reduce using rule 15
	'%='           reduce using rule 15
	'&&'           reduce using rule 15
	')'            reduce using rule 15
	'*='           reduce using rule 15
	'+='           reduce using rule 15
	','            reduce using rule 15
	'-='           reduce using rule 15
	'..'           reduce using rule 15
	'/='           reduce using rule 15
	':'            reduce using rule 15
	';'            reduce using rule 15
	'<'            shift, and enter state 97
	'<='           shift, and enter state 98
	'='            reduce using rule 15
	'=='           reduce using rule 15
	'>'            shift, and enter state 99
	'>='           shift, and enter state 100
	'?'            reduce using rule 15
	'?.let'        reduce using rule 15
	']'            reduce using rule 15
	'downTo'       reduce using rule 15
	'step'         reduce using rule 15
	'until'        reduce using rule 15
	'||'           reduce using rule 15


State 47

	Exp5 -> Exp6 .                                      (rule 20)
	Exp6 -> Exp6 . '+' Exp7                             (rule 21)
	Exp6 -> Exp6 . '-' Exp7                             (rule 22)

	'!='           reduce using rule 20
	'%='           reduce using rule 20
	'&&'           reduce using rule 20
	')'            reduce using rule 20
	'*='           reduce using rule 20
	'+'            shift, and enter state 95
	'+='           reduce using rule 20
	','            reduce using rule 20
	'-'            shift, and enter state 96
	'-='           reduce using rule 20
	'..'           reduce using rule 20
	'/='           reduce using rule 20
	':'            reduce using rule 20
	';'            reduce using rule 20
	'<'            reduce using rule 20
	'<='           reduce using rule 20
	'='            reduce using rule 20
	'=='           reduce using rule 20
	'>'            reduce using rule 20
	'>='           reduce using rule 20
	'?'            reduce using rule 20
	'?.let'        reduce using rule 20
	']'            reduce using rule 20
	'downTo'       reduce using rule 20
	'step'         reduce using rule 20
	'until'        reduce using rule 20
	'||'           reduce using rule 20


State 48

	Exp6 -> Exp7 .                                      (rule 23)
	Exp7 -> Exp7 . '*' Exp8                             (rule 24)
	Exp7 -> Exp7 . '/' Exp8                             (rule 25)
	Exp7 -> Exp7 . '%' Exp8                             (rule 26)

	'!='           reduce using rule 23
	'%'            shift, and enter state 92
	'%='           reduce using rule 23
	'&&'           reduce using rule 23
	')'            reduce using rule 23
	'*'            shift, and enter state 93
	'*='           reduce using rule 23
	'+'            reduce using rule 23
	'+='           reduce using rule 23
	','            reduce using rule 23
	'-'            reduce using rule 23
	'-='           reduce using rule 23
	'..'           reduce using rule 23
	'/'            shift, and enter state 94
	'/='           reduce using rule 23
	':'            reduce using rule 23
	';'            reduce using rule 23
	'<'            reduce using rule 23
	'<='           reduce using rule 23
	'='            reduce using rule 23
	'=='           reduce using rule 23
	'>'            reduce using rule 23
	'>='           reduce using rule 23
	'?'            reduce using rule 23
	'?.let'        reduce using rule 23
	']'            reduce using rule 23
	'downTo'       reduce using rule 23
	'step'         reduce using rule 23
	'until'        reduce using rule 23
	'||'           reduce using rule 23


State 49

	Exp7 -> Exp8 .                                      (rule 27)

	'!='           reduce using rule 27
	'%'            reduce using rule 27
	'%='           reduce using rule 27
	'&&'           reduce using rule 27
	')'            reduce using rule 27
	'*'            reduce using rule 27
	'*='           reduce using rule 27
	'+'            reduce using rule 27
	'+='           reduce using rule 27
	','            reduce using rule 27
	'-'            reduce using rule 27
	'-='           reduce using rule 27
	'..'           reduce using rule 27
	'/'            reduce using rule 27
	'/='           reduce using rule 27
	':'            reduce using rule 27
	';'            reduce using rule 27
	'<'            reduce using rule 27
	'<='           reduce using rule 27
	'='            reduce using rule 27
	'=='           reduce using rule 27
	'>'            reduce using rule 27
	'>='           reduce using rule 27
	'?'            reduce using rule 27
	'?.let'        reduce using rule 27
	']'            reduce using rule 27
	'downTo'       reduce using rule 27
	'step'         reduce using rule 27
	'until'        reduce using rule 27
	'||'           reduce using rule 27


State 50

	Exp8 -> Exp9 .                                      (rule 32)

	'!='           reduce using rule 32
	'%'            reduce using rule 32
	'%='           reduce using rule 32
	'&&'           reduce using rule 32
	')'            reduce using rule 32
	'*'            reduce using rule 32
	'*='           reduce using rule 32
	'+'            reduce using rule 32
	'+='           reduce using rule 32
	','            reduce using rule 32
	'-'            reduce using rule 32
	'-='           reduce using rule 32
	'..'           reduce using rule 32
	'/'            reduce using rule 32
	'/='           reduce using rule 32
	':'            reduce using rule 32
	';'            reduce using rule 32
	'<'            reduce using rule 32
	'<='           reduce using rule 32
	'='            reduce using rule 32
	'=='           reduce using rule 32
	'>'            reduce using rule 32
	'>='           reduce using rule 32
	'?'            reduce using rule 32
	'?.let'        reduce using rule 32
	']'            reduce using rule 32
	'downTo'       reduce using rule 32
	'step'         reduce using rule 32
	'until'        reduce using rule 32
	'||'           reduce using rule 32


State 51

	Exp9 -> Exp10 .                                     (rule 35)

	'!='           reduce using rule 35
	'%'            reduce using rule 35
	'%='           reduce using rule 35
	'&&'           reduce using rule 35
	')'            reduce using rule 35
	'*'            reduce using rule 35
	'*='           reduce using rule 35
	'+'            reduce using rule 35
	'+='           reduce using rule 35
	','            reduce using rule 35
	'-'            reduce using rule 35
	'-='           reduce using rule 35
	'..'           reduce using rule 35
	'/'            reduce using rule 35
	'/='           reduce using rule 35
	':'            reduce using rule 35
	';'            reduce using rule 35
	'<'            reduce using rule 35
	'<='           reduce using rule 35
	'='            reduce using rule 35
	'=='           reduce using rule 35
	'>'            reduce using rule 35
	'>='           reduce using rule 35
	'?'            reduce using rule 35
	'?.let'        reduce using rule 35
	']'            reduce using rule 35
	'downTo'       reduce using rule 35
	'step'         reduce using rule 35
	'until'        reduce using rule 35
	'||'           reduce using rule 35


State 52

	Exp10 -> Exp11 .                                    (rule 45)
	Exp11 -> Exp11 . '!!'                               (rule 46)

	'!!'           shift, and enter state 91
	'!='           reduce using rule 45
	'%'            reduce using rule 45
	'%='           reduce using rule 45
	'&&'           reduce using rule 45
	')'            reduce using rule 45
	'*'            reduce using rule 45
	'*='           reduce using rule 45
	'+'            reduce using rule 45
	'+='           reduce using rule 45
	','            reduce using rule 45
	'-'            reduce using rule 45
	'-='           reduce using rule 45
	'..'           reduce using rule 45
	'/'            reduce using rule 45
	'/='           reduce using rule 45
	':'            reduce using rule 45
	';'            reduce using rule 45
	'<'            reduce using rule 45
	'<='           reduce using rule 45
	'='            reduce using rule 45
	'=='           reduce using rule 45
	'>'            reduce using rule 45
	'>='           reduce using rule 45
	'?'            reduce using rule 45
	'?.let'        reduce using rule 45
	']'            reduce using rule 45
	'downTo'       reduce using rule 45
	'step'         reduce using rule 45
	'until'        reduce using rule 45
	'||'           reduce using rule 45


State 53

	Exp9 -> Exp12 . '++'                                (rule 33)
	Exp9 -> Exp12 . '--'                                (rule 34)
	Exp11 -> Exp12 .                                    (rule 47)

	'!!'           reduce using rule 47
	'!='           reduce using rule 47
	'%'            reduce using rule 47
	'%='           reduce using rule 47
	'&&'           reduce using rule 47
	')'            reduce using rule 47
	'*'            reduce using rule 47
	'*='           reduce using rule 47
	'+'            reduce using rule 47
	'++'           shift, and enter state 89
	'+='           reduce using rule 47
	','            reduce using rule 47
	'-'            reduce using rule 47
	'--'           shift, and enter state 90
	'-='           reduce using rule 47
	'..'           reduce using rule 47
	'/'            reduce using rule 47
	'/='           reduce using rule 47
	':'            reduce using rule 47
	';'            reduce using rule 47
	'<'            reduce using rule 47
	'<='           reduce using rule 47
	'='            reduce using rule 47
	'=='           reduce using rule 47
	'>'            reduce using rule 47
	'>='           reduce using rule 47
	'?'            reduce using rule 47
	'?.let'        reduce using rule 47
	']'            reduce using rule 47
	'downTo'       reduce using rule 47
	'step'         reduce using rule 47
	'until'        reduce using rule 47
	'||'           reduce using rule 47


State 54

	Exp10 -> FunctionExp .                              (rule 42)

	'!='           reduce using rule 42
	'%'            reduce using rule 42
	'%='           reduce using rule 42
	'&&'           reduce using rule 42
	')'            reduce using rule 42
	'*'            reduce using rule 42
	'*='           reduce using rule 42
	'+'            reduce using rule 42
	'+='           reduce using rule 42
	','            reduce using rule 42
	'-'            reduce using rule 42
	'-='           reduce using rule 42
	'..'           reduce using rule 42
	'/'            reduce using rule 42
	'/='           reduce using rule 42
	':'            reduce using rule 42
	';'            reduce using rule 42
	'<'            reduce using rule 42
	'<='           reduce using rule 42
	'='            reduce using rule 42
	'=='           reduce using rule 42
	'>'            reduce using rule 42
	'>='           reduce using rule 42
	'?'            reduce using rule 42
	'?.let'        reduce using rule 42
	']'            reduce using rule 42
	'downTo'       reduce using rule 42
	'step'         reduce using rule 42
	'until'        reduce using rule 42
	'||'           reduce using rule 42


State 55

	ArrayDec -> 'val' Ident '=' '[' Iterable . ']' ';'    (rule 112)

	']'            shift, and enter state 88


State 56

	Exp8 -> '!' . Exp8                                  (rule 29)

	'!'            shift, and enter state 56
	'('            shift, and enter state 57
	'++'           shift, and enter state 58
	'-'            shift, and enter state 59
	'--'           shift, and enter state 60
	'Tupla'        shift, and enter state 61
	'false'        shift, and enter state 62
	'null'         shift, and enter state 63
	'true'         shift, and enter state 64
	'{'            shift, and enter state 65
	L_integ        shift, and enter state 2
	L_quoted       shift, and enter state 66
	L_ident        shift, and enter state 13

	Integer        goto state 38
	String         goto state 39
	Ident          goto state 74
	Exp8           goto state 87
	Exp9           goto state 50
	Exp10          goto state 51
	Exp11          goto state 52
	Exp12          goto state 53
	FunctionExp    goto state 54

State 57

	Exp12 -> '(' . Exp ')'                              (rule 49)

	'!'            shift, and enter state 56
	'('            shift, and enter state 57
	'++'           shift, and enter state 58
	'-'            shift, and enter state 59
	'--'           shift, and enter state 60
	'Tupla'        shift, and enter state 61
	'false'        shift, and enter state 62
	'null'         shift, and enter state 63
	'true'         shift, and enter state 64
	'{'            shift, and enter state 65
	L_integ        shift, and enter state 2
	L_quoted       shift, and enter state 66
	L_ident        shift, and enter state 13

	Integer        goto state 38
	String         goto state 39
	Ident          goto state 74
	Exp            goto state 86
	Exp1           goto state 42
	Exp2           goto state 43
	Exp3           goto state 44
	Exp4           goto state 45
	Exp5           goto state 46
	Exp6           goto state 47
	Exp7           goto state 48
	Exp8           goto state 49
	Exp9           goto state 50
	Exp10          goto state 51
	Exp11          goto state 52
	Exp12          goto state 53
	FunctionExp    goto state 54

State 58

	Exp8 -> '++' . Exp12                                (rule 30)

	'('            shift, and enter state 57
	L_ident        shift, and enter state 13

	Ident          goto state 82
	Exp12          goto state 85

State 59

	Exp8 -> '-' . Exp8                                  (rule 28)

	'!'            shift, and enter state 56
	'('            shift, and enter state 57
	'++'           shift, and enter state 58
	'-'            shift, and enter state 59
	'--'           shift, and enter state 60
	'Tupla'        shift, and enter state 61
	'false'        shift, and enter state 62
	'null'         shift, and enter state 63
	'true'         shift, and enter state 64
	'{'            shift, and enter state 65
	L_integ        shift, and enter state 2
	L_quoted       shift, and enter state 66
	L_ident        shift, and enter state 13

	Integer        goto state 38
	String         goto state 39
	Ident          goto state 74
	Exp8           goto state 84
	Exp9           goto state 50
	Exp10          goto state 51
	Exp11          goto state 52
	Exp12          goto state 53
	FunctionExp    goto state 54

State 60

	Exp8 -> '--' . Exp12                                (rule 31)

	'('            shift, and enter state 57
	L_ident        shift, and enter state 13

	Ident          goto state 82
	Exp12          goto state 83

State 61

	Exp10 -> 'Tupla' . '(' ListExp ')'                  (rule 36)

	'('            shift, and enter state 81


State 62

	Exp10 -> 'false' .                                  (rule 40)

	'!='           reduce using rule 40
	'%'            reduce using rule 40
	'%='           reduce using rule 40
	'&&'           reduce using rule 40
	')'            reduce using rule 40
	'*'            reduce using rule 40
	'*='           reduce using rule 40
	'+'            reduce using rule 40
	'+='           reduce using rule 40
	','            reduce using rule 40
	'-'            reduce using rule 40
	'-='           reduce using rule 40
	'..'           reduce using rule 40
	'/'            reduce using rule 40
	'/='           reduce using rule 40
	':'            reduce using rule 40
	';'            reduce using rule 40
	'<'            reduce using rule 40
	'<='           reduce using rule 40
	'='            reduce using rule 40
	'=='           reduce using rule 40
	'>'            reduce using rule 40
	'>='           reduce using rule 40
	'?'            reduce using rule 40
	'?.let'        reduce using rule 40
	']'            reduce using rule 40
	'downTo'       reduce using rule 40
	'step'         reduce using rule 40
	'until'        reduce using rule 40
	'||'           reduce using rule 40


State 63

	Exp10 -> 'null' .                                   (rule 41)

	'!='           reduce using rule 41
	'%'            reduce using rule 41
	'%='           reduce using rule 41
	'&&'           reduce using rule 41
	')'            reduce using rule 41
	'*'            reduce using rule 41
	'*='           reduce using rule 41
	'+'            reduce using rule 41
	'+='           reduce using rule 41
	','            reduce using rule 41
	'-'            reduce using rule 41
	'-='           reduce using rule 41
	'..'           reduce using rule 41
	'/'            reduce using rule 41
	'/='           reduce using rule 41
	':'            reduce using rule 41
	';'            reduce using rule 41
	'<'            reduce using rule 41
	'<='           reduce using rule 41
	'='            reduce using rule 41
	'=='           reduce using rule 41
	'>'            reduce using rule 41
	'>='           reduce using rule 41
	'?'            reduce using rule 41
	'?.let'        reduce using rule 41
	']'            reduce using rule 41
	'downTo'       reduce using rule 41
	'step'         reduce using rule 41
	'until'        reduce using rule 41
	'||'           reduce using rule 41


State 64

	Exp10 -> 'true' .                                   (rule 39)

	'!='           reduce using rule 39
	'%'            reduce using rule 39
	'%='           reduce using rule 39
	'&&'           reduce using rule 39
	')'            reduce using rule 39
	'*'            reduce using rule 39
	'*='           reduce using rule 39
	'+'            reduce using rule 39
	'+='           reduce using rule 39
	','            reduce using rule 39
	'-'            reduce using rule 39
	'-='           reduce using rule 39
	'..'           reduce using rule 39
	'/'            reduce using rule 39
	'/='           reduce using rule 39
	':'            reduce using rule 39
	';'            reduce using rule 39
	'<'            reduce using rule 39
	'<='           reduce using rule 39
	'='            reduce using rule 39
	'=='           reduce using rule 39
	'>'            reduce using rule 39
	'>='           reduce using rule 39
	'?'            reduce using rule 39
	'?.let'        reduce using rule 39
	']'            reduce using rule 39
	'downTo'       reduce using rule 39
	'step'         reduce using rule 39
	'until'        reduce using rule 39
	'||'           reduce using rule 39


State 65

	Exp10 -> '{' . ListArg '->' ListStm '}'             (rule 44)

	'->'           reduce using rule 75
	L_ident        shift, and enter state 13

	Ident          goto state 30
	Arg            goto state 31
	ListArg        goto state 80

State 66

	String -> L_quoted .                                (rule 2)

	'!='           reduce using rule 2
	'%'            reduce using rule 2
	'%='           reduce using rule 2
	'&&'           reduce using rule 2
	')'            reduce using rule 2
	'*'            reduce using rule 2
	'*='           reduce using rule 2
	'+'            reduce using rule 2
	'+='           reduce using rule 2
	','            reduce using rule 2
	'-'            reduce using rule 2
	'-='           reduce using rule 2
	'..'           reduce using rule 2
	'/'            reduce using rule 2
	'/='           reduce using rule 2
	':'            reduce using rule 2
	';'            reduce using rule 2
	'<'            reduce using rule 2
	'<='           reduce using rule 2
	'='            reduce using rule 2
	'=='           reduce using rule 2
	'>'            reduce using rule 2
	'>='           reduce using rule 2
	'?'            reduce using rule 2
	'?.let'        reduce using rule 2
	']'            reduce using rule 2
	'downTo'       reduce using rule 2
	'step'         reduce using rule 2
	'until'        reduce using rule 2
	'||'           reduce using rule 2


State 67

	ArrayDec -> 'val' Ident '=' 'Array' '(' . Exp ',' Exp ')' ';'    (rule 111)

	'!'            shift, and enter state 56
	'('            shift, and enter state 57
	'++'           shift, and enter state 58
	'-'            shift, and enter state 59
	'--'           shift, and enter state 60
	'Tupla'        shift, and enter state 61
	'false'        shift, and enter state 62
	'null'         shift, and enter state 63
	'true'         shift, and enter state 64
	'{'            shift, and enter state 65
	L_integ        shift, and enter state 2
	L_quoted       shift, and enter state 66
	L_ident        shift, and enter state 13

	Integer        goto state 38
	String         goto state 39
	Ident          goto state 74
	Exp            goto state 79
	Exp1           goto state 42
	Exp2           goto state 43
	Exp3           goto state 44
	Exp4           goto state 45
	Exp5           goto state 46
	Exp6           goto state 47
	Exp7           goto state 48
	Exp8           goto state 49
	Exp9           goto state 50
	Exp10          goto state 51
	Exp11          goto state 52
	Exp12          goto state 53
	FunctionExp    goto state 54

State 68

	BaseType -> 'Tupla' '<' . ListType '>'              (rule 62)

	'('            shift, and enter state 22
	'>'            reduce using rule 71
	'Bool'         shift, and enter state 23
	'Int'          shift, and enter state 24
	'String'       shift, and enter state 25
	'Tupla'        shift, and enter state 26

	BaseType       goto state 20
	Type           goto state 69
	ListType       goto state 78

State 69

	ListType -> Type .                                  (rule 72)
	ListType -> Type . ',' ListType                     (rule 73)

	')'            reduce using rule 72
	','            shift, and enter state 77
	'>'            reduce using rule 72


State 70

	Type -> '(' ListType . ')' '->' RetType             (rule 70)

	')'            shift, and enter state 76


State 71

	Dec -> 'var' Ident ':' Type ';' .                   (rule 101)

	'!'            reduce using rule 101
	'('            reduce using rule 101
	'++'           reduce using rule 101
	'-'            reduce using rule 101
	'--'           reduce using rule 101
	'Tupla'        reduce using rule 101
	'break'        reduce using rule 101
	'continue'     reduce using rule 101
	'false'        reduce using rule 101
	'for'          reduce using rule 101
	'fun'          reduce using rule 101
	'if'           reduce using rule 101
	'null'         reduce using rule 101
	'print'        reduce using rule 101
	'println'      reduce using rule 101
	'return'       reduce using rule 101
	'run'          reduce using rule 101
	'true'         reduce using rule 101
	'val'          reduce using rule 101
	'var'          reduce using rule 101
	'while'        reduce using rule 101
	'{'            reduce using rule 101
	'}'            reduce using rule 101
	L_integ        reduce using rule 101
	L_quoted       reduce using rule 101
	L_ident        reduce using rule 101
	%eof           reduce using rule 101


State 72

	Dec -> 'var' Ident ':' Type '=' . Exp ';'           (rule 99)

	'!'            shift, and enter state 56
	'('            shift, and enter state 57
	'++'           shift, and enter state 58
	'-'            shift, and enter state 59
	'--'           shift, and enter state 60
	'Tupla'        shift, and enter state 61
	'false'        shift, and enter state 62
	'null'         shift, and enter state 63
	'true'         shift, and enter state 64
	'{'            shift, and enter state 65
	L_integ        shift, and enter state 2
	L_quoted       shift, and enter state 66
	L_ident        shift, and enter state 13

	Integer        goto state 38
	String         goto state 39
	Ident          goto state 74
	Exp            goto state 75
	Exp1           goto state 42
	Exp2           goto state 43
	Exp3           goto state 44
	Exp4           goto state 45
	Exp5           goto state 46
	Exp6           goto state 47
	Exp7           goto state 48
	Exp8           goto state 49
	Exp9           goto state 50
	Exp10          goto state 51
	Exp11          goto state 52
	Exp12          goto state 53
	FunctionExp    goto state 54

State 73

	Type -> BaseType '?' .                              (rule 68)

	')'            reduce using rule 68
	','            reduce using rule 68
	'->'           reduce using rule 68
	';'            reduce using rule 68
	'='            reduce using rule 68
	'>'            reduce using rule 68
	'{'            reduce using rule 68


State 74

	Exp10 -> Ident . ListDimExp                         (rule 43)
	Exp12 -> Ident .                                    (rule 48)
	FunctionExp -> Ident . '(' ListExp ')'              (rule 104)

	'!!'           reduce using rule 48
	'!='           reduce using rule 48
	'%'            reduce using rule 48
	'%='           reduce using rule 48
	'&&'           reduce using rule 48
	'('            shift, and enter state 118
	')'            reduce using rule 48
	'*'            reduce using rule 48
	'*='           reduce using rule 48
	'+'            reduce using rule 48
	'++'           reduce using rule 48
	'+='           reduce using rule 48
	','            reduce using rule 48
	'-'            reduce using rule 48
	'--'           reduce using rule 48
	'-='           reduce using rule 48
	'..'           reduce using rule 48
	'/'            reduce using rule 48
	'/='           reduce using rule 48
	':'            reduce using rule 48
	';'            reduce using rule 48
	'<'            reduce using rule 48
	'<='           reduce using rule 48
	'='            reduce using rule 48
	'=='           reduce using rule 48
	'>'            reduce using rule 48
	'>='           reduce using rule 48
	'?'            reduce using rule 48
	'?.let'        reduce using rule 48
	'['            shift, and enter state 119
	']'            reduce using rule 48
	'downTo'       reduce using rule 48
	'step'         reduce using rule 48
	'until'        reduce using rule 48
	'||'           reduce using rule 48

	DimExp         goto state 116
	ListDimExp     goto state 117

State 75

	Exp -> Exp . OpAssign Exp1                          (rule 5)
	Dec -> 'var' Ident ':' Type '=' Exp . ';'           (rule 99)

	'%='           shift, and enter state 107
	'*='           shift, and enter state 108
	'+='           shift, and enter state 109
	'-='           shift, and enter state 110
	'/='           shift, and enter state 112
	';'            shift, and enter state 158
	'='            shift, and enter state 113

	OpAssign       goto state 106

State 76

	Type -> '(' ListType ')' . '->' RetType             (rule 70)

	'->'           shift, and enter state 157


State 77

	ListType -> Type ',' . ListType                     (rule 73)

	'('            shift, and enter state 22
	')'            reduce using rule 71
	'>'            reduce using rule 71
	'Bool'         shift, and enter state 23
	'Int'          shift, and enter state 24
	'String'       shift, and enter state 25
	'Tupla'        shift, and enter state 26

	BaseType       goto state 20
	Type           goto state 69
	ListType       goto state 156

State 78

	BaseType -> 'Tupla' '<' ListType . '>'              (rule 62)

	'>'            shift, and enter state 155


State 79

	Exp -> Exp . OpAssign Exp1                          (rule 5)
	ArrayDec -> 'val' Ident '=' 'Array' '(' Exp . ',' Exp ')' ';'    (rule 111)

	'%='           shift, and enter state 107
	'*='           shift, and enter state 108
	'+='           shift, and enter state 109
	','            shift, and enter state 154
	'-='           shift, and enter state 110
	'/='           shift, and enter state 112
	'='            shift, and enter state 113

	OpAssign       goto state 106

State 80

	Exp10 -> '{' ListArg . '->' ListStm '}'             (rule 44)

	'->'           shift, and enter state 153


State 81

	Exp10 -> 'Tupla' '(' . ListExp ')'                  (rule 36)

	'!'            shift, and enter state 56
	'('            shift, and enter state 57
	')'            reduce using rule 50
	'++'           shift, and enter state 58
	'-'            shift, and enter state 59
	'--'           shift, and enter state 60
	'Tupla'        shift, and enter state 61
	'false'        shift, and enter state 62
	'null'         shift, and enter state 63
	'true'         shift, and enter state 64
	'{'            shift, and enter state 65
	L_integ        shift, and enter state 2
	L_quoted       shift, and enter state 66
	L_ident        shift, and enter state 13

	Integer        goto state 38
	String         goto state 39
	Ident          goto state 74
	Exp            goto state 129
	Exp1           goto state 42
	Exp2           goto state 43
	Exp3           goto state 44
	Exp4           goto state 45
	Exp5           goto state 46
	Exp6           goto state 47
	Exp7           goto state 48
	Exp8           goto state 49
	Exp9           goto state 50
	Exp10          goto state 51
	Exp11          goto state 52
	Exp12          goto state 53
	ListExp        goto state 152
	FunctionExp    goto state 54

State 82

	Exp12 -> Ident .                                    (rule 48)

	'!='           reduce using rule 48
	'%'            reduce using rule 48
	'%='           reduce using rule 48
	'&&'           reduce using rule 48
	')'            reduce using rule 48
	'*'            reduce using rule 48
	'*='           reduce using rule 48
	'+'            reduce using rule 48
	'+='           reduce using rule 48
	','            reduce using rule 48
	'-'            reduce using rule 48
	'-='           reduce using rule 48
	'..'           reduce using rule 48
	'/'            reduce using rule 48
	'/='           reduce using rule 48
	':'            reduce using rule 48
	';'            reduce using rule 48
	'<'            reduce using rule 48
	'<='           reduce using rule 48
	'='            reduce using rule 48
	'=='           reduce using rule 48
	'>'            reduce using rule 48
	'>='           reduce using rule 48
	'?'            reduce using rule 48
	'?.let'        reduce using rule 48
	']'            reduce using rule 48
	'downTo'       reduce using rule 48
	'step'         reduce using rule 48
	'until'        reduce using rule 48
	'||'           reduce using rule 48


State 83

	Exp8 -> '--' Exp12 .                                (rule 31)

	'!='           reduce using rule 31
	'%'            reduce using rule 31
	'%='           reduce using rule 31
	'&&'           reduce using rule 31
	')'            reduce using rule 31
	'*'            reduce using rule 31
	'*='           reduce using rule 31
	'+'            reduce using rule 31
	'+='           reduce using rule 31
	','            reduce using rule 31
	'-'            reduce using rule 31
	'-='           reduce using rule 31
	'..'           reduce using rule 31
	'/'            reduce using rule 31
	'/='           reduce using rule 31
	':'            reduce using rule 31
	';'            reduce using rule 31
	'<'            reduce using rule 31
	'<='           reduce using rule 31
	'='            reduce using rule 31
	'=='           reduce using rule 31
	'>'            reduce using rule 31
	'>='           reduce using rule 31
	'?'            reduce using rule 31
	'?.let'        reduce using rule 31
	']'            reduce using rule 31
	'downTo'       reduce using rule 31
	'step'         reduce using rule 31
	'until'        reduce using rule 31
	'||'           reduce using rule 31


State 84

	Exp8 -> '-' Exp8 .                                  (rule 28)

	'!='           reduce using rule 28
	'%'            reduce using rule 28
	'%='           reduce using rule 28
	'&&'           reduce using rule 28
	')'            reduce using rule 28
	'*'            reduce using rule 28
	'*='           reduce using rule 28
	'+'            reduce using rule 28
	'+='           reduce using rule 28
	','            reduce using rule 28
	'-'            reduce using rule 28
	'-='           reduce using rule 28
	'..'           reduce using rule 28
	'/'            reduce using rule 28
	'/='           reduce using rule 28
	':'            reduce using rule 28
	';'            reduce using rule 28
	'<'            reduce using rule 28
	'<='           reduce using rule 28
	'='            reduce using rule 28
	'=='           reduce using rule 28
	'>'            reduce using rule 28
	'>='           reduce using rule 28
	'?'            reduce using rule 28
	'?.let'        reduce using rule 28
	']'            reduce using rule 28
	'downTo'       reduce using rule 28
	'step'         reduce using rule 28
	'until'        reduce using rule 28
	'||'           reduce using rule 28


State 85

	Exp8 -> '++' Exp12 .                                (rule 30)

	'!='           reduce using rule 30
	'%'            reduce using rule 30
	'%='           reduce using rule 30
	'&&'           reduce using rule 30
	')'            reduce using rule 30
	'*'            reduce using rule 30
	'*='           reduce using rule 30
	'+'            reduce using rule 30
	'+='           reduce using rule 30
	','            reduce using rule 30
	'-'            reduce using rule 30
	'-='           reduce using rule 30
	'..'           reduce using rule 30
	'/'            reduce using rule 30
	'/='           reduce using rule 30
	':'            reduce using rule 30
	';'            reduce using rule 30
	'<'            reduce using rule 30
	'<='           reduce using rule 30
	'='            reduce using rule 30
	'=='           reduce using rule 30
	'>'            reduce using rule 30
	'>='           reduce using rule 30
	'?'            reduce using rule 30
	'?.let'        reduce using rule 30
	']'            reduce using rule 30
	'downTo'       reduce using rule 30
	'step'         reduce using rule 30
	'until'        reduce using rule 30
	'||'           reduce using rule 30


State 86

	Exp -> Exp . OpAssign Exp1                          (rule 5)
	Exp12 -> '(' Exp . ')'                              (rule 49)

	'%='           shift, and enter state 107
	')'            shift, and enter state 151
	'*='           shift, and enter state 108
	'+='           shift, and enter state 109
	'-='           shift, and enter state 110
	'/='           shift, and enter state 112
	'='            shift, and enter state 113

	OpAssign       goto state 106

State 87

	Exp8 -> '!' Exp8 .                                  (rule 29)

	'!='           reduce using rule 29
	'%'            reduce using rule 29
	'%='           reduce using rule 29
	'&&'           reduce using rule 29
	')'            reduce using rule 29
	'*'            reduce using rule 29
	'*='           reduce using rule 29
	'+'            reduce using rule 29
	'+='           reduce using rule 29
	','            reduce using rule 29
	'-'            reduce using rule 29
	'-='           reduce using rule 29
	'..'           reduce using rule 29
	'/'            reduce using rule 29
	'/='           reduce using rule 29
	':'            reduce using rule 29
	';'            reduce using rule 29
	'<'            reduce using rule 29
	'<='           reduce using rule 29
	'='            reduce using rule 29
	'=='           reduce using rule 29
	'>'            reduce using rule 29
	'>='           reduce using rule 29
	'?'            reduce using rule 29
	'?.let'        reduce using rule 29
	']'            reduce using rule 29
	'downTo'       reduce using rule 29
	'step'         reduce using rule 29
	'until'        reduce using rule 29
	'||'           reduce using rule 29


State 88

	ArrayDec -> 'val' Ident '=' '[' Iterable ']' . ';'    (rule 112)

	';'            shift, and enter state 150


State 89

	Exp9 -> Exp12 '++' .                                (rule 33)

	'!='           reduce using rule 33
	'%'            reduce using rule 33
	'%='           reduce using rule 33
	'&&'           reduce using rule 33
	')'            reduce using rule 33
	'*'            reduce using rule 33
	'*='           reduce using rule 33
	'+'            reduce using rule 33
	'+='           reduce using rule 33
	','            reduce using rule 33
	'-'            reduce using rule 33
	'-='           reduce using rule 33
	'..'           reduce using rule 33
	'/'            reduce using rule 33
	'/='           reduce using rule 33
	':'            reduce using rule 33
	';'            reduce using rule 33
	'<'            reduce using rule 33
	'<='           reduce using rule 33
	'='            reduce using rule 33
	'=='           reduce using rule 33
	'>'            reduce using rule 33
	'>='           reduce using rule 33
	'?'            reduce using rule 33
	'?.let'        reduce using rule 33
	']'            reduce using rule 33
	'downTo'       reduce using rule 33
	'step'         reduce using rule 33
	'until'        reduce using rule 33
	'||'           reduce using rule 33


State 90

	Exp9 -> Exp12 '--' .                                (rule 34)

	'!='           reduce using rule 34
	'%'            reduce using rule 34
	'%='           reduce using rule 34
	'&&'           reduce using rule 34
	')'            reduce using rule 34
	'*'            reduce using rule 34
	'*='           reduce using rule 34
	'+'            reduce using rule 34
	'+='           reduce using rule 34
	','            reduce using rule 34
	'-'            reduce using rule 34
	'-='           reduce using rule 34
	'..'           reduce using rule 34
	'/'            reduce using rule 34
	'/='           reduce using rule 34
	':'            reduce using rule 34
	';'            reduce using rule 34
	'<'            reduce using rule 34
	'<='           reduce using rule 34
	'='            reduce using rule 34
	'=='           reduce using rule 34
	'>'            reduce using rule 34
	'>='           reduce using rule 34
	'?'            reduce using rule 34
	'?.let'        reduce using rule 34
	']'            reduce using rule 34
	'downTo'       reduce using rule 34
	'step'         reduce using rule 34
	'until'        reduce using rule 34
	'||'           reduce using rule 34


State 91

	Exp11 -> Exp11 '!!' .                               (rule 46)

	'!!'           reduce using rule 46
	'!='           reduce using rule 46
	'%'            reduce using rule 46
	'%='           reduce using rule 46
	'&&'           reduce using rule 46
	')'            reduce using rule 46
	'*'            reduce using rule 46
	'*='           reduce using rule 46
	'+'            reduce using rule 46
	'+='           reduce using rule 46
	','            reduce using rule 46
	'-'            reduce using rule 46
	'-='           reduce using rule 46
	'..'           reduce using rule 46
	'/'            reduce using rule 46
	'/='           reduce using rule 46
	':'            reduce using rule 46
	';'            reduce using rule 46
	'<'            reduce using rule 46
	'<='           reduce using rule 46
	'='            reduce using rule 46
	'=='           reduce using rule 46
	'>'            reduce using rule 46
	'>='           reduce using rule 46
	'?'            reduce using rule 46
	'?.let'        reduce using rule 46
	']'            reduce using rule 46
	'downTo'       reduce using rule 46
	'step'         reduce using rule 46
	'until'        reduce using rule 46
	'||'           reduce using rule 46


State 92

	Exp7 -> Exp7 '%' . Exp8                             (rule 26)

	'!'            shift, and enter state 56
	'('            shift, and enter state 57
	'++'           shift, and enter state 58
	'-'            shift, and enter state 59
	'--'           shift, and enter state 60
	'Tupla'        shift, and enter state 61
	'false'        shift, and enter state 62
	'null'         shift, and enter state 63
	'true'         shift, and enter state 64
	'{'            shift, and enter state 65
	L_integ        shift, and enter state 2
	L_quoted       shift, and enter state 66
	L_ident        shift, and enter state 13

	Integer        goto state 38
	String         goto state 39
	Ident          goto state 74
	Exp8           goto state 149
	Exp9           goto state 50
	Exp10          goto state 51
	Exp11          goto state 52
	Exp12          goto state 53
	FunctionExp    goto state 54

State 93

	Exp7 -> Exp7 '*' . Exp8                             (rule 24)

	'!'            shift, and enter state 56
	'('            shift, and enter state 57
	'++'           shift, and enter state 58
	'-'            shift, and enter state 59
	'--'           shift, and enter state 60
	'Tupla'        shift, and enter state 61
	'false'        shift, and enter state 62
	'null'         shift, and enter state 63
	'true'         shift, and enter state 64
	'{'            shift, and enter state 65
	L_integ        shift, and enter state 2
	L_quoted       shift, and enter state 66
	L_ident        shift, and enter state 13

	Integer        goto state 38
	String         goto state 39
	Ident          goto state 74
	Exp8           goto state 148
	Exp9           goto state 50
	Exp10          goto state 51
	Exp11          goto state 52
	Exp12          goto state 53
	FunctionExp    goto state 54

State 94

	Exp7 -> Exp7 '/' . Exp8                             (rule 25)

	'!'            shift, and enter state 56
	'('            shift, and enter state 57
	'++'           shift, and enter state 58
	'-'            shift, and enter state 59
	'--'           shift, and enter state 60
	'Tupla'        shift, and enter state 61
	'false'        shift, and enter state 62
	'null'         shift, and enter state 63
	'true'         shift, and enter state 64
	'{'            shift, and enter state 65
	L_integ        shift, and enter state 2
	L_quoted       shift, and enter state 66
	L_ident        shift, and enter state 13

	Integer        goto state 38
	String         goto state 39
	Ident          goto state 74
	Exp8           goto state 147
	Exp9           goto state 50
	Exp10          goto state 51
	Exp11          goto state 52
	Exp12          goto state 53
	FunctionExp    goto state 54

State 95

	Exp6 -> Exp6 '+' . Exp7                             (rule 21)

	'!'            shift, and enter state 56
	'('            shift, and enter state 57
	'++'           shift, and enter state 58
	'-'            shift, and enter state 59
	'--'           shift, and enter state 60
	'Tupla'        shift, and enter state 61
	'false'        shift, and enter state 62
	'null'         shift, and enter state 63
	'true'         shift, and enter state 64
	'{'            shift, and enter state 65
	L_integ        shift, and enter state 2
	L_quoted       shift, and enter state 66
	L_ident        shift, and enter state 13

	Integer        goto state 38
	String         goto state 39
	Ident          goto state 74
	Exp7           goto state 146
	Exp8           goto state 49
	Exp9           goto state 50
	Exp10          goto state 51
	Exp11          goto state 52
	Exp12          goto state 53
	FunctionExp    goto state 54

State 96

	Exp6 -> Exp6 '-' . Exp7                             (rule 22)

	'!'            shift, and enter state 56
	'('            shift, and enter state 57
	'++'           shift, and enter state 58
	'-'            shift, and enter state 59
	'--'           shift, and enter state 60
	'Tupla'        shift, and enter state 61
	'false'        shift, and enter state 62
	'null'         shift, and enter state 63
	'true'         shift, and enter state 64
	'{'            shift, and enter state 65
	L_integ        shift, and enter state 2
	L_quoted       shift, and enter state 66
	L_ident        shift, and enter state 13

	Integer        goto state 38
	String         goto state 39
	Ident          goto state 74
	Exp7           goto state 145
	Exp8           goto state 49
	Exp9           goto state 50
	Exp10          goto state 51
	Exp11          goto state 52
	Exp12          goto state 53
	FunctionExp    goto state 54

State 97

	Exp5 -> Exp5 '<' . Exp6                             (rule 16)

	'!'            shift, and enter state 56
	'('            shift, and enter state 57
	'++'           shift, and enter state 58
	'-'            shift, and enter state 59
	'--'           shift, and enter state 60
	'Tupla'        shift, and enter state 61
	'false'        shift, and enter state 62
	'null'         shift, and enter state 63
	'true'         shift, and enter state 64
	'{'            shift, and enter state 65
	L_integ        shift, and enter state 2
	L_quoted       shift, and enter state 66
	L_ident        shift, and enter state 13

	Integer        goto state 38
	String         goto state 39
	Ident          goto state 74
	Exp6           goto state 144
	Exp7           goto state 48
	Exp8           goto state 49
	Exp9           goto state 50
	Exp10          goto state 51
	Exp11          goto state 52
	Exp12          goto state 53
	FunctionExp    goto state 54

State 98

	Exp5 -> Exp5 '<=' . Exp6                            (rule 18)

	'!'            shift, and enter state 56
	'('            shift, and enter state 57
	'++'           shift, and enter state 58
	'-'            shift, and enter state 59
	'--'           shift, and enter state 60
	'Tupla'        shift, and enter state 61
	'false'        shift, and enter state 62
	'null'         shift, and enter state 63
	'true'         shift, and enter state 64
	'{'            shift, and enter state 65
	L_integ        shift, and enter state 2
	L_quoted       shift, and enter state 66
	L_ident        shift, and enter state 13

	Integer        goto state 38
	String         goto state 39
	Ident          goto state 74
	Exp6           goto state 143
	Exp7           goto state 48
	Exp8           goto state 49
	Exp9           goto state 50
	Exp10          goto state 51
	Exp11          goto state 52
	Exp12          goto state 53
	FunctionExp    goto state 54

State 99

	Exp5 -> Exp5 '>' . Exp6                             (rule 17)

	'!'            shift, and enter state 56
	'('            shift, and enter state 57
	'++'           shift, and enter state 58
	'-'            shift, and enter state 59
	'--'           shift, and enter state 60
	'Tupla'        shift, and enter state 61
	'false'        shift, and enter state 62
	'null'         shift, and enter state 63
	'true'         shift, and enter state 64
	'{'            shift, and enter state 65
	L_integ        shift, and enter state 2
	L_quoted       shift, and enter state 66
	L_ident        shift, and enter state 13

	Integer        goto state 38
	String         goto state 39
	Ident          goto state 74
	Exp6           goto state 142
	Exp7           goto state 48
	Exp8           goto state 49
	Exp9           goto state 50
	Exp10          goto state 51
	Exp11          goto state 52
	Exp12          goto state 53
	FunctionExp    goto state 54

State 100

	Exp5 -> Exp5 '>=' . Exp6                            (rule 19)

	'!'            shift, and enter state 56
	'('            shift, and enter state 57
	'++'           shift, and enter state 58
	'-'            shift, and enter state 59
	'--'           shift, and enter state 60
	'Tupla'        shift, and enter state 61
	'false'        shift, and enter state 62
	'null'         shift, and enter state 63
	'true'         shift, and enter state 64
	'{'            shift, and enter state 65
	L_integ        shift, and enter state 2
	L_quoted       shift, and enter state 66
	L_ident        shift, and enter state 13

	Integer        goto state 38
	String         goto state 39
	Ident          goto state 74
	Exp6           goto state 141
	Exp7           goto state 48
	Exp8           goto state 49
	Exp9           goto state 50
	Exp10          goto state 51
	Exp11          goto state 52
	Exp12          goto state 53
	FunctionExp    goto state 54

State 101

	Exp4 -> Exp4 '!=' . Exp5                            (rule 14)

	'!'            shift, and enter state 56
	'('            shift, and enter state 57
	'++'           shift, and enter state 58
	'-'            shift, and enter state 59
	'--'           shift, and enter state 60
	'Tupla'        shift, and enter state 61
	'false'        shift, and enter state 62
	'null'         shift, and enter state 63
	'true'         shift, and enter state 64
	'{'            shift, and enter state 65
	L_integ        shift, and enter state 2
	L_quoted       shift, and enter state 66
	L_ident        shift, and enter state 13

	Integer        goto state 38
	String         goto state 39
	Ident          goto state 74
	Exp5           goto state 140
	Exp6           goto state 47
	Exp7           goto state 48
	Exp8           goto state 49
	Exp9           goto state 50
	Exp10          goto state 51
	Exp11          goto state 52
	Exp12          goto state 53
	FunctionExp    goto state 54

State 102

	Exp4 -> Exp4 '==' . Exp5                            (rule 13)

	'!'            shift, and enter state 56
	'('            shift, and enter state 57
	'++'           shift, and enter state 58
	'-'            shift, and enter state 59
	'--'           shift, and enter state 60
	'Tupla'        shift, and enter state 61
	'false'        shift, and enter state 62
	'null'         shift, and enter state 63
	'true'         shift, and enter state 64
	'{'            shift, and enter state 65
	L_integ        shift, and enter state 2
	L_quoted       shift, and enter state 66
	L_ident        shift, and enter state 13

	Integer        goto state 38
	String         goto state 39
	Ident          goto state 74
	Exp5           goto state 139
	Exp6           goto state 47
	Exp7           goto state 48
	Exp8           goto state 49
	Exp9           goto state 50
	Exp10          goto state 51
	Exp11          goto state 52
	Exp12          goto state 53
	FunctionExp    goto state 54

State 103

	Exp3 -> Exp3 '&&' . Exp4                            (rule 11)

	'!'            shift, and enter state 56
	'('            shift, and enter state 57
	'++'           shift, and enter state 58
	'-'            shift, and enter state 59
	'--'           shift, and enter state 60
	'Tupla'        shift, and enter state 61
	'false'        shift, and enter state 62
	'null'         shift, and enter state 63
	'true'         shift, and enter state 64
	'{'            shift, and enter state 65
	L_integ        shift, and enter state 2
	L_quoted       shift, and enter state 66
	L_ident        shift, and enter state 13

	Integer        goto state 38
	String         goto state 39
	Ident          goto state 74
	Exp4           goto state 138
	Exp5           goto state 46
	Exp6           goto state 47
	Exp7           goto state 48
	Exp8           goto state 49
	Exp9           goto state 50
	Exp10          goto state 51
	Exp11          goto state 52
	Exp12          goto state 53
	FunctionExp    goto state 54

State 104

	Exp1 -> Exp3 '?' . Exp1 ':' Exp2                    (rule 7)

	'!'            shift, and enter state 56
	'('            shift, and enter state 57
	'++'           shift, and enter state 58
	'-'            shift, and enter state 59
	'--'           shift, and enter state 60
	'Tupla'        shift, and enter state 61
	'false'        shift, and enter state 62
	'null'         shift, and enter state 63
	'true'         shift, and enter state 64
	'{'            shift, and enter state 65
	L_integ        shift, and enter state 2
	L_quoted       shift, and enter state 66
	L_ident        shift, and enter state 13

	Integer        goto state 38
	String         goto state 39
	Ident          goto state 74
	Exp1           goto state 137
	Exp2           goto state 43
	Exp3           goto state 44
	Exp4           goto state 45
	Exp5           goto state 46
	Exp6           goto state 47
	Exp7           goto state 48
	Exp8           goto state 49
	Exp9           goto state 50
	Exp10          goto state 51
	Exp11          goto state 52
	Exp12          goto state 53
	FunctionExp    goto state 54

State 105

	Exp2 -> Exp2 '||' . Exp3                            (rule 9)

	'!'            shift, and enter state 56
	'('            shift, and enter state 57
	'++'           shift, and enter state 58
	'-'            shift, and enter state 59
	'--'           shift, and enter state 60
	'Tupla'        shift, and enter state 61
	'false'        shift, and enter state 62
	'null'         shift, and enter state 63
	'true'         shift, and enter state 64
	'{'            shift, and enter state 65
	L_integ        shift, and enter state 2
	L_quoted       shift, and enter state 66
	L_ident        shift, and enter state 13

	Integer        goto state 38
	String         goto state 39
	Ident          goto state 74
	Exp3           goto state 136
	Exp4           goto state 45
	Exp5           goto state 46
	Exp6           goto state 47
	Exp7           goto state 48
	Exp8           goto state 49
	Exp9           goto state 50
	Exp10          goto state 51
	Exp11          goto state 52
	Exp12          goto state 53
	FunctionExp    goto state 54

State 106

	Exp -> Exp OpAssign . Exp1                          (rule 5)

	'!'            shift, and enter state 56
	'('            shift, and enter state 57
	'++'           shift, and enter state 58
	'-'            shift, and enter state 59
	'--'           shift, and enter state 60
	'Tupla'        shift, and enter state 61
	'false'        shift, and enter state 62
	'null'         shift, and enter state 63
	'true'         shift, and enter state 64
	'{'            shift, and enter state 65
	L_integ        shift, and enter state 2
	L_quoted       shift, and enter state 66
	L_ident        shift, and enter state 13

	Integer        goto state 38
	String         goto state 39
	Ident          goto state 74
	Exp1           goto state 135
	Exp2           goto state 43
	Exp3           goto state 44
	Exp4           goto state 45
	Exp5           goto state 46
	Exp6           goto state 47
	Exp7           goto state 48
	Exp8           goto state 49
	Exp9           goto state 50
	Exp10          goto state 51
	Exp11          goto state 52
	Exp12          goto state 53
	FunctionExp    goto state 54

State 107

	OpAssign -> '%=' .                                  (rule 61)

	'!'            reduce using rule 61
	'('            reduce using rule 61
	'++'           reduce using rule 61
	'-'            reduce using rule 61
	'--'           reduce using rule 61
	'Tupla'        reduce using rule 61
	'false'        reduce using rule 61
	'null'         reduce using rule 61
	'true'         reduce using rule 61
	'{'            reduce using rule 61
	L_integ        reduce using rule 61
	L_quoted       reduce using rule 61
	L_ident        reduce using rule 61


State 108

	OpAssign -> '*=' .                                  (rule 59)

	'!'            reduce using rule 59
	'('            reduce using rule 59
	'++'           reduce using rule 59
	'-'            reduce using rule 59
	'--'           reduce using rule 59
	'Tupla'        reduce using rule 59
	'false'        reduce using rule 59
	'null'         reduce using rule 59
	'true'         reduce using rule 59
	'{'            reduce using rule 59
	L_integ        reduce using rule 59
	L_quoted       reduce using rule 59
	L_ident        reduce using rule 59


State 109

	OpAssign -> '+=' .                                  (rule 57)

	'!'            reduce using rule 57
	'('            reduce using rule 57
	'++'           reduce using rule 57
	'-'            reduce using rule 57
	'--'           reduce using rule 57
	'Tupla'        reduce using rule 57
	'false'        reduce using rule 57
	'null'         reduce using rule 57
	'true'         reduce using rule 57
	'{'            reduce using rule 57
	L_integ        reduce using rule 57
	L_quoted       reduce using rule 57
	L_ident        reduce using rule 57


State 110

	OpAssign -> '-=' .                                  (rule 58)

	'!'            reduce using rule 58
	'('            reduce using rule 58
	'++'           reduce using rule 58
	'-'            reduce using rule 58
	'--'           reduce using rule 58
	'Tupla'        reduce using rule 58
	'false'        reduce using rule 58
	'null'         reduce using rule 58
	'true'         reduce using rule 58
	'{'            reduce using rule 58
	L_integ        reduce using rule 58
	L_quoted       reduce using rule 58
	L_ident        reduce using rule 58


State 111

	Iterable -> Exp '..' . Exp                          (rule 106)

	'!'            shift, and enter state 56
	'('            shift, and enter state 57
	'++'           shift, and enter state 58
	'-'            shift, and enter state 59
	'--'           shift, and enter state 60
	'Tupla'        shift, and enter state 61
	'false'        shift, and enter state 62
	'null'         shift, and enter state 63
	'true'         shift, and enter state 64
	'{'            shift, and enter state 65
	L_integ        shift, and enter state 2
	L_quoted       shift, and enter state 66
	L_ident        shift, and enter state 13

	Integer        goto state 38
	String         goto state 39
	Ident          goto state 74
	Exp            goto state 134
	Exp1           goto state 42
	Exp2           goto state 43
	Exp3           goto state 44
	Exp4           goto state 45
	Exp5           goto state 46
	Exp6           goto state 47
	Exp7           goto state 48
	Exp8           goto state 49
	Exp9           goto state 50
	Exp10          goto state 51
	Exp11          goto state 52
	Exp12          goto state 53
	FunctionExp    goto state 54

State 112

	OpAssign -> '/=' .                                  (rule 60)

	'!'            reduce using rule 60
	'('            reduce using rule 60
	'++'           reduce using rule 60
	'-'            reduce using rule 60
	'--'           reduce using rule 60
	'Tupla'        reduce using rule 60
	'false'        reduce using rule 60
	'null'         reduce using rule 60
	'true'         reduce using rule 60
	'{'            reduce using rule 60
	L_integ        reduce using rule 60
	L_quoted       reduce using rule 60
	L_ident        reduce using rule 60


State 113

	OpAssign -> '=' .                                   (rule 56)

	'!'            reduce using rule 56
	'('            reduce using rule 56
	'++'           reduce using rule 56
	'-'            reduce using rule 56
	'--'           reduce using rule 56
	'Tupla'        reduce using rule 56
	'false'        reduce using rule 56
	'null'         reduce using rule 56
	'true'         reduce using rule 56
	'{'            reduce using rule 56
	L_integ        reduce using rule 56
	L_quoted       reduce using rule 56
	L_ident        reduce using rule 56


State 114

	Iterable -> Exp 'downTo' . Exp                      (rule 108)
	Iterable -> Exp 'downTo' . Exp 'step' Exp           (rule 110)

	'!'            shift, and enter state 56
	'('            shift, and enter state 57
	'++'           shift, and enter state 58
	'-'            shift, and enter state 59
	'--'           shift, and enter state 60
	'Tupla'        shift, and enter state 61
	'false'        shift, and enter state 62
	'null'         shift, and enter state 63
	'true'         shift, and enter state 64
	'{'            shift, and enter state 65
	L_integ        shift, and enter state 2
	L_quoted       shift, and enter state 66
	L_ident        shift, and enter state 13

	Integer        goto state 38
	String         goto state 39
	Ident          goto state 74
	Exp            goto state 133
	Exp1           goto state 42
	Exp2           goto state 43
	Exp3           goto state 44
	Exp4           goto state 45
	Exp5           goto state 46
	Exp6           goto state 47
	Exp7           goto state 48
	Exp8           goto state 49
	Exp9           goto state 50
	Exp10          goto state 51
	Exp11          goto state 52
	Exp12          goto state 53
	FunctionExp    goto state 54

State 115

	Iterable -> Exp 'until' . Exp                       (rule 107)
	Iterable -> Exp 'until' . Exp 'step' Exp            (rule 109)

	'!'            shift, and enter state 56
	'('            shift, and enter state 57
	'++'           shift, and enter state 58
	'-'            shift, and enter state 59
	'--'           shift, and enter state 60
	'Tupla'        shift, and enter state 61
	'false'        shift, and enter state 62
	'null'         shift, and enter state 63
	'true'         shift, and enter state 64
	'{'            shift, and enter state 65
	L_integ        shift, and enter state 2
	L_quoted       shift, and enter state 66
	L_ident        shift, and enter state 13

	Integer        goto state 38
	String         goto state 39
	Ident          goto state 74
	Exp            goto state 132
	Exp1           goto state 42
	Exp2           goto state 43
	Exp3           goto state 44
	Exp4           goto state 45
	Exp5           goto state 46
	Exp6           goto state 47
	Exp7           goto state 48
	Exp8           goto state 49
	Exp9           goto state 50
	Exp10          goto state 51
	Exp11          goto state 52
	Exp12          goto state 53
	FunctionExp    goto state 54

State 116

	ListDimExp -> DimExp .                              (rule 54)
	ListDimExp -> DimExp . ListDimExp                   (rule 55)

	'!='           reduce using rule 54
	'%'            reduce using rule 54
	'%='           reduce using rule 54
	'&&'           reduce using rule 54
	')'            reduce using rule 54
	'*'            reduce using rule 54
	'*='           reduce using rule 54
	'+'            reduce using rule 54
	'+='           reduce using rule 54
	','            reduce using rule 54
	'-'            reduce using rule 54
	'-='           reduce using rule 54
	'..'           reduce using rule 54
	'/'            reduce using rule 54
	'/='           reduce using rule 54
	':'            reduce using rule 54
	';'            reduce using rule 54
	'<'            reduce using rule 54
	'<='           reduce using rule 54
	'='            reduce using rule 54
	'=='           reduce using rule 54
	'>'            reduce using rule 54
	'>='           reduce using rule 54
	'?'            reduce using rule 54
	'?.let'        reduce using rule 54
	'['            shift, and enter state 119
	']'            reduce using rule 54
	'downTo'       reduce using rule 54
	'step'         reduce using rule 54
	'until'        reduce using rule 54
	'||'           reduce using rule 54

	DimExp         goto state 116
	ListDimExp     goto state 131

State 117

	Exp10 -> Ident ListDimExp .                         (rule 43)

	'!='           reduce using rule 43
	'%'            reduce using rule 43
	'%='           reduce using rule 43
	'&&'           reduce using rule 43
	')'            reduce using rule 43
	'*'            reduce using rule 43
	'*='           reduce using rule 43
	'+'            reduce using rule 43
	'+='           reduce using rule 43
	','            reduce using rule 43
	'-'            reduce using rule 43
	'-='           reduce using rule 43
	'..'           reduce using rule 43
	'/'            reduce using rule 43
	'/='           reduce using rule 43
	':'            reduce using rule 43
	';'            reduce using rule 43
	'<'            reduce using rule 43
	'<='           reduce using rule 43
	'='            reduce using rule 43
	'=='           reduce using rule 43
	'>'            reduce using rule 43
	'>='           reduce using rule 43
	'?'            reduce using rule 43
	'?.let'        reduce using rule 43
	']'            reduce using rule 43
	'downTo'       reduce using rule 43
	'step'         reduce using rule 43
	'until'        reduce using rule 43
	'||'           reduce using rule 43


State 118

	FunctionExp -> Ident '(' . ListExp ')'              (rule 104)

	'!'            shift, and enter state 56
	'('            shift, and enter state 57
	')'            reduce using rule 50
	'++'           shift, and enter state 58
	'-'            shift, and enter state 59
	'--'           shift, and enter state 60
	'Tupla'        shift, and enter state 61
	'false'        shift, and enter state 62
	'null'         shift, and enter state 63
	'true'         shift, and enter state 64
	'{'            shift, and enter state 65
	L_integ        shift, and enter state 2
	L_quoted       shift, and enter state 66
	L_ident        shift, and enter state 13

	Integer        goto state 38
	String         goto state 39
	Ident          goto state 74
	Exp            goto state 129
	Exp1           goto state 42
	Exp2           goto state 43
	Exp3           goto state 44
	Exp4           goto state 45
	Exp5           goto state 46
	Exp6           goto state 47
	Exp7           goto state 48
	Exp8           goto state 49
	Exp9           goto state 50
	Exp10          goto state 51
	Exp11          goto state 52
	Exp12          goto state 53
	ListExp        goto state 130
	FunctionExp    goto state 54

State 119

	DimExp -> '[' . Exp ']'                             (rule 53)

	'!'            shift, and enter state 56
	'('            shift, and enter state 57
	'++'           shift, and enter state 58
	'-'            shift, and enter state 59
	'--'           shift, and enter state 60
	'Tupla'        shift, and enter state 61
	'false'        shift, and enter state 62
	'null'         shift, and enter state 63
	'true'         shift, and enter state 64
	'{'            shift, and enter state 65
	L_integ        shift, and enter state 2
	L_quoted       shift, and enter state 66
	L_ident        shift, and enter state 13

	Integer        goto state 38
	String         goto state 39
	Ident          goto state 74
	Exp            goto state 128
	Exp1           goto state 42
	Exp2           goto state 43
	Exp3           goto state 44
	Exp4           goto state 45
	Exp5           goto state 46
	Exp6           goto state 47
	Exp7           goto state 48
	Exp8           goto state 49
	Exp9           goto state 50
	Exp10          goto state 51
	Exp11          goto state 52
	Exp12          goto state 53
	FunctionExp    goto state 54

State 120

	Exp -> Exp . OpAssign Exp1                          (rule 5)
	Dec -> 'val' Ident ':' Type '=' Exp . ';'           (rule 100)

	'%='           shift, and enter state 107
	'*='           shift, and enter state 108
	'+='           shift, and enter state 109
	'-='           shift, and enter state 110
	'/='           shift, and enter state 112
	';'            shift, and enter state 127
	'='            shift, and enter state 113

	OpAssign       goto state 106

State 121

	Arg -> Ident ':' Type .                             (rule 74)

	')'            reduce using rule 74
	','            reduce using rule 74
	'->'           reduce using rule 74


State 122

	ListArg -> Arg ',' ListArg .                        (rule 77)

	')'            reduce using rule 77
	'->'           reduce using rule 77


State 123

	FunctionDec -> 'fun' Ident '(' ListArg ')' ':' . RetType '{' ListStm '}'    (rule 103)

	'('            shift, and enter state 22
	'Bool'         shift, and enter state 23
	'Int'          shift, and enter state 24
	'String'       shift, and enter state 25
	'Tupla'        shift, and enter state 26
	'Unit'         shift, and enter state 126

	BaseType       goto state 20
	RetType        goto state 124
	Type           goto state 125

State 124

	FunctionDec -> 'fun' Ident '(' ListArg ')' ':' RetType . '{' ListStm '}'    (rule 103)

	'{'            shift, and enter state 169


State 125

	RetType -> Type .                                   (rule 67)

	')'            reduce using rule 67
	','            reduce using rule 67
	'->'           reduce using rule 67
	';'            reduce using rule 67
	'='            reduce using rule 67
	'>'            reduce using rule 67
	'{'            reduce using rule 67


State 126

	RetType -> 'Unit' .                                 (rule 66)

	')'            reduce using rule 66
	','            reduce using rule 66
	'->'           reduce using rule 66
	';'            reduce using rule 66
	'='            reduce using rule 66
	'>'            reduce using rule 66
	'{'            reduce using rule 66


State 127

	Dec -> 'val' Ident ':' Type '=' Exp ';' .           (rule 100)

	'!'            reduce using rule 100
	'('            reduce using rule 100
	'++'           reduce using rule 100
	'-'            reduce using rule 100
	'--'           reduce using rule 100
	'Tupla'        reduce using rule 100
	'break'        reduce using rule 100
	'continue'     reduce using rule 100
	'false'        reduce using rule 100
	'for'          reduce using rule 100
	'fun'          reduce using rule 100
	'if'           reduce using rule 100
	'null'         reduce using rule 100
	'print'        reduce using rule 100
	'println'      reduce using rule 100
	'return'       reduce using rule 100
	'run'          reduce using rule 100
	'true'         reduce using rule 100
	'val'          reduce using rule 100
	'var'          reduce using rule 100
	'while'        reduce using rule 100
	'{'            reduce using rule 100
	'}'            reduce using rule 100
	L_integ        reduce using rule 100
	L_quoted       reduce using rule 100
	L_ident        reduce using rule 100
	%eof           reduce using rule 100


State 128

	Exp -> Exp . OpAssign Exp1                          (rule 5)
	DimExp -> '[' Exp . ']'                             (rule 53)

	'%='           shift, and enter state 107
	'*='           shift, and enter state 108
	'+='           shift, and enter state 109
	'-='           shift, and enter state 110
	'/='           shift, and enter state 112
	'='            shift, and enter state 113
	']'            shift, and enter state 168

	OpAssign       goto state 106

State 129

	Exp -> Exp . OpAssign Exp1                          (rule 5)
	ListExp -> Exp .                                    (rule 51)
	ListExp -> Exp . ',' ListExp                        (rule 52)

	'%='           shift, and enter state 107
	')'            reduce using rule 51
	'*='           shift, and enter state 108
	'+='           shift, and enter state 109
	','            shift, and enter state 167
	'-='           shift, and enter state 110
	'/='           shift, and enter state 112
	'='            shift, and enter state 113

	OpAssign       goto state 106

State 130

	FunctionExp -> Ident '(' ListExp . ')'              (rule 104)

	')'            shift, and enter state 166


State 131

	ListDimExp -> DimExp ListDimExp .                   (rule 55)

	'!='           reduce using rule 55
	'%'            reduce using rule 55
	'%='           reduce using rule 55
	'&&'           reduce using rule 55
	')'            reduce using rule 55
	'*'            reduce using rule 55
	'*='           reduce using rule 55
	'+'            reduce using rule 55
	'+='           reduce using rule 55
	','            reduce using rule 55
	'-'            reduce using rule 55
	'-='           reduce using rule 55
	'..'           reduce using rule 55
	'/'            reduce using rule 55
	'/='           reduce using rule 55
	':'            reduce using rule 55
	';'            reduce using rule 55
	'<'            reduce using rule 55
	'<='           reduce using rule 55
	'='            reduce using rule 55
	'=='           reduce using rule 55
	'>'            reduce using rule 55
	'>='           reduce using rule 55
	'?'            reduce using rule 55
	'?.let'        reduce using rule 55
	']'            reduce using rule 55
	'downTo'       reduce using rule 55
	'step'         reduce using rule 55
	'until'        reduce using rule 55
	'||'           reduce using rule 55


State 132

	Exp -> Exp . OpAssign Exp1                          (rule 5)
	Iterable -> Exp 'until' Exp .                       (rule 107)
	Iterable -> Exp 'until' Exp . 'step' Exp            (rule 109)

	'%='           shift, and enter state 107
	')'            reduce using rule 107
	'*='           shift, and enter state 108
	'+='           shift, and enter state 109
	'-='           shift, and enter state 110
	'/='           shift, and enter state 112
	'='            shift, and enter state 113
	']'            reduce using rule 107
	'step'         shift, and enter state 165

	OpAssign       goto state 106

State 133

	Exp -> Exp . OpAssign Exp1                          (rule 5)
	Iterable -> Exp 'downTo' Exp .                      (rule 108)
	Iterable -> Exp 'downTo' Exp . 'step' Exp           (rule 110)

	'%='           shift, and enter state 107
	')'            reduce using rule 108
	'*='           shift, and enter state 108
	'+='           shift, and enter state 109
	'-='           shift, and enter state 110
	'/='           shift, and enter state 112
	'='            shift, and enter state 113
	']'            reduce using rule 108
	'step'         shift, and enter state 164

	OpAssign       goto state 106

State 134

	Exp -> Exp . OpAssign Exp1                          (rule 5)
	Iterable -> Exp '..' Exp .                          (rule 106)

	'%='           shift, and enter state 107
	')'            reduce using rule 106
	'*='           shift, and enter state 108
	'+='           shift, and enter state 109
	'-='           shift, and enter state 110
	'/='           shift, and enter state 112
	'='            shift, and enter state 113
	']'            reduce using rule 106

	OpAssign       goto state 106

State 135

	Exp -> Exp OpAssign Exp1 .                          (rule 5)

	'%='           reduce using rule 5
	')'            reduce using rule 5
	'*='           reduce using rule 5
	'+='           reduce using rule 5
	','            reduce using rule 5
	'-='           reduce using rule 5
	'..'           reduce using rule 5
	'/='           reduce using rule 5
	';'            reduce using rule 5
	'='            reduce using rule 5
	'?.let'        reduce using rule 5
	']'            reduce using rule 5
	'downTo'       reduce using rule 5
	'step'         reduce using rule 5
	'until'        reduce using rule 5


State 136

	Exp2 -> Exp2 '||' Exp3 .                            (rule 9)
	Exp3 -> Exp3 . '&&' Exp4                            (rule 11)

	'%='           reduce using rule 9
	'&&'           shift, and enter state 103
	')'            reduce using rule 9
	'*='           reduce using rule 9
	'+='           reduce using rule 9
	','            reduce using rule 9
	'-='           reduce using rule 9
	'..'           reduce using rule 9
	'/='           reduce using rule 9
	':'            reduce using rule 9
	';'            reduce using rule 9
	'='            reduce using rule 9
	'?.let'        reduce using rule 9
	']'            reduce using rule 9
	'downTo'       reduce using rule 9
	'step'         reduce using rule 9
	'until'        reduce using rule 9
	'||'           reduce using rule 9


State 137

	Exp1 -> Exp3 '?' Exp1 . ':' Exp2                    (rule 7)

	':'            shift, and enter state 163


State 138

	Exp3 -> Exp3 '&&' Exp4 .                            (rule 11)
	Exp4 -> Exp4 . '==' Exp5                            (rule 13)
	Exp4 -> Exp4 . '!=' Exp5                            (rule 14)

	'!='           shift, and enter state 101
	'%='           reduce using rule 11
	'&&'           reduce using rule 11
	')'            reduce using rule 11
	'*='           reduce using rule 11
	'+='           reduce using rule 11
	','            reduce using rule 11
	'-='           reduce using rule 11
	'..'           reduce using rule 11
	'/='           reduce using rule 11
	':'            reduce using rule 11
	';'            reduce using rule 11
	'='            reduce using rule 11
	'=='           shift, and enter state 102
	'?'            reduce using rule 11
	'?.let'        reduce using rule 11
	']'            reduce using rule 11
	'downTo'       reduce using rule 11
	'step'         reduce using rule 11
	'until'        reduce using rule 11
	'||'           reduce using rule 11


State 139

	Exp4 -> Exp4 '==' Exp5 .                            (rule 13)
	Exp5 -> Exp5 . '<' Exp6                             (rule 16)
	Exp5 -> Exp5 . '>' Exp6                             (rule 17)
	Exp5 -> Exp5 . '<=' Exp6                            (rule 18)
	Exp5 -> Exp5 . '>=' Exp6                            (rule 19)

	'!='           reduce using rule 13
	'%='           reduce using rule 13
	'&&'           reduce using rule 13
	')'            reduce using rule 13
	'*='           reduce using rule 13
	'+='           reduce using rule 13
	','            reduce using rule 13
	'-='           reduce using rule 13
	'..'           reduce using rule 13
	'/='           reduce using rule 13
	':'            reduce using rule 13
	';'            reduce using rule 13
	'<'            shift, and enter state 97
	'<='           shift, and enter state 98
	'='            reduce using rule 13
	'=='           reduce using rule 13
	'>'            shift, and enter state 99
	'>='           shift, and enter state 100
	'?'            reduce using rule 13
	'?.let'        reduce using rule 13
	']'            reduce using rule 13
	'downTo'       reduce using rule 13
	'step'         reduce using rule 13
	'until'        reduce using rule 13
	'||'           reduce using rule 13


State 140

	Exp4 -> Exp4 '!=' Exp5 .                            (rule 14)
	Exp5 -> Exp5 . '<' Exp6                             (rule 16)
	Exp5 -> Exp5 . '>' Exp6                             (rule 17)
	Exp5 -> Exp5 . '<=' Exp6                            (rule 18)
	Exp5 -> Exp5 . '>=' Exp6                            (rule 19)

	'!='           reduce using rule 14
	'%='           reduce using rule 14
	'&&'           reduce using rule 14
	')'            reduce using rule 14
	'*='           reduce using rule 14
	'+='           reduce using rule 14
	','            reduce using rule 14
	'-='           reduce using rule 14
	'..'           reduce using rule 14
	'/='           reduce using rule 14
	':'            reduce using rule 14
	';'            reduce using rule 14
	'<'            shift, and enter state 97
	'<='           shift, and enter state 98
	'='            reduce using rule 14
	'=='           reduce using rule 14
	'>'            shift, and enter state 99
	'>='           shift, and enter state 100
	'?'            reduce using rule 14
	'?.let'        reduce using rule 14
	']'            reduce using rule 14
	'downTo'       reduce using rule 14
	'step'         reduce using rule 14
	'until'        reduce using rule 14
	'||'           reduce using rule 14


State 141

	Exp5 -> Exp5 '>=' Exp6 .                            (rule 19)
	Exp6 -> Exp6 . '+' Exp7                             (rule 21)
	Exp6 -> Exp6 . '-' Exp7                             (rule 22)

	'!='           reduce using rule 19
	'%='           reduce using rule 19
	'&&'           reduce using rule 19
	')'            reduce using rule 19
	'*='           reduce using rule 19
	'+'            shift, and enter state 95
	'+='           reduce using rule 19
	','            reduce using rule 19
	'-'            shift, and enter state 96
	'-='           reduce using rule 19
	'..'           reduce using rule 19
	'/='           reduce using rule 19
	':'            reduce using rule 19
	';'            reduce using rule 19
	'<'            reduce using rule 19
	'<='           reduce using rule 19
	'='            reduce using rule 19
	'=='           reduce using rule 19
	'>'            reduce using rule 19
	'>='           reduce using rule 19
	'?'            reduce using rule 19
	'?.let'        reduce using rule 19
	']'            reduce using rule 19
	'downTo'       reduce using rule 19
	'step'         reduce using rule 19
	'until'        reduce using rule 19
	'||'           reduce using rule 19


State 142

	Exp5 -> Exp5 '>' Exp6 .                             (rule 17)
	Exp6 -> Exp6 . '+' Exp7                             (rule 21)
	Exp6 -> Exp6 . '-' Exp7                             (rule 22)

	'!='           reduce using rule 17
	'%='           reduce using rule 17
	'&&'           reduce using rule 17
	')'            reduce using rule 17
	'*='           reduce using rule 17
	'+'            shift, and enter state 95
	'+='           reduce using rule 17
	','            reduce using rule 17
	'-'            shift, and enter state 96
	'-='           reduce using rule 17
	'..'           reduce using rule 17
	'/='           reduce using rule 17
	':'            reduce using rule 17
	';'            reduce using rule 17
	'<'            reduce using rule 17
	'<='           reduce using rule 17
	'='            reduce using rule 17
	'=='           reduce using rule 17
	'>'            reduce using rule 17
	'>='           reduce using rule 17
	'?'            reduce using rule 17
	'?.let'        reduce using rule 17
	']'            reduce using rule 17
	'downTo'       reduce using rule 17
	'step'         reduce using rule 17
	'until'        reduce using rule 17
	'||'           reduce using rule 17


State 143

	Exp5 -> Exp5 '<=' Exp6 .                            (rule 18)
	Exp6 -> Exp6 . '+' Exp7                             (rule 21)
	Exp6 -> Exp6 . '-' Exp7                             (rule 22)

	'!='           reduce using rule 18
	'%='           reduce using rule 18
	'&&'           reduce using rule 18
	')'            reduce using rule 18
	'*='           reduce using rule 18
	'+'            shift, and enter state 95
	'+='           reduce using rule 18
	','            reduce using rule 18
	'-'            shift, and enter state 96
	'-='           reduce using rule 18
	'..'           reduce using rule 18
	'/='           reduce using rule 18
	':'            reduce using rule 18
	';'            reduce using rule 18
	'<'            reduce using rule 18
	'<='           reduce using rule 18
	'='            reduce using rule 18
	'=='           reduce using rule 18
	'>'            reduce using rule 18
	'>='           reduce using rule 18
	'?'            reduce using rule 18
	'?.let'        reduce using rule 18
	']'            reduce using rule 18
	'downTo'       reduce using rule 18
	'step'         reduce using rule 18
	'until'        reduce using rule 18
	'||'           reduce using rule 18


State 144

	Exp5 -> Exp5 '<' Exp6 .                             (rule 16)
	Exp6 -> Exp6 . '+' Exp7                             (rule 21)
	Exp6 -> Exp6 . '-' Exp7                             (rule 22)

	'!='           reduce using rule 16
	'%='           reduce using rule 16
	'&&'           reduce using rule 16
	')'            reduce using rule 16
	'*='           reduce using rule 16
	'+'            shift, and enter state 95
	'+='           reduce using rule 16
	','            reduce using rule 16
	'-'            shift, and enter state 96
	'-='           reduce using rule 16
	'..'           reduce using rule 16
	'/='           reduce using rule 16
	':'            reduce using rule 16
	';'            reduce using rule 16
	'<'            reduce using rule 16
	'<='           reduce using rule 16
	'='            reduce using rule 16
	'=='           reduce using rule 16
	'>'            reduce using rule 16
	'>='           reduce using rule 16
	'?'            reduce using rule 16
	'?.let'        reduce using rule 16
	']'            reduce using rule 16
	'downTo'       reduce using rule 16
	'step'         reduce using rule 16
	'until'        reduce using rule 16
	'||'           reduce using rule 16


State 145

	Exp6 -> Exp6 '-' Exp7 .                             (rule 22)
	Exp7 -> Exp7 . '*' Exp8                             (rule 24)
	Exp7 -> Exp7 . '/' Exp8                             (rule 25)
	Exp7 -> Exp7 . '%' Exp8                             (rule 26)

	'!='           reduce using rule 22
	'%'            shift, and enter state 92
	'%='           reduce using rule 22
	'&&'           reduce using rule 22
	')'            reduce using rule 22
	'*'            shift, and enter state 93
	'*='           reduce using rule 22
	'+'            reduce using rule 22
	'+='           reduce using rule 22
	','            reduce using rule 22
	'-'            reduce using rule 22
	'-='           reduce using rule 22
	'..'           reduce using rule 22
	'/'            shift, and enter state 94
	'/='           reduce using rule 22
	':'            reduce using rule 22
	';'            reduce using rule 22
	'<'            reduce using rule 22
	'<='           reduce using rule 22
	'='            reduce using rule 22
	'=='           reduce using rule 22
	'>'            reduce using rule 22
	'>='           reduce using rule 22
	'?'            reduce using rule 22
	'?.let'        reduce using rule 22
	']'            reduce using rule 22
	'downTo'       reduce using rule 22
	'step'         reduce using rule 22
	'until'        reduce using rule 22
	'||'           reduce using rule 22


State 146

	Exp6 -> Exp6 '+' Exp7 .                             (rule 21)
	Exp7 -> Exp7 . '*' Exp8                             (rule 24)
	Exp7 -> Exp7 . '/' Exp8                             (rule 25)
	Exp7 -> Exp7 . '%' Exp8                             (rule 26)

	'!='           reduce using rule 21
	'%'            shift, and enter state 92
	'%='           reduce using rule 21
	'&&'           reduce using rule 21
	')'            reduce using rule 21
	'*'            shift, and enter state 93
	'*='           reduce using rule 21
	'+'            reduce using rule 21
	'+='           reduce using rule 21
	','            reduce using rule 21
	'-'            reduce using rule 21
	'-='           reduce using rule 21
	'..'           reduce using rule 21
	'/'            shift, and enter state 94
	'/='           reduce using rule 21
	':'            reduce using rule 21
	';'            reduce using rule 21
	'<'            reduce using rule 21
	'<='           reduce using rule 21
	'='            reduce using rule 21
	'=='           reduce using rule 21
	'>'            reduce using rule 21
	'>='           reduce using rule 21
	'?'            reduce using rule 21
	'?.let'        reduce using rule 21
	']'            reduce using rule 21
	'downTo'       reduce using rule 21
	'step'         reduce using rule 21
	'until'        reduce using rule 21
	'||'           reduce using rule 21


State 147

	Exp7 -> Exp7 '/' Exp8 .                             (rule 25)

	'!='           reduce using rule 25
	'%'            reduce using rule 25
	'%='           reduce using rule 25
	'&&'           reduce using rule 25
	')'            reduce using rule 25
	'*'            reduce using rule 25
	'*='           reduce using rule 25
	'+'            reduce using rule 25
	'+='           reduce using rule 25
	','            reduce using rule 25
	'-'            reduce using rule 25
	'-='           reduce using rule 25
	'..'           reduce using rule 25
	'/'            reduce using rule 25
	'/='           reduce using rule 25
	':'            reduce using rule 25
	';'            reduce using rule 25
	'<'            reduce using rule 25
	'<='           reduce using rule 25
	'='            reduce using rule 25
	'=='           reduce using rule 25
	'>'            reduce using rule 25
	'>='           reduce using rule 25
	'?'            reduce using rule 25
	'?.let'        reduce using rule 25
	']'            reduce using rule 25
	'downTo'       reduce using rule 25
	'step'         reduce using rule 25
	'until'        reduce using rule 25
	'||'           reduce using rule 25


State 148

	Exp7 -> Exp7 '*' Exp8 .                             (rule 24)

	'!='           reduce using rule 24
	'%'            reduce using rule 24
	'%='           reduce using rule 24
	'&&'           reduce using rule 24
	')'            reduce using rule 24
	'*'            reduce using rule 24
	'*='           reduce using rule 24
	'+'            reduce using rule 24
	'+='           reduce using rule 24
	','            reduce using rule 24
	'-'            reduce using rule 24
	'-='           reduce using rule 24
	'..'           reduce using rule 24
	'/'            reduce using rule 24
	'/='           reduce using rule 24
	':'            reduce using rule 24
	';'            reduce using rule 24
	'<'            reduce using rule 24
	'<='           reduce using rule 24
	'='            reduce using rule 24
	'=='           reduce using rule 24
	'>'            reduce using rule 24
	'>='           reduce using rule 24
	'?'            reduce using rule 24
	'?.let'        reduce using rule 24
	']'            reduce using rule 24
	'downTo'       reduce using rule 24
	'step'         reduce using rule 24
	'until'        reduce using rule 24
	'||'           reduce using rule 24


State 149

	Exp7 -> Exp7 '%' Exp8 .                             (rule 26)

	'!='           reduce using rule 26
	'%'            reduce using rule 26
	'%='           reduce using rule 26
	'&&'           reduce using rule 26
	')'            reduce using rule 26
	'*'            reduce using rule 26
	'*='           reduce using rule 26
	'+'            reduce using rule 26
	'+='           reduce using rule 26
	','            reduce using rule 26
	'-'            reduce using rule 26
	'-='           reduce using rule 26
	'..'           reduce using rule 26
	'/'            reduce using rule 26
	'/='           reduce using rule 26
	':'            reduce using rule 26
	';'            reduce using rule 26
	'<'            reduce using rule 26
	'<='           reduce using rule 26
	'='            reduce using rule 26
	'=='           reduce using rule 26
	'>'            reduce using rule 26
	'>='           reduce using rule 26
	'?'            reduce using rule 26
	'?.let'        reduce using rule 26
	']'            reduce using rule 26
	'downTo'       reduce using rule 26
	'step'         reduce using rule 26
	'until'        reduce using rule 26
	'||'           reduce using rule 26


State 150

	ArrayDec -> 'val' Ident '=' '[' Iterable ']' ';' .    (rule 112)

	'!'            reduce using rule 112
	'('            reduce using rule 112
	'++'           reduce using rule 112
	'-'            reduce using rule 112
	'--'           reduce using rule 112
	'Tupla'        reduce using rule 112
	'break'        reduce using rule 112
	'continue'     reduce using rule 112
	'false'        reduce using rule 112
	'for'          reduce using rule 112
	'fun'          reduce using rule 112
	'if'           reduce using rule 112
	'null'         reduce using rule 112
	'print'        reduce using rule 112
	'println'      reduce using rule 112
	'return'       reduce using rule 112
	'run'          reduce using rule 112
	'true'         reduce using rule 112
	'val'          reduce using rule 112
	'var'          reduce using rule 112
	'while'        reduce using rule 112
	'{'            reduce using rule 112
	'}'            reduce using rule 112
	L_integ        reduce using rule 112
	L_quoted       reduce using rule 112
	L_ident        reduce using rule 112
	%eof           reduce using rule 112


State 151

	Exp12 -> '(' Exp ')' .                              (rule 49)

	'!!'           reduce using rule 49
	'!='           reduce using rule 49
	'%'            reduce using rule 49
	'%='           reduce using rule 49
	'&&'           reduce using rule 49
	')'            reduce using rule 49
	'*'            reduce using rule 49
	'*='           reduce using rule 49
	'+'            reduce using rule 49
	'++'           reduce using rule 49
	'+='           reduce using rule 49
	','            reduce using rule 49
	'-'            reduce using rule 49
	'--'           reduce using rule 49
	'-='           reduce using rule 49
	'..'           reduce using rule 49
	'/'            reduce using rule 49
	'/='           reduce using rule 49
	':'            reduce using rule 49
	';'            reduce using rule 49
	'<'            reduce using rule 49
	'<='           reduce using rule 49
	'='            reduce using rule 49
	'=='           reduce using rule 49
	'>'            reduce using rule 49
	'>='           reduce using rule 49
	'?'            reduce using rule 49
	'?.let'        reduce using rule 49
	']'            reduce using rule 49
	'downTo'       reduce using rule 49
	'step'         reduce using rule 49
	'until'        reduce using rule 49
	'||'           reduce using rule 49


State 152

	Exp10 -> 'Tupla' '(' ListExp . ')'                  (rule 36)

	')'            shift, and enter state 162


State 153

	Exp10 -> '{' ListArg '->' . ListStm '}'             (rule 44)

	'!'            reduce using rule 92
	'('            reduce using rule 92
	'++'           reduce using rule 92
	'-'            reduce using rule 92
	'--'           reduce using rule 92
	'Tupla'        reduce using rule 92
	'break'        reduce using rule 92
	'continue'     reduce using rule 92
	'false'        reduce using rule 92
	'for'          reduce using rule 92
	'fun'          reduce using rule 92
	'if'           reduce using rule 92
	'null'         reduce using rule 92
	'print'        reduce using rule 92
	'println'      reduce using rule 92
	'return'       reduce using rule 92
	'run'          reduce using rule 92
	'true'         reduce using rule 92
	'val'          reduce using rule 92
	'var'          reduce using rule 92
	'while'        reduce using rule 92
	'{'            reduce using rule 92
	'}'            reduce using rule 92
	L_integ        reduce using rule 92
	L_quoted       reduce using rule 92
	L_ident        reduce using rule 92

	ListStm        goto state 161

State 154

	ArrayDec -> 'val' Ident '=' 'Array' '(' Exp ',' . Exp ')' ';'    (rule 111)

	'!'            shift, and enter state 56
	'('            shift, and enter state 57
	'++'           shift, and enter state 58
	'-'            shift, and enter state 59
	'--'           shift, and enter state 60
	'Tupla'        shift, and enter state 61
	'false'        shift, and enter state 62
	'null'         shift, and enter state 63
	'true'         shift, and enter state 64
	'{'            shift, and enter state 65
	L_integ        shift, and enter state 2
	L_quoted       shift, and enter state 66
	L_ident        shift, and enter state 13

	Integer        goto state 38
	String         goto state 39
	Ident          goto state 74
	Exp            goto state 160
	Exp1           goto state 42
	Exp2           goto state 43
	Exp3           goto state 44
	Exp4           goto state 45
	Exp5           goto state 46
	Exp6           goto state 47
	Exp7           goto state 48
	Exp8           goto state 49
	Exp9           goto state 50
	Exp10          goto state 51
	Exp11          goto state 52
	Exp12          goto state 53
	FunctionExp    goto state 54

State 155

	BaseType -> 'Tupla' '<' ListType '>' .              (rule 62)

	')'            reduce using rule 62
	','            reduce using rule 62
	'->'           reduce using rule 62
	';'            reduce using rule 62
	'='            reduce using rule 62
	'>'            reduce using rule 62
	'?'            reduce using rule 62
	'{'            reduce using rule 62


State 156

	ListType -> Type ',' ListType .                     (rule 73)

	')'            reduce using rule 73
	'>'            reduce using rule 73


State 157

	Type -> '(' ListType ')' '->' . RetType             (rule 70)

	'('            shift, and enter state 22
	'Bool'         shift, and enter state 23
	'Int'          shift, and enter state 24
	'String'       shift, and enter state 25
	'Tupla'        shift, and enter state 26
	'Unit'         shift, and enter state 126

	BaseType       goto state 20
	RetType        goto state 159
	Type           goto state 125

State 158

	Dec -> 'var' Ident ':' Type '=' Exp ';' .           (rule 99)

	'!'            reduce using rule 99
	'('            reduce using rule 99
	'++'           reduce using rule 99
	'-'            reduce using rule 99
	'--'           reduce using rule 99
	'Tupla'        reduce using rule 99
	'break'        reduce using rule 99
	'continue'     reduce using rule 99
	'false'        reduce using rule 99
	'for'          reduce using rule 99
	'fun'          reduce using rule 99
	'if'           reduce using rule 99
	'null'         reduce using rule 99
	'print'        reduce using rule 99
	'println'      reduce using rule 99
	'return'       reduce using rule 99
	'run'          reduce using rule 99
	'true'         reduce using rule 99
	'val'          reduce using rule 99
	'var'          reduce using rule 99
	'while'        reduce using rule 99
	'{'            reduce using rule 99
	'}'            reduce using rule 99
	L_integ        reduce using rule 99
	L_quoted       reduce using rule 99
	L_ident        reduce using rule 99
	%eof           reduce using rule 99


State 159

	Type -> '(' ListType ')' '->' RetType .             (rule 70)

	')'            reduce using rule 70
	','            reduce using rule 70
	'->'           reduce using rule 70
	';'            reduce using rule 70
	'='            reduce using rule 70
	'>'            reduce using rule 70
	'{'            reduce using rule 70


State 160

	Exp -> Exp . OpAssign Exp1                          (rule 5)
	ArrayDec -> 'val' Ident '=' 'Array' '(' Exp ',' Exp . ')' ';'    (rule 111)

	'%='           shift, and enter state 107
	')'            shift, and enter state 189
	'*='           shift, and enter state 108
	'+='           shift, and enter state 109
	'-='           shift, and enter state 110
	'/='           shift, and enter state 112
	'='            shift, and enter state 113

	OpAssign       goto state 106

State 161

	Exp10 -> '{' ListArg '->' ListStm . '}'             (rule 44)
	ListStm -> ListStm . Stm                            (rule 93)

	'!'            shift, and enter state 56
	'('            shift, and enter state 57
	'++'           shift, and enter state 58
	'-'            shift, and enter state 59
	'--'           shift, and enter state 60
	'Tupla'        shift, and enter state 61
	'break'        shift, and enter state 179
	'continue'     shift, and enter state 180
	'false'        shift, and enter state 62
	'for'          shift, and enter state 181
	'fun'          shift, and enter state 9
	'if'           shift, and enter state 182
	'null'         shift, and enter state 63
	'print'        shift, and enter state 183
	'println'      shift, and enter state 184
	'return'       shift, and enter state 185
	'run'          shift, and enter state 186
	'true'         shift, and enter state 64
	'val'          shift, and enter state 10
	'var'          shift, and enter state 11
	'while'        shift, and enter state 187
	'{'            shift, and enter state 65
	'}'            shift, and enter state 188
	L_integ        shift, and enter state 2
	L_quoted       shift, and enter state 66
	L_ident        shift, and enter state 13

	Integer        goto state 38
	String         goto state 39
	Ident          goto state 74
	Exp            goto state 176
	Exp1           goto state 42
	Exp2           goto state 43
	Exp3           goto state 44
	Exp4           goto state 45
	Exp5           goto state 46
	Exp6           goto state 47
	Exp7           goto state 48
	Exp8           goto state 49
	Exp9           goto state 50
	Exp10          goto state 51
	Exp11          goto state 52
	Exp12          goto state 53
	Stm            goto state 177
	Dec            goto state 178
	FunctionDec    goto state 7
	FunctionExp    goto state 54
	ArrayDec       goto state 8

State 162

	Exp10 -> 'Tupla' '(' ListExp ')' .                  (rule 36)

	'!='           reduce using rule 36
	'%'            reduce using rule 36
	'%='           reduce using rule 36
	'&&'           reduce using rule 36
	')'            reduce using rule 36
	'*'            reduce using rule 36
	'*='           reduce using rule 36
	'+'            reduce using rule 36
	'+='           reduce using rule 36
	','            reduce using rule 36
	'-'            reduce using rule 36
	'-='           reduce using rule 36
	'..'           reduce using rule 36
	'/'            reduce using rule 36
	'/='           reduce using rule 36
	':'            reduce using rule 36
	';'            reduce using rule 36
	'<'            reduce using rule 36
	'<='           reduce using rule 36
	'='            reduce using rule 36
	'=='           reduce using rule 36
	'>'            reduce using rule 36
	'>='           reduce using rule 36
	'?'            reduce using rule 36
	'?.let'        reduce using rule 36
	']'            reduce using rule 36
	'downTo'       reduce using rule 36
	'step'         reduce using rule 36
	'until'        reduce using rule 36
	'||'           reduce using rule 36


State 163

	Exp1 -> Exp3 '?' Exp1 ':' . Exp2                    (rule 7)

	'!'            shift, and enter state 56
	'('            shift, and enter state 57
	'++'           shift, and enter state 58
	'-'            shift, and enter state 59
	'--'           shift, and enter state 60
	'Tupla'        shift, and enter state 61
	'false'        shift, and enter state 62
	'null'         shift, and enter state 63
	'true'         shift, and enter state 64
	'{'            shift, and enter state 65
	L_integ        shift, and enter state 2
	L_quoted       shift, and enter state 66
	L_ident        shift, and enter state 13

	Integer        goto state 38
	String         goto state 39
	Ident          goto state 74
	Exp2           goto state 174
	Exp3           goto state 175
	Exp4           goto state 45
	Exp5           goto state 46
	Exp6           goto state 47
	Exp7           goto state 48
	Exp8           goto state 49
	Exp9           goto state 50
	Exp10          goto state 51
	Exp11          goto state 52
	Exp12          goto state 53
	FunctionExp    goto state 54

State 164

	Iterable -> Exp 'downTo' Exp 'step' . Exp           (rule 110)

	'!'            shift, and enter state 56
	'('            shift, and enter state 57
	'++'           shift, and enter state 58
	'-'            shift, and enter state 59
	'--'           shift, and enter state 60
	'Tupla'        shift, and enter state 61
	'false'        shift, and enter state 62
	'null'         shift, and enter state 63
	'true'         shift, and enter state 64
	'{'            shift, and enter state 65
	L_integ        shift, and enter state 2
	L_quoted       shift, and enter state 66
	L_ident        shift, and enter state 13

	Integer        goto state 38
	String         goto state 39
	Ident          goto state 74
	Exp            goto state 173
	Exp1           goto state 42
	Exp2           goto state 43
	Exp3           goto state 44
	Exp4           goto state 45
	Exp5           goto state 46
	Exp6           goto state 47
	Exp7           goto state 48
	Exp8           goto state 49
	Exp9           goto state 50
	Exp10          goto state 51
	Exp11          goto state 52
	Exp12          goto state 53
	FunctionExp    goto state 54

State 165

	Iterable -> Exp 'until' Exp 'step' . Exp            (rule 109)

	'!'            shift, and enter state 56
	'('            shift, and enter state 57
	'++'           shift, and enter state 58
	'-'            shift, and enter state 59
	'--'           shift, and enter state 60
	'Tupla'        shift, and enter state 61
	'false'        shift, and enter state 62
	'null'         shift, and enter state 63
	'true'         shift, and enter state 64
	'{'            shift, and enter state 65
	L_integ        shift, and enter state 2
	L_quoted       shift, and enter state 66
	L_ident        shift, and enter state 13

	Integer        goto state 38
	String         goto state 39
	Ident          goto state 74
	Exp            goto state 172
	Exp1           goto state 42
	Exp2           goto state 43
	Exp3           goto state 44
	Exp4           goto state 45
	Exp5           goto state 46
	Exp6           goto state 47
	Exp7           goto state 48
	Exp8           goto state 49
	Exp9           goto state 50
	Exp10          goto state 51
	Exp11          goto state 52
	Exp12          goto state 53
	FunctionExp    goto state 54

State 166

	FunctionExp -> Ident '(' ListExp ')' .              (rule 104)

	'!='           reduce using rule 104
	'%'            reduce using rule 104
	'%='           reduce using rule 104
	'&&'           reduce using rule 104
	')'            reduce using rule 104
	'*'            reduce using rule 104
	'*='           reduce using rule 104
	'+'            reduce using rule 104
	'+='           reduce using rule 104
	','            reduce using rule 104
	'-'            reduce using rule 104
	'-='           reduce using rule 104
	'..'           reduce using rule 104
	'/'            reduce using rule 104
	'/='           reduce using rule 104
	':'            reduce using rule 104
	';'            reduce using rule 104
	'<'            reduce using rule 104
	'<='           reduce using rule 104
	'='            reduce using rule 104
	'=='           reduce using rule 104
	'>'            reduce using rule 104
	'>='           reduce using rule 104
	'?'            reduce using rule 104
	'?.let'        reduce using rule 104
	']'            reduce using rule 104
	'downTo'       reduce using rule 104
	'step'         reduce using rule 104
	'until'        reduce using rule 104
	'||'           reduce using rule 104


State 167

	ListExp -> Exp ',' . ListExp                        (rule 52)

	'!'            shift, and enter state 56
	'('            shift, and enter state 57
	')'            reduce using rule 50
	'++'           shift, and enter state 58
	'-'            shift, and enter state 59
	'--'           shift, and enter state 60
	'Tupla'        shift, and enter state 61
	'false'        shift, and enter state 62
	'null'         shift, and enter state 63
	'true'         shift, and enter state 64
	'{'            shift, and enter state 65
	L_integ        shift, and enter state 2
	L_quoted       shift, and enter state 66
	L_ident        shift, and enter state 13

	Integer        goto state 38
	String         goto state 39
	Ident          goto state 74
	Exp            goto state 129
	Exp1           goto state 42
	Exp2           goto state 43
	Exp3           goto state 44
	Exp4           goto state 45
	Exp5           goto state 46
	Exp6           goto state 47
	Exp7           goto state 48
	Exp8           goto state 49
	Exp9           goto state 50
	Exp10          goto state 51
	Exp11          goto state 52
	Exp12          goto state 53
	ListExp        goto state 171
	FunctionExp    goto state 54

State 168

	DimExp -> '[' Exp ']' .                             (rule 53)

	'!='           reduce using rule 53
	'%'            reduce using rule 53
	'%='           reduce using rule 53
	'&&'           reduce using rule 53
	')'            reduce using rule 53
	'*'            reduce using rule 53
	'*='           reduce using rule 53
	'+'            reduce using rule 53
	'+='           reduce using rule 53
	','            reduce using rule 53
	'-'            reduce using rule 53
	'-='           reduce using rule 53
	'..'           reduce using rule 53
	'/'            reduce using rule 53
	'/='           reduce using rule 53
	':'            reduce using rule 53
	';'            reduce using rule 53
	'<'            reduce using rule 53
	'<='           reduce using rule 53
	'='            reduce using rule 53
	'=='           reduce using rule 53
	'>'            reduce using rule 53
	'>='           reduce using rule 53
	'?'            reduce using rule 53
	'?.let'        reduce using rule 53
	'['            reduce using rule 53
	']'            reduce using rule 53
	'downTo'       reduce using rule 53
	'step'         reduce using rule 53
	'until'        reduce using rule 53
	'||'           reduce using rule 53


State 169

	FunctionDec -> 'fun' Ident '(' ListArg ')' ':' RetType '{' . ListStm '}'    (rule 103)

	'!'            reduce using rule 92
	'('            reduce using rule 92
	'++'           reduce using rule 92
	'-'            reduce using rule 92
	'--'           reduce using rule 92
	'Tupla'        reduce using rule 92
	'break'        reduce using rule 92
	'continue'     reduce using rule 92
	'false'        reduce using rule 92
	'for'          reduce using rule 92
	'fun'          reduce using rule 92
	'if'           reduce using rule 92
	'null'         reduce using rule 92
	'print'        reduce using rule 92
	'println'      reduce using rule 92
	'return'       reduce using rule 92
	'run'          reduce using rule 92
	'true'         reduce using rule 92
	'val'          reduce using rule 92
	'var'          reduce using rule 92
	'while'        reduce using rule 92
	'{'            reduce using rule 92
	'}'            reduce using rule 92
	L_integ        reduce using rule 92
	L_quoted       reduce using rule 92
	L_ident        reduce using rule 92

	ListStm        goto state 170

State 170

	ListStm -> ListStm . Stm                            (rule 93)
	FunctionDec -> 'fun' Ident '(' ListArg ')' ':' RetType '{' ListStm . '}'    (rule 103)

	'!'            shift, and enter state 56
	'('            shift, and enter state 57
	'++'           shift, and enter state 58
	'-'            shift, and enter state 59
	'--'           shift, and enter state 60
	'Tupla'        shift, and enter state 61
	'break'        shift, and enter state 179
	'continue'     shift, and enter state 180
	'false'        shift, and enter state 62
	'for'          shift, and enter state 181
	'fun'          shift, and enter state 9
	'if'           shift, and enter state 182
	'null'         shift, and enter state 63
	'print'        shift, and enter state 183
	'println'      shift, and enter state 184
	'return'       shift, and enter state 185
	'run'          shift, and enter state 186
	'true'         shift, and enter state 64
	'val'          shift, and enter state 10
	'var'          shift, and enter state 11
	'while'        shift, and enter state 187
	'{'            shift, and enter state 65
	'}'            shift, and enter state 203
	L_integ        shift, and enter state 2
	L_quoted       shift, and enter state 66
	L_ident        shift, and enter state 13

	Integer        goto state 38
	String         goto state 39
	Ident          goto state 74
	Exp            goto state 176
	Exp1           goto state 42
	Exp2           goto state 43
	Exp3           goto state 44
	Exp4           goto state 45
	Exp5           goto state 46
	Exp6           goto state 47
	Exp7           goto state 48
	Exp8           goto state 49
	Exp9           goto state 50
	Exp10          goto state 51
	Exp11          goto state 52
	Exp12          goto state 53
	Stm            goto state 177
	Dec            goto state 178
	FunctionDec    goto state 7
	FunctionExp    goto state 54
	ArrayDec       goto state 8

State 171

	ListExp -> Exp ',' ListExp .                        (rule 52)

	')'            reduce using rule 52


State 172

	Exp -> Exp . OpAssign Exp1                          (rule 5)
	Iterable -> Exp 'until' Exp 'step' Exp .            (rule 109)

	'%='           shift, and enter state 107
	')'            reduce using rule 109
	'*='           shift, and enter state 108
	'+='           shift, and enter state 109
	'-='           shift, and enter state 110
	'/='           shift, and enter state 112
	'='            shift, and enter state 113
	']'            reduce using rule 109

	OpAssign       goto state 106

State 173

	Exp -> Exp . OpAssign Exp1                          (rule 5)
	Iterable -> Exp 'downTo' Exp 'step' Exp .           (rule 110)

	'%='           shift, and enter state 107
	')'            reduce using rule 110
	'*='           shift, and enter state 108
	'+='           shift, and enter state 109
	'-='           shift, and enter state 110
	'/='           shift, and enter state 112
	'='            shift, and enter state 113
	']'            reduce using rule 110

	OpAssign       goto state 106

State 174

	Exp1 -> Exp3 '?' Exp1 ':' Exp2 .                    (rule 7)
	Exp2 -> Exp2 . '||' Exp3                            (rule 9)

	'%='           reduce using rule 7
	')'            reduce using rule 7
	'*='           reduce using rule 7
	'+='           reduce using rule 7
	','            reduce using rule 7
	'-='           reduce using rule 7
	'..'           reduce using rule 7
	'/='           reduce using rule 7
	':'            reduce using rule 7
	';'            reduce using rule 7
	'='            reduce using rule 7
	'?.let'        reduce using rule 7
	']'            reduce using rule 7
	'downTo'       reduce using rule 7
	'step'         reduce using rule 7
	'until'        reduce using rule 7
	'||'           shift, and enter state 105


State 175

	Exp2 -> Exp3 .                                      (rule 10)
	Exp3 -> Exp3 . '&&' Exp4                            (rule 11)

	'%='           reduce using rule 10
	'&&'           shift, and enter state 103
	')'            reduce using rule 10
	'*='           reduce using rule 10
	'+='           reduce using rule 10
	','            reduce using rule 10
	'-='           reduce using rule 10
	'..'           reduce using rule 10
	'/='           reduce using rule 10
	':'            reduce using rule 10
	';'            reduce using rule 10
	'='            reduce using rule 10
	'?.let'        reduce using rule 10
	']'            reduce using rule 10
	'downTo'       reduce using rule 10
	'step'         reduce using rule 10
	'until'        reduce using rule 10
	'||'           reduce using rule 10


State 176

	Exp -> Exp . OpAssign Exp1                          (rule 5)
	Stm -> Exp . ';'                                    (rule 79)
	Stm -> Exp . '?.let' '{' ListStm '}'                (rule 91)

	'%='           shift, and enter state 107
	'*='           shift, and enter state 108
	'+='           shift, and enter state 109
	'-='           shift, and enter state 110
	'/='           shift, and enter state 112
	';'            shift, and enter state 201
	'='            shift, and enter state 113
	'?.let'        shift, and enter state 202

	OpAssign       goto state 106

State 177

	ListStm -> ListStm Stm .                            (rule 93)

	'!'            reduce using rule 93
	'('            reduce using rule 93
	'++'           reduce using rule 93
	'-'            reduce using rule 93
	'--'           reduce using rule 93
	'Tupla'        reduce using rule 93
	'break'        reduce using rule 93
	'continue'     reduce using rule 93
	'false'        reduce using rule 93
	'for'          reduce using rule 93
	'fun'          reduce using rule 93
	'if'           reduce using rule 93
	'null'         reduce using rule 93
	'print'        reduce using rule 93
	'println'      reduce using rule 93
	'return'       reduce using rule 93
	'run'          reduce using rule 93
	'true'         reduce using rule 93
	'val'          reduce using rule 93
	'var'          reduce using rule 93
	'while'        reduce using rule 93
	'{'            reduce using rule 93
	'}'            reduce using rule 93
	L_integ        reduce using rule 93
	L_quoted       reduce using rule 93
	L_ident        reduce using rule 93


State 178

	Stm -> Dec .                                        (rule 78)

	'!'            reduce using rule 78
	'('            reduce using rule 78
	'++'           reduce using rule 78
	'-'            reduce using rule 78
	'--'           reduce using rule 78
	'Tupla'        reduce using rule 78
	'break'        reduce using rule 78
	'continue'     reduce using rule 78
	'false'        reduce using rule 78
	'for'          reduce using rule 78
	'fun'          reduce using rule 78
	'if'           reduce using rule 78
	'null'         reduce using rule 78
	'print'        reduce using rule 78
	'println'      reduce using rule 78
	'return'       reduce using rule 78
	'run'          reduce using rule 78
	'true'         reduce using rule 78
	'val'          reduce using rule 78
	'var'          reduce using rule 78
	'while'        reduce using rule 78
	'{'            reduce using rule 78
	'}'            reduce using rule 78
	L_integ        reduce using rule 78
	L_quoted       reduce using rule 78
	L_ident        reduce using rule 78


State 179

	Stm -> 'break' . ';'                                (rule 83)

	';'            shift, and enter state 200


State 180

	Stm -> 'continue' . ';'                             (rule 84)

	';'            shift, and enter state 199


State 181

	Stm -> 'for' . '(' Ident 'in' Iterable ')' '{' ListStm '}'    (rule 81)

	'('            shift, and enter state 198


State 182

	Stm -> 'if' . '(' Exp ')' '{' ListStm '}'           (rule 87)
	Stm -> 'if' . '(' Exp ')' '{' ListStm '}' 'else' '{' ListStm '}'    (rule 88)

	'('            shift, and enter state 197


State 183

	Stm -> 'print' . '(' Exp ')' ';'                    (rule 89)

	'('            shift, and enter state 196


State 184

	Stm -> 'println' . '(' Exp ')' ';'                  (rule 90)

	'('            shift, and enter state 195


State 185

	Stm -> 'return' . Exp ';'                           (rule 85)
	Stm -> 'return' . ';'                               (rule 86)

	'!'            shift, and enter state 56
	'('            shift, and enter state 57
	'++'           shift, and enter state 58
	'-'            shift, and enter state 59
	'--'           shift, and enter state 60
	';'            shift, and enter state 194
	'Tupla'        shift, and enter state 61
	'false'        shift, and enter state 62
	'null'         shift, and enter state 63
	'true'         shift, and enter state 64
	'{'            shift, and enter state 65
	L_integ        shift, and enter state 2
	L_quoted       shift, and enter state 66
	L_ident        shift, and enter state 13

	Integer        goto state 38
	String         goto state 39
	Ident          goto state 74
	Exp            goto state 193
	Exp1           goto state 42
	Exp2           goto state 43
	Exp3           goto state 44
	Exp4           goto state 45
	Exp5           goto state 46
	Exp6           goto state 47
	Exp7           goto state 48
	Exp8           goto state 49
	Exp9           goto state 50
	Exp10          goto state 51
	Exp11          goto state 52
	Exp12          goto state 53
	FunctionExp    goto state 54

State 186

	Stm -> 'run' . '{' ListStm '}'                      (rule 80)

	'{'            shift, and enter state 192


State 187

	Stm -> 'while' . '(' Exp ')' '{' ListStm '}'        (rule 82)

	'('            shift, and enter state 191


State 188

	Exp10 -> '{' ListArg '->' ListStm '}' .             (rule 44)

	'!='           reduce using rule 44
	'%'            reduce using rule 44
	'%='           reduce using rule 44
	'&&'           reduce using rule 44
	')'            reduce using rule 44
	'*'            reduce using rule 44
	'*='           reduce using rule 44
	'+'            reduce using rule 44
	'+='           reduce using rule 44
	','            reduce using rule 44
	'-'            reduce using rule 44
	'-='           reduce using rule 44
	'..'           reduce using rule 44
	'/'            reduce using rule 44
	'/='           reduce using rule 44
	':'            reduce using rule 44
	';'            reduce using rule 44
	'<'            reduce using rule 44
	'<='           reduce using rule 44
	'='            reduce using rule 44
	'=='           reduce using rule 44
	'>'            reduce using rule 44
	'>='           reduce using rule 44
	'?'            reduce using rule 44
	'?.let'        reduce using rule 44
	']'            reduce using rule 44
	'downTo'       reduce using rule 44
	'step'         reduce using rule 44
	'until'        reduce using rule 44
	'||'           reduce using rule 44


State 189

	ArrayDec -> 'val' Ident '=' 'Array' '(' Exp ',' Exp ')' . ';'    (rule 111)

	';'            shift, and enter state 190


State 190

	ArrayDec -> 'val' Ident '=' 'Array' '(' Exp ',' Exp ')' ';' .    (rule 111)

	'!'            reduce using rule 111
	'('            reduce using rule 111
	'++'           reduce using rule 111
	'-'            reduce using rule 111
	'--'           reduce using rule 111
	'Tupla'        reduce using rule 111
	'break'        reduce using rule 111
	'continue'     reduce using rule 111
	'false'        reduce using rule 111
	'for'          reduce using rule 111
	'fun'          reduce using rule 111
	'if'           reduce using rule 111
	'null'         reduce using rule 111
	'print'        reduce using rule 111
	'println'      reduce using rule 111
	'return'       reduce using rule 111
	'run'          reduce using rule 111
	'true'         reduce using rule 111
	'val'          reduce using rule 111
	'var'          reduce using rule 111
	'while'        reduce using rule 111
	'{'            reduce using rule 111
	'}'            reduce using rule 111
	L_integ        reduce using rule 111
	L_quoted       reduce using rule 111
	L_ident        reduce using rule 111
	%eof           reduce using rule 111


State 191

	Stm -> 'while' '(' . Exp ')' '{' ListStm '}'        (rule 82)

	'!'            shift, and enter state 56
	'('            shift, and enter state 57
	'++'           shift, and enter state 58
	'-'            shift, and enter state 59
	'--'           shift, and enter state 60
	'Tupla'        shift, and enter state 61
	'false'        shift, and enter state 62
	'null'         shift, and enter state 63
	'true'         shift, and enter state 64
	'{'            shift, and enter state 65
	L_integ        shift, and enter state 2
	L_quoted       shift, and enter state 66
	L_ident        shift, and enter state 13

	Integer        goto state 38
	String         goto state 39
	Ident          goto state 74
	Exp            goto state 211
	Exp1           goto state 42
	Exp2           goto state 43
	Exp3           goto state 44
	Exp4           goto state 45
	Exp5           goto state 46
	Exp6           goto state 47
	Exp7           goto state 48
	Exp8           goto state 49
	Exp9           goto state 50
	Exp10          goto state 51
	Exp11          goto state 52
	Exp12          goto state 53
	FunctionExp    goto state 54

State 192

	Stm -> 'run' '{' . ListStm '}'                      (rule 80)

	'!'            reduce using rule 92
	'('            reduce using rule 92
	'++'           reduce using rule 92
	'-'            reduce using rule 92
	'--'           reduce using rule 92
	'Tupla'        reduce using rule 92
	'break'        reduce using rule 92
	'continue'     reduce using rule 92
	'false'        reduce using rule 92
	'for'          reduce using rule 92
	'fun'          reduce using rule 92
	'if'           reduce using rule 92
	'null'         reduce using rule 92
	'print'        reduce using rule 92
	'println'      reduce using rule 92
	'return'       reduce using rule 92
	'run'          reduce using rule 92
	'true'         reduce using rule 92
	'val'          reduce using rule 92
	'var'          reduce using rule 92
	'while'        reduce using rule 92
	'{'            reduce using rule 92
	'}'            reduce using rule 92
	L_integ        reduce using rule 92
	L_quoted       reduce using rule 92
	L_ident        reduce using rule 92

	ListStm        goto state 210

State 193

	Exp -> Exp . OpAssign Exp1                          (rule 5)
	Stm -> 'return' Exp . ';'                           (rule 85)

	'%='           shift, and enter state 107
	'*='           shift, and enter state 108
	'+='           shift, and enter state 109
	'-='           shift, and enter state 110
	'/='           shift, and enter state 112
	';'            shift, and enter state 209
	'='            shift, and enter state 113

	OpAssign       goto state 106

State 194

	Stm -> 'return' ';' .                               (rule 86)

	'!'            reduce using rule 86
	'('            reduce using rule 86
	'++'           reduce using rule 86
	'-'            reduce using rule 86
	'--'           reduce using rule 86
	'Tupla'        reduce using rule 86
	'break'        reduce using rule 86
	'continue'     reduce using rule 86
	'false'        reduce using rule 86
	'for'          reduce using rule 86
	'fun'          reduce using rule 86
	'if'           reduce using rule 86
	'null'         reduce using rule 86
	'print'        reduce using rule 86
	'println'      reduce using rule 86
	'return'       reduce using rule 86
	'run'          reduce using rule 86
	'true'         reduce using rule 86
	'val'          reduce using rule 86
	'var'          reduce using rule 86
	'while'        reduce using rule 86
	'{'            reduce using rule 86
	'}'            reduce using rule 86
	L_integ        reduce using rule 86
	L_quoted       reduce using rule 86
	L_ident        reduce using rule 86


State 195

	Stm -> 'println' '(' . Exp ')' ';'                  (rule 90)

	'!'            shift, and enter state 56
	'('            shift, and enter state 57
	'++'           shift, and enter state 58
	'-'            shift, and enter state 59
	'--'           shift, and enter state 60
	'Tupla'        shift, and enter state 61
	'false'        shift, and enter state 62
	'null'         shift, and enter state 63
	'true'         shift, and enter state 64
	'{'            shift, and enter state 65
	L_integ        shift, and enter state 2
	L_quoted       shift, and enter state 66
	L_ident        shift, and enter state 13

	Integer        goto state 38
	String         goto state 39
	Ident          goto state 74
	Exp            goto state 208
	Exp1           goto state 42
	Exp2           goto state 43
	Exp3           goto state 44
	Exp4           goto state 45
	Exp5           goto state 46
	Exp6           goto state 47
	Exp7           goto state 48
	Exp8           goto state 49
	Exp9           goto state 50
	Exp10          goto state 51
	Exp11          goto state 52
	Exp12          goto state 53
	FunctionExp    goto state 54

State 196

	Stm -> 'print' '(' . Exp ')' ';'                    (rule 89)

	'!'            shift, and enter state 56
	'('            shift, and enter state 57
	'++'           shift, and enter state 58
	'-'            shift, and enter state 59
	'--'           shift, and enter state 60
	'Tupla'        shift, and enter state 61
	'false'        shift, and enter state 62
	'null'         shift, and enter state 63
	'true'         shift, and enter state 64
	'{'            shift, and enter state 65
	L_integ        shift, and enter state 2
	L_quoted       shift, and enter state 66
	L_ident        shift, and enter state 13

	Integer        goto state 38
	String         goto state 39
	Ident          goto state 74
	Exp            goto state 207
	Exp1           goto state 42
	Exp2           goto state 43
	Exp3           goto state 44
	Exp4           goto state 45
	Exp5           goto state 46
	Exp6           goto state 47
	Exp7           goto state 48
	Exp8           goto state 49
	Exp9           goto state 50
	Exp10          goto state 51
	Exp11          goto state 52
	Exp12          goto state 53
	FunctionExp    goto state 54

State 197

	Stm -> 'if' '(' . Exp ')' '{' ListStm '}'           (rule 87)
	Stm -> 'if' '(' . Exp ')' '{' ListStm '}' 'else' '{' ListStm '}'    (rule 88)

	'!'            shift, and enter state 56
	'('            shift, and enter state 57
	'++'           shift, and enter state 58
	'-'            shift, and enter state 59
	'--'           shift, and enter state 60
	'Tupla'        shift, and enter state 61
	'false'        shift, and enter state 62
	'null'         shift, and enter state 63
	'true'         shift, and enter state 64
	'{'            shift, and enter state 65
	L_integ        shift, and enter state 2
	L_quoted       shift, and enter state 66
	L_ident        shift, and enter state 13

	Integer        goto state 38
	String         goto state 39
	Ident          goto state 74
	Exp            goto state 206
	Exp1           goto state 42
	Exp2           goto state 43
	Exp3           goto state 44
	Exp4           goto state 45
	Exp5           goto state 46
	Exp6           goto state 47
	Exp7           goto state 48
	Exp8           goto state 49
	Exp9           goto state 50
	Exp10          goto state 51
	Exp11          goto state 52
	Exp12          goto state 53
	FunctionExp    goto state 54

State 198

	Stm -> 'for' '(' . Ident 'in' Iterable ')' '{' ListStm '}'    (rule 81)

	L_ident        shift, and enter state 13

	Ident          goto state 205

State 199

	Stm -> 'continue' ';' .                             (rule 84)

	'!'            reduce using rule 84
	'('            reduce using rule 84
	'++'           reduce using rule 84
	'-'            reduce using rule 84
	'--'           reduce using rule 84
	'Tupla'        reduce using rule 84
	'break'        reduce using rule 84
	'continue'     reduce using rule 84
	'false'        reduce using rule 84
	'for'          reduce using rule 84
	'fun'          reduce using rule 84
	'if'           reduce using rule 84
	'null'         reduce using rule 84
	'print'        reduce using rule 84
	'println'      reduce using rule 84
	'return'       reduce using rule 84
	'run'          reduce using rule 84
	'true'         reduce using rule 84
	'val'          reduce using rule 84
	'var'          reduce using rule 84
	'while'        reduce using rule 84
	'{'            reduce using rule 84
	'}'            reduce using rule 84
	L_integ        reduce using rule 84
	L_quoted       reduce using rule 84
	L_ident        reduce using rule 84


State 200

	Stm -> 'break' ';' .                                (rule 83)

	'!'            reduce using rule 83
	'('            reduce using rule 83
	'++'           reduce using rule 83
	'-'            reduce using rule 83
	'--'           reduce using rule 83
	'Tupla'        reduce using rule 83
	'break'        reduce using rule 83
	'continue'     reduce using rule 83
	'false'        reduce using rule 83
	'for'          reduce using rule 83
	'fun'          reduce using rule 83
	'if'           reduce using rule 83
	'null'         reduce using rule 83
	'print'        reduce using rule 83
	'println'      reduce using rule 83
	'return'       reduce using rule 83
	'run'          reduce using rule 83
	'true'         reduce using rule 83
	'val'          reduce using rule 83
	'var'          reduce using rule 83
	'while'        reduce using rule 83
	'{'            reduce using rule 83
	'}'            reduce using rule 83
	L_integ        reduce using rule 83
	L_quoted       reduce using rule 83
	L_ident        reduce using rule 83


State 201

	Stm -> Exp ';' .                                    (rule 79)

	'!'            reduce using rule 79
	'('            reduce using rule 79
	'++'           reduce using rule 79
	'-'            reduce using rule 79
	'--'           reduce using rule 79
	'Tupla'        reduce using rule 79
	'break'        reduce using rule 79
	'continue'     reduce using rule 79
	'false'        reduce using rule 79
	'for'          reduce using rule 79
	'fun'          reduce using rule 79
	'if'           reduce using rule 79
	'null'         reduce using rule 79
	'print'        reduce using rule 79
	'println'      reduce using rule 79
	'return'       reduce using rule 79
	'run'          reduce using rule 79
	'true'         reduce using rule 79
	'val'          reduce using rule 79
	'var'          reduce using rule 79
	'while'        reduce using rule 79
	'{'            reduce using rule 79
	'}'            reduce using rule 79
	L_integ        reduce using rule 79
	L_quoted       reduce using rule 79
	L_ident        reduce using rule 79


State 202

	Stm -> Exp '?.let' . '{' ListStm '}'                (rule 91)

	'{'            shift, and enter state 204


State 203

	FunctionDec -> 'fun' Ident '(' ListArg ')' ':' RetType '{' ListStm '}' .    (rule 103)

	'!'            reduce using rule 103
	'('            reduce using rule 103
	'++'           reduce using rule 103
	'-'            reduce using rule 103
	'--'           reduce using rule 103
	'Tupla'        reduce using rule 103
	'break'        reduce using rule 103
	'continue'     reduce using rule 103
	'false'        reduce using rule 103
	'for'          reduce using rule 103
	'fun'          reduce using rule 103
	'if'           reduce using rule 103
	'null'         reduce using rule 103
	'print'        reduce using rule 103
	'println'      reduce using rule 103
	'return'       reduce using rule 103
	'run'          reduce using rule 103
	'true'         reduce using rule 103
	'val'          reduce using rule 103
	'var'          reduce using rule 103
	'while'        reduce using rule 103
	'{'            reduce using rule 103
	'}'            reduce using rule 103
	L_integ        reduce using rule 103
	L_quoted       reduce using rule 103
	L_ident        reduce using rule 103
	%eof           reduce using rule 103


State 204

	Stm -> Exp '?.let' '{' . ListStm '}'                (rule 91)

	'!'            reduce using rule 92
	'('            reduce using rule 92
	'++'           reduce using rule 92
	'-'            reduce using rule 92
	'--'           reduce using rule 92
	'Tupla'        reduce using rule 92
	'break'        reduce using rule 92
	'continue'     reduce using rule 92
	'false'        reduce using rule 92
	'for'          reduce using rule 92
	'fun'          reduce using rule 92
	'if'           reduce using rule 92
	'null'         reduce using rule 92
	'print'        reduce using rule 92
	'println'      reduce using rule 92
	'return'       reduce using rule 92
	'run'          reduce using rule 92
	'true'         reduce using rule 92
	'val'          reduce using rule 92
	'var'          reduce using rule 92
	'while'        reduce using rule 92
	'{'            reduce using rule 92
	'}'            reduce using rule 92
	L_integ        reduce using rule 92
	L_quoted       reduce using rule 92
	L_ident        reduce using rule 92

	ListStm        goto state 218

State 205

	Stm -> 'for' '(' Ident . 'in' Iterable ')' '{' ListStm '}'    (rule 81)

	'in'           shift, and enter state 217


State 206

	Exp -> Exp . OpAssign Exp1                          (rule 5)
	Stm -> 'if' '(' Exp . ')' '{' ListStm '}'           (rule 87)
	Stm -> 'if' '(' Exp . ')' '{' ListStm '}' 'else' '{' ListStm '}'    (rule 88)

	'%='           shift, and enter state 107
	')'            shift, and enter state 216
	'*='           shift, and enter state 108
	'+='           shift, and enter state 109
	'-='           shift, and enter state 110
	'/='           shift, and enter state 112
	'='            shift, and enter state 113

	OpAssign       goto state 106

State 207

	Exp -> Exp . OpAssign Exp1                          (rule 5)
	Stm -> 'print' '(' Exp . ')' ';'                    (rule 89)

	'%='           shift, and enter state 107
	')'            shift, and enter state 215
	'*='           shift, and enter state 108
	'+='           shift, and enter state 109
	'-='           shift, and enter state 110
	'/='           shift, and enter state 112
	'='            shift, and enter state 113

	OpAssign       goto state 106

State 208

	Exp -> Exp . OpAssign Exp1                          (rule 5)
	Stm -> 'println' '(' Exp . ')' ';'                  (rule 90)

	'%='           shift, and enter state 107
	')'            shift, and enter state 214
	'*='           shift, and enter state 108
	'+='           shift, and enter state 109
	'-='           shift, and enter state 110
	'/='           shift, and enter state 112
	'='            shift, and enter state 113

	OpAssign       goto state 106

State 209

	Stm -> 'return' Exp ';' .                           (rule 85)

	'!'            reduce using rule 85
	'('            reduce using rule 85
	'++'           reduce using rule 85
	'-'            reduce using rule 85
	'--'           reduce using rule 85
	'Tupla'        reduce using rule 85
	'break'        reduce using rule 85
	'continue'     reduce using rule 85
	'false'        reduce using rule 85
	'for'          reduce using rule 85
	'fun'          reduce using rule 85
	'if'           reduce using rule 85
	'null'         reduce using rule 85
	'print'        reduce using rule 85
	'println'      reduce using rule 85
	'return'       reduce using rule 85
	'run'          reduce using rule 85
	'true'         reduce using rule 85
	'val'          reduce using rule 85
	'var'          reduce using rule 85
	'while'        reduce using rule 85
	'{'            reduce using rule 85
	'}'            reduce using rule 85
	L_integ        reduce using rule 85
	L_quoted       reduce using rule 85
	L_ident        reduce using rule 85


State 210

	Stm -> 'run' '{' ListStm . '}'                      (rule 80)
	ListStm -> ListStm . Stm                            (rule 93)

	'!'            shift, and enter state 56
	'('            shift, and enter state 57
	'++'           shift, and enter state 58
	'-'            shift, and enter state 59
	'--'           shift, and enter state 60
	'Tupla'        shift, and enter state 61
	'break'        shift, and enter state 179
	'continue'     shift, and enter state 180
	'false'        shift, and enter state 62
	'for'          shift, and enter state 181
	'fun'          shift, and enter state 9
	'if'           shift, and enter state 182
	'null'         shift, and enter state 63
	'print'        shift, and enter state 183
	'println'      shift, and enter state 184
	'return'       shift, and enter state 185
	'run'          shift, and enter state 186
	'true'         shift, and enter state 64
	'val'          shift, and enter state 10
	'var'          shift, and enter state 11
	'while'        shift, and enter state 187
	'{'            shift, and enter state 65
	'}'            shift, and enter state 213
	L_integ        shift, and enter state 2
	L_quoted       shift, and enter state 66
	L_ident        shift, and enter state 13

	Integer        goto state 38
	String         goto state 39
	Ident          goto state 74
	Exp            goto state 176
	Exp1           goto state 42
	Exp2           goto state 43
	Exp3           goto state 44
	Exp4           goto state 45
	Exp5           goto state 46
	Exp6           goto state 47
	Exp7           goto state 48
	Exp8           goto state 49
	Exp9           goto state 50
	Exp10          goto state 51
	Exp11          goto state 52
	Exp12          goto state 53
	Stm            goto state 177
	Dec            goto state 178
	FunctionDec    goto state 7
	FunctionExp    goto state 54
	ArrayDec       goto state 8

State 211

	Exp -> Exp . OpAssign Exp1                          (rule 5)
	Stm -> 'while' '(' Exp . ')' '{' ListStm '}'        (rule 82)

	'%='           shift, and enter state 107
	')'            shift, and enter state 212
	'*='           shift, and enter state 108
	'+='           shift, and enter state 109
	'-='           shift, and enter state 110
	'/='           shift, and enter state 112
	'='            shift, and enter state 113

	OpAssign       goto state 106

State 212

	Stm -> 'while' '(' Exp ')' . '{' ListStm '}'        (rule 82)

	'{'            shift, and enter state 224


State 213

	Stm -> 'run' '{' ListStm '}' .                      (rule 80)

	'!'            reduce using rule 80
	'('            reduce using rule 80
	'++'           reduce using rule 80
	'-'            reduce using rule 80
	'--'           reduce using rule 80
	'Tupla'        reduce using rule 80
	'break'        reduce using rule 80
	'continue'     reduce using rule 80
	'false'        reduce using rule 80
	'for'          reduce using rule 80
	'fun'          reduce using rule 80
	'if'           reduce using rule 80
	'null'         reduce using rule 80
	'print'        reduce using rule 80
	'println'      reduce using rule 80
	'return'       reduce using rule 80
	'run'          reduce using rule 80
	'true'         reduce using rule 80
	'val'          reduce using rule 80
	'var'          reduce using rule 80
	'while'        reduce using rule 80
	'{'            reduce using rule 80
	'}'            reduce using rule 80
	L_integ        reduce using rule 80
	L_quoted       reduce using rule 80
	L_ident        reduce using rule 80


State 214

	Stm -> 'println' '(' Exp ')' . ';'                  (rule 90)

	';'            shift, and enter state 223


State 215

	Stm -> 'print' '(' Exp ')' . ';'                    (rule 89)

	';'            shift, and enter state 222


State 216

	Stm -> 'if' '(' Exp ')' . '{' ListStm '}'           (rule 87)
	Stm -> 'if' '(' Exp ')' . '{' ListStm '}' 'else' '{' ListStm '}'    (rule 88)

	'{'            shift, and enter state 221


State 217

	Stm -> 'for' '(' Ident 'in' . Iterable ')' '{' ListStm '}'    (rule 81)

	'!'            shift, and enter state 56
	'('            shift, and enter state 57
	'++'           shift, and enter state 58
	'-'            shift, and enter state 59
	'--'           shift, and enter state 60
	'Tupla'        shift, and enter state 61
	'false'        shift, and enter state 62
	'null'         shift, and enter state 63
	'true'         shift, and enter state 64
	'{'            shift, and enter state 65
	L_integ        shift, and enter state 2
	L_quoted       shift, and enter state 66
	L_ident        shift, and enter state 13

	Integer        goto state 38
	String         goto state 39
	Ident          goto state 40
	Exp            goto state 41
	Exp1           goto state 42
	Exp2           goto state 43
	Exp3           goto state 44
	Exp4           goto state 45
	Exp5           goto state 46
	Exp6           goto state 47
	Exp7           goto state 48
	Exp8           goto state 49
	Exp9           goto state 50
	Exp10          goto state 51
	Exp11          goto state 52
	Exp12          goto state 53
	FunctionExp    goto state 54
	Iterable       goto state 220

State 218

	Stm -> Exp '?.let' '{' ListStm . '}'                (rule 91)
	ListStm -> ListStm . Stm                            (rule 93)

	'!'            shift, and enter state 56
	'('            shift, and enter state 57
	'++'           shift, and enter state 58
	'-'            shift, and enter state 59
	'--'           shift, and enter state 60
	'Tupla'        shift, and enter state 61
	'break'        shift, and enter state 179
	'continue'     shift, and enter state 180
	'false'        shift, and enter state 62
	'for'          shift, and enter state 181
	'fun'          shift, and enter state 9
	'if'           shift, and enter state 182
	'null'         shift, and enter state 63
	'print'        shift, and enter state 183
	'println'      shift, and enter state 184
	'return'       shift, and enter state 185
	'run'          shift, and enter state 186
	'true'         shift, and enter state 64
	'val'          shift, and enter state 10
	'var'          shift, and enter state 11
	'while'        shift, and enter state 187
	'{'            shift, and enter state 65
	'}'            shift, and enter state 219
	L_integ        shift, and enter state 2
	L_quoted       shift, and enter state 66
	L_ident        shift, and enter state 13

	Integer        goto state 38
	String         goto state 39
	Ident          goto state 74
	Exp            goto state 176
	Exp1           goto state 42
	Exp2           goto state 43
	Exp3           goto state 44
	Exp4           goto state 45
	Exp5           goto state 46
	Exp6           goto state 47
	Exp7           goto state 48
	Exp8           goto state 49
	Exp9           goto state 50
	Exp10          goto state 51
	Exp11          goto state 52
	Exp12          goto state 53
	Stm            goto state 177
	Dec            goto state 178
	FunctionDec    goto state 7
	FunctionExp    goto state 54
	ArrayDec       goto state 8

State 219

	Stm -> Exp '?.let' '{' ListStm '}' .                (rule 91)

	'!'            reduce using rule 91
	'('            reduce using rule 91
	'++'           reduce using rule 91
	'-'            reduce using rule 91
	'--'           reduce using rule 91
	'Tupla'        reduce using rule 91
	'break'        reduce using rule 91
	'continue'     reduce using rule 91
	'false'        reduce using rule 91
	'for'          reduce using rule 91
	'fun'          reduce using rule 91
	'if'           reduce using rule 91
	'null'         reduce using rule 91
	'print'        reduce using rule 91
	'println'      reduce using rule 91
	'return'       reduce using rule 91
	'run'          reduce using rule 91
	'true'         reduce using rule 91
	'val'          reduce using rule 91
	'var'          reduce using rule 91
	'while'        reduce using rule 91
	'{'            reduce using rule 91
	'}'            reduce using rule 91
	L_integ        reduce using rule 91
	L_quoted       reduce using rule 91
	L_ident        reduce using rule 91


State 220

	Stm -> 'for' '(' Ident 'in' Iterable . ')' '{' ListStm '}'    (rule 81)

	')'            shift, and enter state 227


State 221

	Stm -> 'if' '(' Exp ')' '{' . ListStm '}'           (rule 87)
	Stm -> 'if' '(' Exp ')' '{' . ListStm '}' 'else' '{' ListStm '}'    (rule 88)

	'!'            reduce using rule 92
	'('            reduce using rule 92
	'++'           reduce using rule 92
	'-'            reduce using rule 92
	'--'           reduce using rule 92
	'Tupla'        reduce using rule 92
	'break'        reduce using rule 92
	'continue'     reduce using rule 92
	'false'        reduce using rule 92
	'for'          reduce using rule 92
	'fun'          reduce using rule 92
	'if'           reduce using rule 92
	'null'         reduce using rule 92
	'print'        reduce using rule 92
	'println'      reduce using rule 92
	'return'       reduce using rule 92
	'run'          reduce using rule 92
	'true'         reduce using rule 92
	'val'          reduce using rule 92
	'var'          reduce using rule 92
	'while'        reduce using rule 92
	'{'            reduce using rule 92
	'}'            reduce using rule 92
	L_integ        reduce using rule 92
	L_quoted       reduce using rule 92
	L_ident        reduce using rule 92

	ListStm        goto state 226

State 222

	Stm -> 'print' '(' Exp ')' ';' .                    (rule 89)

	'!'            reduce using rule 89
	'('            reduce using rule 89
	'++'           reduce using rule 89
	'-'            reduce using rule 89
	'--'           reduce using rule 89
	'Tupla'        reduce using rule 89
	'break'        reduce using rule 89
	'continue'     reduce using rule 89
	'false'        reduce using rule 89
	'for'          reduce using rule 89
	'fun'          reduce using rule 89
	'if'           reduce using rule 89
	'null'         reduce using rule 89
	'print'        reduce using rule 89
	'println'      reduce using rule 89
	'return'       reduce using rule 89
	'run'          reduce using rule 89
	'true'         reduce using rule 89
	'val'          reduce using rule 89
	'var'          reduce using rule 89
	'while'        reduce using rule 89
	'{'            reduce using rule 89
	'}'            reduce using rule 89
	L_integ        reduce using rule 89
	L_quoted       reduce using rule 89
	L_ident        reduce using rule 89


State 223

	Stm -> 'println' '(' Exp ')' ';' .                  (rule 90)

	'!'            reduce using rule 90
	'('            reduce using rule 90
	'++'           reduce using rule 90
	'-'            reduce using rule 90
	'--'           reduce using rule 90
	'Tupla'        reduce using rule 90
	'break'        reduce using rule 90
	'continue'     reduce using rule 90
	'false'        reduce using rule 90
	'for'          reduce using rule 90
	'fun'          reduce using rule 90
	'if'           reduce using rule 90
	'null'         reduce using rule 90
	'print'        reduce using rule 90
	'println'      reduce using rule 90
	'return'       reduce using rule 90
	'run'          reduce using rule 90
	'true'         reduce using rule 90
	'val'          reduce using rule 90
	'var'          reduce using rule 90
	'while'        reduce using rule 90
	'{'            reduce using rule 90
	'}'            reduce using rule 90
	L_integ        reduce using rule 90
	L_quoted       reduce using rule 90
	L_ident        reduce using rule 90


State 224

	Stm -> 'while' '(' Exp ')' '{' . ListStm '}'        (rule 82)

	'!'            reduce using rule 92
	'('            reduce using rule 92
	'++'           reduce using rule 92
	'-'            reduce using rule 92
	'--'           reduce using rule 92
	'Tupla'        reduce using rule 92
	'break'        reduce using rule 92
	'continue'     reduce using rule 92
	'false'        reduce using rule 92
	'for'          reduce using rule 92
	'fun'          reduce using rule 92
	'if'           reduce using rule 92
	'null'         reduce using rule 92
	'print'        reduce using rule 92
	'println'      reduce using rule 92
	'return'       reduce using rule 92
	'run'          reduce using rule 92
	'true'         reduce using rule 92
	'val'          reduce using rule 92
	'var'          reduce using rule 92
	'while'        reduce using rule 92
	'{'            reduce using rule 92
	'}'            reduce using rule 92
	L_integ        reduce using rule 92
	L_quoted       reduce using rule 92
	L_ident        reduce using rule 92

	ListStm        goto state 225

State 225

	Stm -> 'while' '(' Exp ')' '{' ListStm . '}'        (rule 82)
	ListStm -> ListStm . Stm                            (rule 93)

	'!'            shift, and enter state 56
	'('            shift, and enter state 57
	'++'           shift, and enter state 58
	'-'            shift, and enter state 59
	'--'           shift, and enter state 60
	'Tupla'        shift, and enter state 61
	'break'        shift, and enter state 179
	'continue'     shift, and enter state 180
	'false'        shift, and enter state 62
	'for'          shift, and enter state 181
	'fun'          shift, and enter state 9
	'if'           shift, and enter state 182
	'null'         shift, and enter state 63
	'print'        shift, and enter state 183
	'println'      shift, and enter state 184
	'return'       shift, and enter state 185
	'run'          shift, and enter state 186
	'true'         shift, and enter state 64
	'val'          shift, and enter state 10
	'var'          shift, and enter state 11
	'while'        shift, and enter state 187
	'{'            shift, and enter state 65
	'}'            shift, and enter state 230
	L_integ        shift, and enter state 2
	L_quoted       shift, and enter state 66
	L_ident        shift, and enter state 13

	Integer        goto state 38
	String         goto state 39
	Ident          goto state 74
	Exp            goto state 176
	Exp1           goto state 42
	Exp2           goto state 43
	Exp3           goto state 44
	Exp4           goto state 45
	Exp5           goto state 46
	Exp6           goto state 47
	Exp7           goto state 48
	Exp8           goto state 49
	Exp9           goto state 50
	Exp10          goto state 51
	Exp11          goto state 52
	Exp12          goto state 53
	Stm            goto state 177
	Dec            goto state 178
	FunctionDec    goto state 7
	FunctionExp    goto state 54
	ArrayDec       goto state 8

State 226

	Stm -> 'if' '(' Exp ')' '{' ListStm . '}'           (rule 87)
	Stm -> 'if' '(' Exp ')' '{' ListStm . '}' 'else' '{' ListStm '}'    (rule 88)
	ListStm -> ListStm . Stm                            (rule 93)

	'!'            shift, and enter state 56
	'('            shift, and enter state 57
	'++'           shift, and enter state 58
	'-'            shift, and enter state 59
	'--'           shift, and enter state 60
	'Tupla'        shift, and enter state 61
	'break'        shift, and enter state 179
	'continue'     shift, and enter state 180
	'false'        shift, and enter state 62
	'for'          shift, and enter state 181
	'fun'          shift, and enter state 9
	'if'           shift, and enter state 182
	'null'         shift, and enter state 63
	'print'        shift, and enter state 183
	'println'      shift, and enter state 184
	'return'       shift, and enter state 185
	'run'          shift, and enter state 186
	'true'         shift, and enter state 64
	'val'          shift, and enter state 10
	'var'          shift, and enter state 11
	'while'        shift, and enter state 187
	'{'            shift, and enter state 65
	'}'            shift, and enter state 229
	L_integ        shift, and enter state 2
	L_quoted       shift, and enter state 66
	L_ident        shift, and enter state 13

	Integer        goto state 38
	String         goto state 39
	Ident          goto state 74
	Exp            goto state 176
	Exp1           goto state 42
	Exp2           goto state 43
	Exp3           goto state 44
	Exp4           goto state 45
	Exp5           goto state 46
	Exp6           goto state 47
	Exp7           goto state 48
	Exp8           goto state 49
	Exp9           goto state 50
	Exp10          goto state 51
	Exp11          goto state 52
	Exp12          goto state 53
	Stm            goto state 177
	Dec            goto state 178
	FunctionDec    goto state 7
	FunctionExp    goto state 54
	ArrayDec       goto state 8

State 227

	Stm -> 'for' '(' Ident 'in' Iterable ')' . '{' ListStm '}'    (rule 81)

	'{'            shift, and enter state 228


State 228

	Stm -> 'for' '(' Ident 'in' Iterable ')' '{' . ListStm '}'    (rule 81)

	'!'            reduce using rule 92
	'('            reduce using rule 92
	'++'           reduce using rule 92
	'-'            reduce using rule 92
	'--'           reduce using rule 92
	'Tupla'        reduce using rule 92
	'break'        reduce using rule 92
	'continue'     reduce using rule 92
	'false'        reduce using rule 92
	'for'          reduce using rule 92
	'fun'          reduce using rule 92
	'if'           reduce using rule 92
	'null'         reduce using rule 92
	'print'        reduce using rule 92
	'println'      reduce using rule 92
	'return'       reduce using rule 92
	'run'          reduce using rule 92
	'true'         reduce using rule 92
	'val'          reduce using rule 92
	'var'          reduce using rule 92
	'while'        reduce using rule 92
	'{'            reduce using rule 92
	'}'            reduce using rule 92
	L_integ        reduce using rule 92
	L_quoted       reduce using rule 92
	L_ident        reduce using rule 92

	ListStm        goto state 232

State 229

	Stm -> 'if' '(' Exp ')' '{' ListStm '}' .           (rule 87)
	Stm -> 'if' '(' Exp ')' '{' ListStm '}' . 'else' '{' ListStm '}'    (rule 88)

	'!'            reduce using rule 87
	'('            reduce using rule 87
	'++'           reduce using rule 87
	'-'            reduce using rule 87
	'--'           reduce using rule 87
	'Tupla'        reduce using rule 87
	'break'        reduce using rule 87
	'continue'     reduce using rule 87
	'else'         shift, and enter state 231
	'false'        reduce using rule 87
	'for'          reduce using rule 87
	'fun'          reduce using rule 87
	'if'           reduce using rule 87
	'null'         reduce using rule 87
	'print'        reduce using rule 87
	'println'      reduce using rule 87
	'return'       reduce using rule 87
	'run'          reduce using rule 87
	'true'         reduce using rule 87
	'val'          reduce using rule 87
	'var'          reduce using rule 87
	'while'        reduce using rule 87
	'{'            reduce using rule 87
	'}'            reduce using rule 87
	L_integ        reduce using rule 87
	L_quoted       reduce using rule 87
	L_ident        reduce using rule 87


State 230

	Stm -> 'while' '(' Exp ')' '{' ListStm '}' .        (rule 82)

	'!'            reduce using rule 82
	'('            reduce using rule 82
	'++'           reduce using rule 82
	'-'            reduce using rule 82
	'--'           reduce using rule 82
	'Tupla'        reduce using rule 82
	'break'        reduce using rule 82
	'continue'     reduce using rule 82
	'false'        reduce using rule 82
	'for'          reduce using rule 82
	'fun'          reduce using rule 82
	'if'           reduce using rule 82
	'null'         reduce using rule 82
	'print'        reduce using rule 82
	'println'      reduce using rule 82
	'return'       reduce using rule 82
	'run'          reduce using rule 82
	'true'         reduce using rule 82
	'val'          reduce using rule 82
	'var'          reduce using rule 82
	'while'        reduce using rule 82
	'{'            reduce using rule 82
	'}'            reduce using rule 82
	L_integ        reduce using rule 82
	L_quoted       reduce using rule 82
	L_ident        reduce using rule 82


State 231

	Stm -> 'if' '(' Exp ')' '{' ListStm '}' 'else' . '{' ListStm '}'    (rule 88)

	'{'            shift, and enter state 234


State 232

	Stm -> 'for' '(' Ident 'in' Iterable ')' '{' ListStm . '}'    (rule 81)
	ListStm -> ListStm . Stm                            (rule 93)

	'!'            shift, and enter state 56
	'('            shift, and enter state 57
	'++'           shift, and enter state 58
	'-'            shift, and enter state 59
	'--'           shift, and enter state 60
	'Tupla'        shift, and enter state 61
	'break'        shift, and enter state 179
	'continue'     shift, and enter state 180
	'false'        shift, and enter state 62
	'for'          shift, and enter state 181
	'fun'          shift, and enter state 9
	'if'           shift, and enter state 182
	'null'         shift, and enter state 63
	'print'        shift, and enter state 183
	'println'      shift, and enter state 184
	'return'       shift, and enter state 185
	'run'          shift, and enter state 186
	'true'         shift, and enter state 64
	'val'          shift, and enter state 10
	'var'          shift, and enter state 11
	'while'        shift, and enter state 187
	'{'            shift, and enter state 65
	'}'            shift, and enter state 233
	L_integ        shift, and enter state 2
	L_quoted       shift, and enter state 66
	L_ident        shift, and enter state 13

	Integer        goto state 38
	String         goto state 39
	Ident          goto state 74
	Exp            goto state 176
	Exp1           goto state 42
	Exp2           goto state 43
	Exp3           goto state 44
	Exp4           goto state 45
	Exp5           goto state 46
	Exp6           goto state 47
	Exp7           goto state 48
	Exp8           goto state 49
	Exp9           goto state 50
	Exp10          goto state 51
	Exp11          goto state 52
	Exp12          goto state 53
	Stm            goto state 177
	Dec            goto state 178
	FunctionDec    goto state 7
	FunctionExp    goto state 54
	ArrayDec       goto state 8

State 233

	Stm -> 'for' '(' Ident 'in' Iterable ')' '{' ListStm '}' .    (rule 81)

	'!'            reduce using rule 81
	'('            reduce using rule 81
	'++'           reduce using rule 81
	'-'            reduce using rule 81
	'--'           reduce using rule 81
	'Tupla'        reduce using rule 81
	'break'        reduce using rule 81
	'continue'     reduce using rule 81
	'false'        reduce using rule 81
	'for'          reduce using rule 81
	'fun'          reduce using rule 81
	'if'           reduce using rule 81
	'null'         reduce using rule 81
	'print'        reduce using rule 81
	'println'      reduce using rule 81
	'return'       reduce using rule 81
	'run'          reduce using rule 81
	'true'         reduce using rule 81
	'val'          reduce using rule 81
	'var'          reduce using rule 81
	'while'        reduce using rule 81
	'{'            reduce using rule 81
	'}'            reduce using rule 81
	L_integ        reduce using rule 81
	L_quoted       reduce using rule 81
	L_ident        reduce using rule 81


State 234

	Stm -> 'if' '(' Exp ')' '{' ListStm '}' 'else' '{' . ListStm '}'    (rule 88)

	'!'            reduce using rule 92
	'('            reduce using rule 92
	'++'           reduce using rule 92
	'-'            reduce using rule 92
	'--'           reduce using rule 92
	'Tupla'        reduce using rule 92
	'break'        reduce using rule 92
	'continue'     reduce using rule 92
	'false'        reduce using rule 92
	'for'          reduce using rule 92
	'fun'          reduce using rule 92
	'if'           reduce using rule 92
	'null'         reduce using rule 92
	'print'        reduce using rule 92
	'println'      reduce using rule 92
	'return'       reduce using rule 92
	'run'          reduce using rule 92
	'true'         reduce using rule 92
	'val'          reduce using rule 92
	'var'          reduce using rule 92
	'while'        reduce using rule 92
	'{'            reduce using rule 92
	'}'            reduce using rule 92
	L_integ        reduce using rule 92
	L_quoted       reduce using rule 92
	L_ident        reduce using rule 92

	ListStm        goto state 235

State 235

	Stm -> 'if' '(' Exp ')' '{' ListStm '}' 'else' '{' ListStm . '}'    (rule 88)
	ListStm -> ListStm . Stm                            (rule 93)

	'!'            shift, and enter state 56
	'('            shift, and enter state 57
	'++'           shift, and enter state 58
	'-'            shift, and enter state 59
	'--'           shift, and enter state 60
	'Tupla'        shift, and enter state 61
	'break'        shift, and enter state 179
	'continue'     shift, and enter state 180
	'false'        shift, and enter state 62
	'for'          shift, and enter state 181
	'fun'          shift, and enter state 9
	'if'           shift, and enter state 182
	'null'         shift, and enter state 63
	'print'        shift, and enter state 183
	'println'      shift, and enter state 184
	'return'       shift, and enter state 185
	'run'          shift, and enter state 186
	'true'         shift, and enter state 64
	'val'          shift, and enter state 10
	'var'          shift, and enter state 11
	'while'        shift, and enter state 187
	'{'            shift, and enter state 65
	'}'            shift, and enter state 236
	L_integ        shift, and enter state 2
	L_quoted       shift, and enter state 66
	L_ident        shift, and enter state 13

	Integer        goto state 38
	String         goto state 39
	Ident          goto state 74
	Exp            goto state 176
	Exp1           goto state 42
	Exp2           goto state 43
	Exp3           goto state 44
	Exp4           goto state 45
	Exp5           goto state 46
	Exp6           goto state 47
	Exp7           goto state 48
	Exp8           goto state 49
	Exp9           goto state 50
	Exp10          goto state 51
	Exp11          goto state 52
	Exp12          goto state 53
	Stm            goto state 177
	Dec            goto state 178
	FunctionDec    goto state 7
	FunctionExp    goto state 54
	ArrayDec       goto state 8

State 236

	Stm -> 'if' '(' Exp ')' '{' ListStm '}' 'else' '{' ListStm '}' .    (rule 88)

	'!'            reduce using rule 88
	'('            reduce using rule 88
	'++'           reduce using rule 88
	'-'            reduce using rule 88
	'--'           reduce using rule 88
	'Tupla'        reduce using rule 88
	'break'        reduce using rule 88
	'continue'     reduce using rule 88
	'false'        reduce using rule 88
	'for'          reduce using rule 88
	'fun'          reduce using rule 88
	'if'           reduce using rule 88
	'null'         reduce using rule 88
	'print'        reduce using rule 88
	'println'      reduce using rule 88
	'return'       reduce using rule 88
	'run'          reduce using rule 88
	'true'         reduce using rule 88
	'val'          reduce using rule 88
	'var'          reduce using rule 88
	'while'        reduce using rule 88
	'{'            reduce using rule 88
	'}'            reduce using rule 88
	L_integ        reduce using rule 88
	L_quoted       reduce using rule 88
	L_ident        reduce using rule 88


-----------------------------------------------------------------------------
Grammar Totals
-----------------------------------------------------------------------------
Number of rules: 113
Number of terminals: 65
Number of non-terminals: 37
Number of states: 237
