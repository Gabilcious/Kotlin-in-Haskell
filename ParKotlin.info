-----------------------------------------------------------------------------
Info file generated by Happy Version 1.19.12 from ParKotlin.y
-----------------------------------------------------------------------------


-----------------------------------------------------------------------------
Grammar
-----------------------------------------------------------------------------
	%start_pProg -> Prog                               (0)
	Integer -> L_integ                                 (1)
	String -> L_quoted                                 (2)
	Ident -> L_ident                                   (3)
	Prog -> ListInst                                   (4)
	Exp -> Exp OpAssign Exp1                           (5)
	Exp -> Exp1                                        (6)
	Exp1 -> Exp3 '?' Exp1 ':' Exp2                     (7)
	Exp1 -> Exp2                                       (8)
	Exp2 -> Exp2 '||' Exp3                             (9)
	Exp2 -> Exp3                                       (10)
	Exp3 -> Exp3 '&&' Exp4                             (11)
	Exp3 -> Exp4                                       (12)
	Exp4 -> Exp4 '==' Exp5                             (13)
	Exp4 -> Exp4 '!=' Exp5                             (14)
	Exp4 -> Exp5                                       (15)
	Exp5 -> Exp5 '<' Exp6                              (16)
	Exp5 -> Exp5 '>' Exp6                              (17)
	Exp5 -> Exp5 '<=' Exp6                             (18)
	Exp5 -> Exp5 '>=' Exp6                             (19)
	Exp5 -> Exp6                                       (20)
	Exp6 -> Exp6 '+' Exp7                              (21)
	Exp6 -> Exp6 '-' Exp7                              (22)
	Exp6 -> Exp7                                       (23)
	Exp7 -> Exp7 '*' Exp8                              (24)
	Exp7 -> Exp7 '/' Exp8                              (25)
	Exp7 -> Exp7 '%' Exp8                              (26)
	Exp7 -> Exp8                                       (27)
	Exp8 -> '-' Exp8                                   (28)
	Exp8 -> '!' Exp8                                   (29)
	Exp8 -> '++' Exp8                                  (30)
	Exp8 -> '--' Exp8                                  (31)
	Exp8 -> Exp9                                       (32)
	Exp9 -> 'Tupla' '(' ListExp ')'                    (33)
	Exp9 -> Integer                                    (34)
	Exp9 -> String                                     (35)
	Exp9 -> 'true'                                     (36)
	Exp9 -> 'false'                                    (37)
	Exp9 -> 'null'                                     (38)
	Exp9 -> FunctionExp                                (39)
	Exp9 -> Ident ListDimExp                           (40)
	Exp9 -> Lambda                                     (41)
	Exp9 -> Exp10                                      (42)
	Exp10 -> Exp10 '!!'                                (43)
	Exp10 -> Exp11                                     (44)
	Exp11 -> Ident                                     (45)
	Exp11 -> '(' Exp ')'                               (46)
	ListExp ->                                         (47)
	ListExp -> Exp                                     (48)
	ListExp -> Exp ',' ListExp                         (49)
	DimExp -> '[' Exp ']'                              (50)
	ListDimExp -> DimExp                               (51)
	ListDimExp -> DimExp ListDimExp                    (52)
	OpAssign -> '='                                    (53)
	OpAssign -> '+='                                   (54)
	OpAssign -> '-='                                   (55)
	OpAssign -> '*='                                   (56)
	OpAssign -> '/='                                   (57)
	BaseType -> 'Tupla' '<' ListType '>'               (58)
	BaseType -> 'Bool'                                 (59)
	BaseType -> 'Int'                                  (60)
	BaseType -> 'String'                               (61)
	Type -> 'Unit'                                     (62)
	Type -> BaseType                                   (63)
	Type -> BaseType '?'                               (64)
	Type -> '(' ListType ')' '->' BaseType             (65)
	ListType ->                                        (66)
	ListType -> Type                                   (67)
	ListType -> Type ',' ListType                      (68)
	Arg -> Ident ':' Type                              (69)
	ListArg ->                                         (70)
	ListArg -> Arg                                     (71)
	ListArg -> Arg ',' ListArg                         (72)
	Stm -> Dec                                         (73)
	Stm -> Exp ';'                                     (74)
	Stm -> 'run' '{' ListStm '}'                       (75)
	Stm -> 'for' '(' Ident 'in' Iterable ')' '{' ListStm '}'   (76)
	Stm -> 'while' '(' Exp ')' '{' ListStm '}'         (77)
	Stm -> 'break' ';'                                 (78)
	Stm -> 'continue' ';'                              (79)
	Stm -> 'return' Exp ';'                            (80)
	Stm -> 'return' ';'                                (81)
	Stm -> 'if' '(' Exp ')' '{' ListStm '}'            (82)
	Stm -> 'if' '(' Exp ')' '{' ListStm '}' 'else' '{' ListStm '}'   (83)
	Stm -> 'print' '(' Exp ')' ';'                     (84)
	Stm -> 'println' '(' Exp ')' ';'                   (85)
	Stm -> Exp '?.let' '{' Stm '}'                     (86)
	ListStm ->                                         (87)
	ListStm -> ListStm Stm                             (88)
	Inst -> Dec                                        (89)
	ListInst ->                                        (90)
	ListInst -> ListInst Inst                          (91)
	Dec -> FunctionDec                                 (92)
	Dec -> ArrayDec                                    (93)
	Dec -> 'var' Ident ':' Type '=' Exp ';'            (94)
	Dec -> 'val' Ident ':' Type '=' Exp ';'            (95)
	Dec -> 'var' Ident ':' Type ';'                    (96)
	Dec -> 'val' Ident ':' Type ';'                    (97)
	FunctionDec -> 'fun' Ident '(' ListArg ')' ':' Type '{' ListStm '}'   (98)
	FunctionExp -> Ident '(' ListExp ')'               (99)
	Lambda -> '{' ListArg '->' ListStm Exp '}'         (100)
	Lambda -> '{' ListArg '->' ListStm '}'             (101)
	Iterable -> Ident                                  (102)
	Iterable -> Exp '..' Exp                           (103)
	Iterable -> Exp 'until' Exp                        (104)
	Iterable -> Exp 'downTo' Exp                       (105)
	Iterable -> Exp 'until' Exp 'step' Exp             (106)
	Iterable -> Exp 'downTo' Exp 'step' Exp            (107)
	ArrayDec -> 'val' Ident '=' 'Array' '(' Exp ',' Exp ')' ';'   (108)

-----------------------------------------------------------------------------
Terminals
-----------------------------------------------------------------------------
	'!'            { PT _ (TS _ 1) }
	'!!'           { PT _ (TS _ 2) }
	'!='           { PT _ (TS _ 3) }
	'%'            { PT _ (TS _ 4) }
	'&&'           { PT _ (TS _ 5) }
	'('            { PT _ (TS _ 6) }
	')'            { PT _ (TS _ 7) }
	'*'            { PT _ (TS _ 8) }
	'*='           { PT _ (TS _ 9) }
	'+'            { PT _ (TS _ 10) }
	'++'           { PT _ (TS _ 11) }
	'+='           { PT _ (TS _ 12) }
	','            { PT _ (TS _ 13) }
	'-'            { PT _ (TS _ 14) }
	'--'           { PT _ (TS _ 15) }
	'-='           { PT _ (TS _ 16) }
	'->'           { PT _ (TS _ 17) }
	'..'           { PT _ (TS _ 18) }
	'/'            { PT _ (TS _ 19) }
	'/='           { PT _ (TS _ 20) }
	':'            { PT _ (TS _ 21) }
	';'            { PT _ (TS _ 22) }
	'<'            { PT _ (TS _ 23) }
	'<='           { PT _ (TS _ 24) }
	'='            { PT _ (TS _ 25) }
	'=='           { PT _ (TS _ 26) }
	'>'            { PT _ (TS _ 27) }
	'>='           { PT _ (TS _ 28) }
	'?'            { PT _ (TS _ 29) }
	'?.let'        { PT _ (TS _ 30) }
	'Array'        { PT _ (TS _ 31) }
	'Bool'         { PT _ (TS _ 32) }
	'Int'          { PT _ (TS _ 33) }
	'String'       { PT _ (TS _ 34) }
	'Tupla'        { PT _ (TS _ 35) }
	'Unit'         { PT _ (TS _ 36) }
	'['            { PT _ (TS _ 37) }
	']'            { PT _ (TS _ 38) }
	'break'        { PT _ (TS _ 39) }
	'continue'     { PT _ (TS _ 40) }
	'downTo'       { PT _ (TS _ 41) }
	'else'         { PT _ (TS _ 42) }
	'false'        { PT _ (TS _ 43) }
	'for'          { PT _ (TS _ 44) }
	'fun'          { PT _ (TS _ 45) }
	'if'           { PT _ (TS _ 46) }
	'in'           { PT _ (TS _ 47) }
	'null'         { PT _ (TS _ 48) }
	'print'        { PT _ (TS _ 49) }
	'println'      { PT _ (TS _ 50) }
	'return'       { PT _ (TS _ 51) }
	'run'          { PT _ (TS _ 52) }
	'step'         { PT _ (TS _ 53) }
	'true'         { PT _ (TS _ 54) }
	'until'        { PT _ (TS _ 55) }
	'val'          { PT _ (TS _ 56) }
	'var'          { PT _ (TS _ 57) }
	'while'        { PT _ (TS _ 58) }
	'{'            { PT _ (TS _ 59) }
	'||'           { PT _ (TS _ 60) }
	'}'            { PT _ (TS _ 61) }
	L_integ        { PT _ (TI $$) }
	L_quoted       { PT _ (TL $$) }
	L_ident        { PT _ (TV $$) }

-----------------------------------------------------------------------------
Non-terminals
-----------------------------------------------------------------------------
	%start_pProg    rule  0
	Integer         rule  1
	String          rule  2
	Ident           rule  3
	Prog            rule  4
	Exp             rules 5, 6
	Exp1            rules 7, 8
	Exp2            rules 9, 10
	Exp3            rules 11, 12
	Exp4            rules 13, 14, 15
	Exp5            rules 16, 17, 18, 19, 20
	Exp6            rules 21, 22, 23
	Exp7            rules 24, 25, 26, 27
	Exp8            rules 28, 29, 30, 31, 32
	Exp9            rules 33, 34, 35, 36, 37, 38, 39, 40, 41, 42
	Exp10           rules 43, 44
	Exp11           rules 45, 46
	ListExp         rules 47, 48, 49
	DimExp          rule  50
	ListDimExp      rules 51, 52
	OpAssign        rules 53, 54, 55, 56, 57
	BaseType        rules 58, 59, 60, 61
	Type            rules 62, 63, 64, 65
	ListType        rules 66, 67, 68
	Arg             rule  69
	ListArg         rules 70, 71, 72
	Stm             rules 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86
	ListStm         rules 87, 88
	Inst            rule  89
	ListInst        rules 90, 91
	Dec             rules 92, 93, 94, 95, 96, 97
	FunctionDec     rule  98
	FunctionExp     rule  99
	Lambda          rules 100, 101
	Iterable        rules 102, 103, 104, 105, 106, 107
	ArrayDec        rule  108

-----------------------------------------------------------------------------
States
-----------------------------------------------------------------------------
State 0


	'fun'          reduce using rule 90
	'val'          reduce using rule 90
	'var'          reduce using rule 90
	%eof           reduce using rule 90

	Prog           goto state 3
	ListInst       goto state 4

State 1


	L_integ        shift, and enter state 2


State 2

	Integer -> L_integ .                                (rule 1)

	'!='           reduce using rule 1
	'%'            reduce using rule 1
	'&&'           reduce using rule 1
	')'            reduce using rule 1
	'*'            reduce using rule 1
	'*='           reduce using rule 1
	'+'            reduce using rule 1
	'+='           reduce using rule 1
	','            reduce using rule 1
	'-'            reduce using rule 1
	'-='           reduce using rule 1
	'..'           reduce using rule 1
	'/'            reduce using rule 1
	'/='           reduce using rule 1
	':'            reduce using rule 1
	';'            reduce using rule 1
	'<'            reduce using rule 1
	'<='           reduce using rule 1
	'='            reduce using rule 1
	'=='           reduce using rule 1
	'>'            reduce using rule 1
	'>='           reduce using rule 1
	'?'            reduce using rule 1
	'?.let'        reduce using rule 1
	']'            reduce using rule 1
	'downTo'       reduce using rule 1
	'step'         reduce using rule 1
	'until'        reduce using rule 1
	'||'           reduce using rule 1
	'}'            reduce using rule 1


State 3

	%start_pProg -> Prog .                              (rule 0)

	%eof           accept


State 4

	Prog -> ListInst .                                  (rule 4)
	ListInst -> ListInst . Inst                         (rule 91)

	'fun'          shift, and enter state 9
	'val'          shift, and enter state 10
	'var'          shift, and enter state 11
	%eof           reduce using rule 4

	Inst           goto state 5
	Dec            goto state 6
	FunctionDec    goto state 7
	ArrayDec       goto state 8

State 5

	ListInst -> ListInst Inst .                         (rule 91)

	'fun'          reduce using rule 91
	'val'          reduce using rule 91
	'var'          reduce using rule 91
	%eof           reduce using rule 91


State 6

	Inst -> Dec .                                       (rule 89)

	'fun'          reduce using rule 89
	'val'          reduce using rule 89
	'var'          reduce using rule 89
	%eof           reduce using rule 89


State 7

	Dec -> FunctionDec .                                (rule 92)

	'!'            reduce using rule 92
	'('            reduce using rule 92
	'++'           reduce using rule 92
	'-'            reduce using rule 92
	'--'           reduce using rule 92
	'Tupla'        reduce using rule 92
	'break'        reduce using rule 92
	'continue'     reduce using rule 92
	'false'        reduce using rule 92
	'for'          reduce using rule 92
	'fun'          reduce using rule 92
	'if'           reduce using rule 92
	'null'         reduce using rule 92
	'print'        reduce using rule 92
	'println'      reduce using rule 92
	'return'       reduce using rule 92
	'run'          reduce using rule 92
	'true'         reduce using rule 92
	'val'          reduce using rule 92
	'var'          reduce using rule 92
	'while'        reduce using rule 92
	'{'            reduce using rule 92
	'}'            reduce using rule 92
	L_integ        reduce using rule 92
	L_quoted       reduce using rule 92
	L_ident        reduce using rule 92
	%eof           reduce using rule 92


State 8

	Dec -> ArrayDec .                                   (rule 93)

	'!'            reduce using rule 93
	'('            reduce using rule 93
	'++'           reduce using rule 93
	'-'            reduce using rule 93
	'--'           reduce using rule 93
	'Tupla'        reduce using rule 93
	'break'        reduce using rule 93
	'continue'     reduce using rule 93
	'false'        reduce using rule 93
	'for'          reduce using rule 93
	'fun'          reduce using rule 93
	'if'           reduce using rule 93
	'null'         reduce using rule 93
	'print'        reduce using rule 93
	'println'      reduce using rule 93
	'return'       reduce using rule 93
	'run'          reduce using rule 93
	'true'         reduce using rule 93
	'val'          reduce using rule 93
	'var'          reduce using rule 93
	'while'        reduce using rule 93
	'{'            reduce using rule 93
	'}'            reduce using rule 93
	L_integ        reduce using rule 93
	L_quoted       reduce using rule 93
	L_ident        reduce using rule 93
	%eof           reduce using rule 93


State 9

	FunctionDec -> 'fun' . Ident '(' ListArg ')' ':' Type '{' ListStm '}'    (rule 98)

	L_ident        shift, and enter state 13

	Ident          goto state 15

State 10

	Dec -> 'val' . Ident ':' Type '=' Exp ';'           (rule 95)
	Dec -> 'val' . Ident ':' Type ';'                   (rule 97)
	ArrayDec -> 'val' . Ident '=' 'Array' '(' Exp ',' Exp ')' ';'    (rule 108)

	L_ident        shift, and enter state 13

	Ident          goto state 14

State 11

	Dec -> 'var' . Ident ':' Type '=' Exp ';'           (rule 94)
	Dec -> 'var' . Ident ':' Type ';'                   (rule 96)

	L_ident        shift, and enter state 13

	Ident          goto state 12

State 12

	Dec -> 'var' Ident . ':' Type '=' Exp ';'           (rule 94)
	Dec -> 'var' Ident . ':' Type ';'                   (rule 96)

	':'            shift, and enter state 19


State 13

	Ident -> L_ident .                                  (rule 3)

	'!!'           reduce using rule 3
	'!='           reduce using rule 3
	'%'            reduce using rule 3
	'&&'           reduce using rule 3
	'('            reduce using rule 3
	')'            reduce using rule 3
	'*'            reduce using rule 3
	'*='           reduce using rule 3
	'+'            reduce using rule 3
	'+='           reduce using rule 3
	','            reduce using rule 3
	'-'            reduce using rule 3
	'-='           reduce using rule 3
	'..'           reduce using rule 3
	'/'            reduce using rule 3
	'/='           reduce using rule 3
	':'            reduce using rule 3
	';'            reduce using rule 3
	'<'            reduce using rule 3
	'<='           reduce using rule 3
	'='            reduce using rule 3
	'=='           reduce using rule 3
	'>'            reduce using rule 3
	'>='           reduce using rule 3
	'?'            reduce using rule 3
	'?.let'        reduce using rule 3
	'['            reduce using rule 3
	']'            reduce using rule 3
	'downTo'       reduce using rule 3
	'in'           reduce using rule 3
	'step'         reduce using rule 3
	'until'        reduce using rule 3
	'||'           reduce using rule 3
	'}'            reduce using rule 3


State 14

	Dec -> 'val' Ident . ':' Type '=' Exp ';'           (rule 95)
	Dec -> 'val' Ident . ':' Type ';'                   (rule 97)
	ArrayDec -> 'val' Ident . '=' 'Array' '(' Exp ',' Exp ')' ';'    (rule 108)

	':'            shift, and enter state 17
	'='            shift, and enter state 18


State 15

	FunctionDec -> 'fun' Ident . '(' ListArg ')' ':' Type '{' ListStm '}'    (rule 98)

	'('            shift, and enter state 16


State 16

	FunctionDec -> 'fun' Ident '(' . ListArg ')' ':' Type '{' ListStm '}'    (rule 98)

	')'            reduce using rule 70
	L_ident        shift, and enter state 13

	Ident          goto state 30
	Arg            goto state 31
	ListArg        goto state 32

State 17

	Dec -> 'val' Ident ':' . Type '=' Exp ';'           (rule 95)
	Dec -> 'val' Ident ':' . Type ';'                   (rule 97)

	'('            shift, and enter state 22
	'Bool'         shift, and enter state 23
	'Int'          shift, and enter state 24
	'String'       shift, and enter state 25
	'Tupla'        shift, and enter state 26
	'Unit'         shift, and enter state 27

	BaseType       goto state 20
	Type           goto state 29

State 18

	ArrayDec -> 'val' Ident '=' . 'Array' '(' Exp ',' Exp ')' ';'    (rule 108)

	'Array'        shift, and enter state 28


State 19

	Dec -> 'var' Ident ':' . Type '=' Exp ';'           (rule 94)
	Dec -> 'var' Ident ':' . Type ';'                   (rule 96)

	'('            shift, and enter state 22
	'Bool'         shift, and enter state 23
	'Int'          shift, and enter state 24
	'String'       shift, and enter state 25
	'Tupla'        shift, and enter state 26
	'Unit'         shift, and enter state 27

	BaseType       goto state 20
	Type           goto state 21

State 20

	Type -> BaseType .                                  (rule 63)
	Type -> BaseType . '?'                              (rule 64)

	')'            reduce using rule 63
	','            reduce using rule 63
	'->'           reduce using rule 63
	';'            reduce using rule 63
	'='            reduce using rule 63
	'>'            reduce using rule 63
	'?'            shift, and enter state 44
	'{'            reduce using rule 63


State 21

	Dec -> 'var' Ident ':' Type . '=' Exp ';'           (rule 94)
	Dec -> 'var' Ident ':' Type . ';'                   (rule 96)

	';'            shift, and enter state 42
	'='            shift, and enter state 43


State 22

	Type -> '(' . ListType ')' '->' BaseType            (rule 65)

	'('            shift, and enter state 22
	')'            reduce using rule 66
	'Bool'         shift, and enter state 23
	'Int'          shift, and enter state 24
	'String'       shift, and enter state 25
	'Tupla'        shift, and enter state 26
	'Unit'         shift, and enter state 27

	BaseType       goto state 20
	Type           goto state 40
	ListType       goto state 41

State 23

	BaseType -> 'Bool' .                                (rule 59)

	')'            reduce using rule 59
	','            reduce using rule 59
	'->'           reduce using rule 59
	';'            reduce using rule 59
	'='            reduce using rule 59
	'>'            reduce using rule 59
	'?'            reduce using rule 59
	'{'            reduce using rule 59


State 24

	BaseType -> 'Int' .                                 (rule 60)

	')'            reduce using rule 60
	','            reduce using rule 60
	'->'           reduce using rule 60
	';'            reduce using rule 60
	'='            reduce using rule 60
	'>'            reduce using rule 60
	'?'            reduce using rule 60
	'{'            reduce using rule 60


State 25

	BaseType -> 'String' .                              (rule 61)

	')'            reduce using rule 61
	','            reduce using rule 61
	'->'           reduce using rule 61
	';'            reduce using rule 61
	'='            reduce using rule 61
	'>'            reduce using rule 61
	'?'            reduce using rule 61
	'{'            reduce using rule 61


State 26

	BaseType -> 'Tupla' . '<' ListType '>'              (rule 58)

	'<'            shift, and enter state 39


State 27

	Type -> 'Unit' .                                    (rule 62)

	')'            reduce using rule 62
	','            reduce using rule 62
	'->'           reduce using rule 62
	';'            reduce using rule 62
	'='            reduce using rule 62
	'>'            reduce using rule 62
	'{'            reduce using rule 62


State 28

	ArrayDec -> 'val' Ident '=' 'Array' . '(' Exp ',' Exp ')' ';'    (rule 108)

	'('            shift, and enter state 38


State 29

	Dec -> 'val' Ident ':' Type . '=' Exp ';'           (rule 95)
	Dec -> 'val' Ident ':' Type . ';'                   (rule 97)

	';'            shift, and enter state 36
	'='            shift, and enter state 37


State 30

	Arg -> Ident . ':' Type                             (rule 69)

	':'            shift, and enter state 35


State 31

	ListArg -> Arg .                                    (rule 71)
	ListArg -> Arg . ',' ListArg                        (rule 72)

	')'            reduce using rule 71
	','            shift, and enter state 34
	'->'           reduce using rule 71


State 32

	FunctionDec -> 'fun' Ident '(' ListArg . ')' ':' Type '{' ListStm '}'    (rule 98)

	')'            shift, and enter state 33


State 33

	FunctionDec -> 'fun' Ident '(' ListArg ')' . ':' Type '{' ListStm '}'    (rule 98)

	':'            shift, and enter state 80


State 34

	ListArg -> Arg ',' . ListArg                        (rule 72)

	')'            reduce using rule 70
	'->'           reduce using rule 70
	L_ident        shift, and enter state 13

	Ident          goto state 30
	Arg            goto state 31
	ListArg        goto state 79

State 35

	Arg -> Ident ':' . Type                             (rule 69)

	'('            shift, and enter state 22
	'Bool'         shift, and enter state 23
	'Int'          shift, and enter state 24
	'String'       shift, and enter state 25
	'Tupla'        shift, and enter state 26
	'Unit'         shift, and enter state 27

	BaseType       goto state 20
	Type           goto state 78

State 36

	Dec -> 'val' Ident ':' Type ';' .                   (rule 97)

	'!'            reduce using rule 97
	'('            reduce using rule 97
	'++'           reduce using rule 97
	'-'            reduce using rule 97
	'--'           reduce using rule 97
	'Tupla'        reduce using rule 97
	'break'        reduce using rule 97
	'continue'     reduce using rule 97
	'false'        reduce using rule 97
	'for'          reduce using rule 97
	'fun'          reduce using rule 97
	'if'           reduce using rule 97
	'null'         reduce using rule 97
	'print'        reduce using rule 97
	'println'      reduce using rule 97
	'return'       reduce using rule 97
	'run'          reduce using rule 97
	'true'         reduce using rule 97
	'val'          reduce using rule 97
	'var'          reduce using rule 97
	'while'        reduce using rule 97
	'{'            reduce using rule 97
	'}'            reduce using rule 97
	L_integ        reduce using rule 97
	L_quoted       reduce using rule 97
	L_ident        reduce using rule 97
	%eof           reduce using rule 97


State 37

	Dec -> 'val' Ident ':' Type '=' . Exp ';'           (rule 95)

	'!'            shift, and enter state 62
	'('            shift, and enter state 63
	'++'           shift, and enter state 64
	'-'            shift, and enter state 65
	'--'           shift, and enter state 66
	'Tupla'        shift, and enter state 67
	'false'        shift, and enter state 68
	'null'         shift, and enter state 69
	'true'         shift, and enter state 70
	'{'            shift, and enter state 71
	L_integ        shift, and enter state 2
	L_quoted       shift, and enter state 72
	L_ident        shift, and enter state 13

	Integer        goto state 45
	String         goto state 46
	Ident          goto state 47
	Exp            goto state 77
	Exp1           goto state 49
	Exp2           goto state 50
	Exp3           goto state 51
	Exp4           goto state 52
	Exp5           goto state 53
	Exp6           goto state 54
	Exp7           goto state 55
	Exp8           goto state 56
	Exp9           goto state 57
	Exp10          goto state 58
	Exp11          goto state 59
	FunctionExp    goto state 60
	Lambda         goto state 61

State 38

	ArrayDec -> 'val' Ident '=' 'Array' '(' . Exp ',' Exp ')' ';'    (rule 108)

	'!'            shift, and enter state 62
	'('            shift, and enter state 63
	'++'           shift, and enter state 64
	'-'            shift, and enter state 65
	'--'           shift, and enter state 66
	'Tupla'        shift, and enter state 67
	'false'        shift, and enter state 68
	'null'         shift, and enter state 69
	'true'         shift, and enter state 70
	'{'            shift, and enter state 71
	L_integ        shift, and enter state 2
	L_quoted       shift, and enter state 72
	L_ident        shift, and enter state 13

	Integer        goto state 45
	String         goto state 46
	Ident          goto state 47
	Exp            goto state 76
	Exp1           goto state 49
	Exp2           goto state 50
	Exp3           goto state 51
	Exp4           goto state 52
	Exp5           goto state 53
	Exp6           goto state 54
	Exp7           goto state 55
	Exp8           goto state 56
	Exp9           goto state 57
	Exp10          goto state 58
	Exp11          goto state 59
	FunctionExp    goto state 60
	Lambda         goto state 61

State 39

	BaseType -> 'Tupla' '<' . ListType '>'              (rule 58)

	'('            shift, and enter state 22
	'>'            reduce using rule 66
	'Bool'         shift, and enter state 23
	'Int'          shift, and enter state 24
	'String'       shift, and enter state 25
	'Tupla'        shift, and enter state 26
	'Unit'         shift, and enter state 27

	BaseType       goto state 20
	Type           goto state 40
	ListType       goto state 75

State 40

	ListType -> Type .                                  (rule 67)
	ListType -> Type . ',' ListType                     (rule 68)

	')'            reduce using rule 67
	','            shift, and enter state 74
	'>'            reduce using rule 67


State 41

	Type -> '(' ListType . ')' '->' BaseType            (rule 65)

	')'            shift, and enter state 73


State 42

	Dec -> 'var' Ident ':' Type ';' .                   (rule 96)

	'!'            reduce using rule 96
	'('            reduce using rule 96
	'++'           reduce using rule 96
	'-'            reduce using rule 96
	'--'           reduce using rule 96
	'Tupla'        reduce using rule 96
	'break'        reduce using rule 96
	'continue'     reduce using rule 96
	'false'        reduce using rule 96
	'for'          reduce using rule 96
	'fun'          reduce using rule 96
	'if'           reduce using rule 96
	'null'         reduce using rule 96
	'print'        reduce using rule 96
	'println'      reduce using rule 96
	'return'       reduce using rule 96
	'run'          reduce using rule 96
	'true'         reduce using rule 96
	'val'          reduce using rule 96
	'var'          reduce using rule 96
	'while'        reduce using rule 96
	'{'            reduce using rule 96
	'}'            reduce using rule 96
	L_integ        reduce using rule 96
	L_quoted       reduce using rule 96
	L_ident        reduce using rule 96
	%eof           reduce using rule 96


State 43

	Dec -> 'var' Ident ':' Type '=' . Exp ';'           (rule 94)

	'!'            shift, and enter state 62
	'('            shift, and enter state 63
	'++'           shift, and enter state 64
	'-'            shift, and enter state 65
	'--'           shift, and enter state 66
	'Tupla'        shift, and enter state 67
	'false'        shift, and enter state 68
	'null'         shift, and enter state 69
	'true'         shift, and enter state 70
	'{'            shift, and enter state 71
	L_integ        shift, and enter state 2
	L_quoted       shift, and enter state 72
	L_ident        shift, and enter state 13

	Integer        goto state 45
	String         goto state 46
	Ident          goto state 47
	Exp            goto state 48
	Exp1           goto state 49
	Exp2           goto state 50
	Exp3           goto state 51
	Exp4           goto state 52
	Exp5           goto state 53
	Exp6           goto state 54
	Exp7           goto state 55
	Exp8           goto state 56
	Exp9           goto state 57
	Exp10          goto state 58
	Exp11          goto state 59
	FunctionExp    goto state 60
	Lambda         goto state 61

State 44

	Type -> BaseType '?' .                              (rule 64)

	')'            reduce using rule 64
	','            reduce using rule 64
	'->'           reduce using rule 64
	';'            reduce using rule 64
	'='            reduce using rule 64
	'>'            reduce using rule 64
	'{'            reduce using rule 64


State 45

	Exp9 -> Integer .                                   (rule 34)

	'!='           reduce using rule 34
	'%'            reduce using rule 34
	'&&'           reduce using rule 34
	')'            reduce using rule 34
	'*'            reduce using rule 34
	'*='           reduce using rule 34
	'+'            reduce using rule 34
	'+='           reduce using rule 34
	','            reduce using rule 34
	'-'            reduce using rule 34
	'-='           reduce using rule 34
	'..'           reduce using rule 34
	'/'            reduce using rule 34
	'/='           reduce using rule 34
	':'            reduce using rule 34
	';'            reduce using rule 34
	'<'            reduce using rule 34
	'<='           reduce using rule 34
	'='            reduce using rule 34
	'=='           reduce using rule 34
	'>'            reduce using rule 34
	'>='           reduce using rule 34
	'?'            reduce using rule 34
	'?.let'        reduce using rule 34
	']'            reduce using rule 34
	'downTo'       reduce using rule 34
	'step'         reduce using rule 34
	'until'        reduce using rule 34
	'||'           reduce using rule 34
	'}'            reduce using rule 34


State 46

	Exp9 -> String .                                    (rule 35)

	'!='           reduce using rule 35
	'%'            reduce using rule 35
	'&&'           reduce using rule 35
	')'            reduce using rule 35
	'*'            reduce using rule 35
	'*='           reduce using rule 35
	'+'            reduce using rule 35
	'+='           reduce using rule 35
	','            reduce using rule 35
	'-'            reduce using rule 35
	'-='           reduce using rule 35
	'..'           reduce using rule 35
	'/'            reduce using rule 35
	'/='           reduce using rule 35
	':'            reduce using rule 35
	';'            reduce using rule 35
	'<'            reduce using rule 35
	'<='           reduce using rule 35
	'='            reduce using rule 35
	'=='           reduce using rule 35
	'>'            reduce using rule 35
	'>='           reduce using rule 35
	'?'            reduce using rule 35
	'?.let'        reduce using rule 35
	']'            reduce using rule 35
	'downTo'       reduce using rule 35
	'step'         reduce using rule 35
	'until'        reduce using rule 35
	'||'           reduce using rule 35
	'}'            reduce using rule 35


State 47

	Exp9 -> Ident . ListDimExp                          (rule 40)
	Exp11 -> Ident .                                    (rule 45)
	FunctionExp -> Ident . '(' ListExp ')'              (rule 99)

	'!!'           reduce using rule 45
	'!='           reduce using rule 45
	'%'            reduce using rule 45
	'&&'           reduce using rule 45
	'('            shift, and enter state 118
	')'            reduce using rule 45
	'*'            reduce using rule 45
	'*='           reduce using rule 45
	'+'            reduce using rule 45
	'+='           reduce using rule 45
	','            reduce using rule 45
	'-'            reduce using rule 45
	'-='           reduce using rule 45
	'..'           reduce using rule 45
	'/'            reduce using rule 45
	'/='           reduce using rule 45
	':'            reduce using rule 45
	';'            reduce using rule 45
	'<'            reduce using rule 45
	'<='           reduce using rule 45
	'='            reduce using rule 45
	'=='           reduce using rule 45
	'>'            reduce using rule 45
	'>='           reduce using rule 45
	'?'            reduce using rule 45
	'?.let'        reduce using rule 45
	'['            shift, and enter state 119
	']'            reduce using rule 45
	'downTo'       reduce using rule 45
	'step'         reduce using rule 45
	'until'        reduce using rule 45
	'||'           reduce using rule 45
	'}'            reduce using rule 45

	DimExp         goto state 116
	ListDimExp     goto state 117

State 48

	Exp -> Exp . OpAssign Exp1                          (rule 5)
	Dec -> 'var' Ident ':' Type '=' Exp . ';'           (rule 94)

	'*='           shift, and enter state 83
	'+='           shift, and enter state 84
	'-='           shift, and enter state 85
	'/='           shift, and enter state 86
	';'            shift, and enter state 115
	'='            shift, and enter state 88

	OpAssign       goto state 82

State 49

	Exp -> Exp1 .                                       (rule 6)

	')'            reduce using rule 6
	'*='           reduce using rule 6
	'+='           reduce using rule 6
	','            reduce using rule 6
	'-='           reduce using rule 6
	'..'           reduce using rule 6
	'/='           reduce using rule 6
	';'            reduce using rule 6
	'='            reduce using rule 6
	'?.let'        reduce using rule 6
	']'            reduce using rule 6
	'downTo'       reduce using rule 6
	'step'         reduce using rule 6
	'until'        reduce using rule 6
	'}'            reduce using rule 6


State 50

	Exp1 -> Exp2 .                                      (rule 8)
	Exp2 -> Exp2 . '||' Exp3                            (rule 9)

	')'            reduce using rule 8
	'*='           reduce using rule 8
	'+='           reduce using rule 8
	','            reduce using rule 8
	'-='           reduce using rule 8
	'..'           reduce using rule 8
	'/='           reduce using rule 8
	':'            reduce using rule 8
	';'            reduce using rule 8
	'='            reduce using rule 8
	'?.let'        reduce using rule 8
	']'            reduce using rule 8
	'downTo'       reduce using rule 8
	'step'         reduce using rule 8
	'until'        reduce using rule 8
	'||'           shift, and enter state 114
	'}'            reduce using rule 8


State 51

	Exp1 -> Exp3 . '?' Exp1 ':' Exp2                    (rule 7)
	Exp2 -> Exp3 .                                      (rule 10)
	Exp3 -> Exp3 . '&&' Exp4                            (rule 11)

	'&&'           shift, and enter state 112
	')'            reduce using rule 10
	'*='           reduce using rule 10
	'+='           reduce using rule 10
	','            reduce using rule 10
	'-='           reduce using rule 10
	'..'           reduce using rule 10
	'/='           reduce using rule 10
	':'            reduce using rule 10
	';'            reduce using rule 10
	'='            reduce using rule 10
	'?'            shift, and enter state 113
	'?.let'        reduce using rule 10
	']'            reduce using rule 10
	'downTo'       reduce using rule 10
	'step'         reduce using rule 10
	'until'        reduce using rule 10
	'||'           reduce using rule 10
	'}'            reduce using rule 10


State 52

	Exp3 -> Exp4 .                                      (rule 12)
	Exp4 -> Exp4 . '==' Exp5                            (rule 13)
	Exp4 -> Exp4 . '!=' Exp5                            (rule 14)

	'!='           shift, and enter state 110
	'&&'           reduce using rule 12
	')'            reduce using rule 12
	'*='           reduce using rule 12
	'+='           reduce using rule 12
	','            reduce using rule 12
	'-='           reduce using rule 12
	'..'           reduce using rule 12
	'/='           reduce using rule 12
	':'            reduce using rule 12
	';'            reduce using rule 12
	'='            reduce using rule 12
	'=='           shift, and enter state 111
	'?'            reduce using rule 12
	'?.let'        reduce using rule 12
	']'            reduce using rule 12
	'downTo'       reduce using rule 12
	'step'         reduce using rule 12
	'until'        reduce using rule 12
	'||'           reduce using rule 12
	'}'            reduce using rule 12


State 53

	Exp4 -> Exp5 .                                      (rule 15)
	Exp5 -> Exp5 . '<' Exp6                             (rule 16)
	Exp5 -> Exp5 . '>' Exp6                             (rule 17)
	Exp5 -> Exp5 . '<=' Exp6                            (rule 18)
	Exp5 -> Exp5 . '>=' Exp6                            (rule 19)

	'!='           reduce using rule 15
	'&&'           reduce using rule 15
	')'            reduce using rule 15
	'*='           reduce using rule 15
	'+='           reduce using rule 15
	','            reduce using rule 15
	'-='           reduce using rule 15
	'..'           reduce using rule 15
	'/='           reduce using rule 15
	':'            reduce using rule 15
	';'            reduce using rule 15
	'<'            shift, and enter state 106
	'<='           shift, and enter state 107
	'='            reduce using rule 15
	'=='           reduce using rule 15
	'>'            shift, and enter state 108
	'>='           shift, and enter state 109
	'?'            reduce using rule 15
	'?.let'        reduce using rule 15
	']'            reduce using rule 15
	'downTo'       reduce using rule 15
	'step'         reduce using rule 15
	'until'        reduce using rule 15
	'||'           reduce using rule 15
	'}'            reduce using rule 15


State 54

	Exp5 -> Exp6 .                                      (rule 20)
	Exp6 -> Exp6 . '+' Exp7                             (rule 21)
	Exp6 -> Exp6 . '-' Exp7                             (rule 22)

	'!='           reduce using rule 20
	'&&'           reduce using rule 20
	')'            reduce using rule 20
	'*='           reduce using rule 20
	'+'            shift, and enter state 104
	'+='           reduce using rule 20
	','            reduce using rule 20
	'-'            shift, and enter state 105
	'-='           reduce using rule 20
	'..'           reduce using rule 20
	'/='           reduce using rule 20
	':'            reduce using rule 20
	';'            reduce using rule 20
	'<'            reduce using rule 20
	'<='           reduce using rule 20
	'='            reduce using rule 20
	'=='           reduce using rule 20
	'>'            reduce using rule 20
	'>='           reduce using rule 20
	'?'            reduce using rule 20
	'?.let'        reduce using rule 20
	']'            reduce using rule 20
	'downTo'       reduce using rule 20
	'step'         reduce using rule 20
	'until'        reduce using rule 20
	'||'           reduce using rule 20
	'}'            reduce using rule 20


State 55

	Exp6 -> Exp7 .                                      (rule 23)
	Exp7 -> Exp7 . '*' Exp8                             (rule 24)
	Exp7 -> Exp7 . '/' Exp8                             (rule 25)
	Exp7 -> Exp7 . '%' Exp8                             (rule 26)

	'!='           reduce using rule 23
	'%'            shift, and enter state 101
	'&&'           reduce using rule 23
	')'            reduce using rule 23
	'*'            shift, and enter state 102
	'*='           reduce using rule 23
	'+'            reduce using rule 23
	'+='           reduce using rule 23
	','            reduce using rule 23
	'-'            reduce using rule 23
	'-='           reduce using rule 23
	'..'           reduce using rule 23
	'/'            shift, and enter state 103
	'/='           reduce using rule 23
	':'            reduce using rule 23
	';'            reduce using rule 23
	'<'            reduce using rule 23
	'<='           reduce using rule 23
	'='            reduce using rule 23
	'=='           reduce using rule 23
	'>'            reduce using rule 23
	'>='           reduce using rule 23
	'?'            reduce using rule 23
	'?.let'        reduce using rule 23
	']'            reduce using rule 23
	'downTo'       reduce using rule 23
	'step'         reduce using rule 23
	'until'        reduce using rule 23
	'||'           reduce using rule 23
	'}'            reduce using rule 23


State 56

	Exp7 -> Exp8 .                                      (rule 27)

	'!='           reduce using rule 27
	'%'            reduce using rule 27
	'&&'           reduce using rule 27
	')'            reduce using rule 27
	'*'            reduce using rule 27
	'*='           reduce using rule 27
	'+'            reduce using rule 27
	'+='           reduce using rule 27
	','            reduce using rule 27
	'-'            reduce using rule 27
	'-='           reduce using rule 27
	'..'           reduce using rule 27
	'/'            reduce using rule 27
	'/='           reduce using rule 27
	':'            reduce using rule 27
	';'            reduce using rule 27
	'<'            reduce using rule 27
	'<='           reduce using rule 27
	'='            reduce using rule 27
	'=='           reduce using rule 27
	'>'            reduce using rule 27
	'>='           reduce using rule 27
	'?'            reduce using rule 27
	'?.let'        reduce using rule 27
	']'            reduce using rule 27
	'downTo'       reduce using rule 27
	'step'         reduce using rule 27
	'until'        reduce using rule 27
	'||'           reduce using rule 27
	'}'            reduce using rule 27


State 57

	Exp8 -> Exp9 .                                      (rule 32)

	'!='           reduce using rule 32
	'%'            reduce using rule 32
	'&&'           reduce using rule 32
	')'            reduce using rule 32
	'*'            reduce using rule 32
	'*='           reduce using rule 32
	'+'            reduce using rule 32
	'+='           reduce using rule 32
	','            reduce using rule 32
	'-'            reduce using rule 32
	'-='           reduce using rule 32
	'..'           reduce using rule 32
	'/'            reduce using rule 32
	'/='           reduce using rule 32
	':'            reduce using rule 32
	';'            reduce using rule 32
	'<'            reduce using rule 32
	'<='           reduce using rule 32
	'='            reduce using rule 32
	'=='           reduce using rule 32
	'>'            reduce using rule 32
	'>='           reduce using rule 32
	'?'            reduce using rule 32
	'?.let'        reduce using rule 32
	']'            reduce using rule 32
	'downTo'       reduce using rule 32
	'step'         reduce using rule 32
	'until'        reduce using rule 32
	'||'           reduce using rule 32
	'}'            reduce using rule 32


State 58

	Exp9 -> Exp10 .                                     (rule 42)
	Exp10 -> Exp10 . '!!'                               (rule 43)

	'!!'           shift, and enter state 100
	'!='           reduce using rule 42
	'%'            reduce using rule 42
	'&&'           reduce using rule 42
	')'            reduce using rule 42
	'*'            reduce using rule 42
	'*='           reduce using rule 42
	'+'            reduce using rule 42
	'+='           reduce using rule 42
	','            reduce using rule 42
	'-'            reduce using rule 42
	'-='           reduce using rule 42
	'..'           reduce using rule 42
	'/'            reduce using rule 42
	'/='           reduce using rule 42
	':'            reduce using rule 42
	';'            reduce using rule 42
	'<'            reduce using rule 42
	'<='           reduce using rule 42
	'='            reduce using rule 42
	'=='           reduce using rule 42
	'>'            reduce using rule 42
	'>='           reduce using rule 42
	'?'            reduce using rule 42
	'?.let'        reduce using rule 42
	']'            reduce using rule 42
	'downTo'       reduce using rule 42
	'step'         reduce using rule 42
	'until'        reduce using rule 42
	'||'           reduce using rule 42
	'}'            reduce using rule 42


State 59

	Exp10 -> Exp11 .                                    (rule 44)

	'!!'           reduce using rule 44
	'!='           reduce using rule 44
	'%'            reduce using rule 44
	'&&'           reduce using rule 44
	')'            reduce using rule 44
	'*'            reduce using rule 44
	'*='           reduce using rule 44
	'+'            reduce using rule 44
	'+='           reduce using rule 44
	','            reduce using rule 44
	'-'            reduce using rule 44
	'-='           reduce using rule 44
	'..'           reduce using rule 44
	'/'            reduce using rule 44
	'/='           reduce using rule 44
	':'            reduce using rule 44
	';'            reduce using rule 44
	'<'            reduce using rule 44
	'<='           reduce using rule 44
	'='            reduce using rule 44
	'=='           reduce using rule 44
	'>'            reduce using rule 44
	'>='           reduce using rule 44
	'?'            reduce using rule 44
	'?.let'        reduce using rule 44
	']'            reduce using rule 44
	'downTo'       reduce using rule 44
	'step'         reduce using rule 44
	'until'        reduce using rule 44
	'||'           reduce using rule 44
	'}'            reduce using rule 44


State 60

	Exp9 -> FunctionExp .                               (rule 39)

	'!='           reduce using rule 39
	'%'            reduce using rule 39
	'&&'           reduce using rule 39
	')'            reduce using rule 39
	'*'            reduce using rule 39
	'*='           reduce using rule 39
	'+'            reduce using rule 39
	'+='           reduce using rule 39
	','            reduce using rule 39
	'-'            reduce using rule 39
	'-='           reduce using rule 39
	'..'           reduce using rule 39
	'/'            reduce using rule 39
	'/='           reduce using rule 39
	':'            reduce using rule 39
	';'            reduce using rule 39
	'<'            reduce using rule 39
	'<='           reduce using rule 39
	'='            reduce using rule 39
	'=='           reduce using rule 39
	'>'            reduce using rule 39
	'>='           reduce using rule 39
	'?'            reduce using rule 39
	'?.let'        reduce using rule 39
	']'            reduce using rule 39
	'downTo'       reduce using rule 39
	'step'         reduce using rule 39
	'until'        reduce using rule 39
	'||'           reduce using rule 39
	'}'            reduce using rule 39


State 61

	Exp9 -> Lambda .                                    (rule 41)

	'!='           reduce using rule 41
	'%'            reduce using rule 41
	'&&'           reduce using rule 41
	')'            reduce using rule 41
	'*'            reduce using rule 41
	'*='           reduce using rule 41
	'+'            reduce using rule 41
	'+='           reduce using rule 41
	','            reduce using rule 41
	'-'            reduce using rule 41
	'-='           reduce using rule 41
	'..'           reduce using rule 41
	'/'            reduce using rule 41
	'/='           reduce using rule 41
	':'            reduce using rule 41
	';'            reduce using rule 41
	'<'            reduce using rule 41
	'<='           reduce using rule 41
	'='            reduce using rule 41
	'=='           reduce using rule 41
	'>'            reduce using rule 41
	'>='           reduce using rule 41
	'?'            reduce using rule 41
	'?.let'        reduce using rule 41
	']'            reduce using rule 41
	'downTo'       reduce using rule 41
	'step'         reduce using rule 41
	'until'        reduce using rule 41
	'||'           reduce using rule 41
	'}'            reduce using rule 41


State 62

	Exp8 -> '!' . Exp8                                  (rule 29)

	'!'            shift, and enter state 62
	'('            shift, and enter state 63
	'++'           shift, and enter state 64
	'-'            shift, and enter state 65
	'--'           shift, and enter state 66
	'Tupla'        shift, and enter state 67
	'false'        shift, and enter state 68
	'null'         shift, and enter state 69
	'true'         shift, and enter state 70
	'{'            shift, and enter state 71
	L_integ        shift, and enter state 2
	L_quoted       shift, and enter state 72
	L_ident        shift, and enter state 13

	Integer        goto state 45
	String         goto state 46
	Ident          goto state 47
	Exp8           goto state 99
	Exp9           goto state 57
	Exp10          goto state 58
	Exp11          goto state 59
	FunctionExp    goto state 60
	Lambda         goto state 61

State 63

	Exp11 -> '(' . Exp ')'                              (rule 46)

	'!'            shift, and enter state 62
	'('            shift, and enter state 63
	'++'           shift, and enter state 64
	'-'            shift, and enter state 65
	'--'           shift, and enter state 66
	'Tupla'        shift, and enter state 67
	'false'        shift, and enter state 68
	'null'         shift, and enter state 69
	'true'         shift, and enter state 70
	'{'            shift, and enter state 71
	L_integ        shift, and enter state 2
	L_quoted       shift, and enter state 72
	L_ident        shift, and enter state 13

	Integer        goto state 45
	String         goto state 46
	Ident          goto state 47
	Exp            goto state 98
	Exp1           goto state 49
	Exp2           goto state 50
	Exp3           goto state 51
	Exp4           goto state 52
	Exp5           goto state 53
	Exp6           goto state 54
	Exp7           goto state 55
	Exp8           goto state 56
	Exp9           goto state 57
	Exp10          goto state 58
	Exp11          goto state 59
	FunctionExp    goto state 60
	Lambda         goto state 61

State 64

	Exp8 -> '++' . Exp8                                 (rule 30)

	'!'            shift, and enter state 62
	'('            shift, and enter state 63
	'++'           shift, and enter state 64
	'-'            shift, and enter state 65
	'--'           shift, and enter state 66
	'Tupla'        shift, and enter state 67
	'false'        shift, and enter state 68
	'null'         shift, and enter state 69
	'true'         shift, and enter state 70
	'{'            shift, and enter state 71
	L_integ        shift, and enter state 2
	L_quoted       shift, and enter state 72
	L_ident        shift, and enter state 13

	Integer        goto state 45
	String         goto state 46
	Ident          goto state 47
	Exp8           goto state 97
	Exp9           goto state 57
	Exp10          goto state 58
	Exp11          goto state 59
	FunctionExp    goto state 60
	Lambda         goto state 61

State 65

	Exp8 -> '-' . Exp8                                  (rule 28)

	'!'            shift, and enter state 62
	'('            shift, and enter state 63
	'++'           shift, and enter state 64
	'-'            shift, and enter state 65
	'--'           shift, and enter state 66
	'Tupla'        shift, and enter state 67
	'false'        shift, and enter state 68
	'null'         shift, and enter state 69
	'true'         shift, and enter state 70
	'{'            shift, and enter state 71
	L_integ        shift, and enter state 2
	L_quoted       shift, and enter state 72
	L_ident        shift, and enter state 13

	Integer        goto state 45
	String         goto state 46
	Ident          goto state 47
	Exp8           goto state 96
	Exp9           goto state 57
	Exp10          goto state 58
	Exp11          goto state 59
	FunctionExp    goto state 60
	Lambda         goto state 61

State 66

	Exp8 -> '--' . Exp8                                 (rule 31)

	'!'            shift, and enter state 62
	'('            shift, and enter state 63
	'++'           shift, and enter state 64
	'-'            shift, and enter state 65
	'--'           shift, and enter state 66
	'Tupla'        shift, and enter state 67
	'false'        shift, and enter state 68
	'null'         shift, and enter state 69
	'true'         shift, and enter state 70
	'{'            shift, and enter state 71
	L_integ        shift, and enter state 2
	L_quoted       shift, and enter state 72
	L_ident        shift, and enter state 13

	Integer        goto state 45
	String         goto state 46
	Ident          goto state 47
	Exp8           goto state 95
	Exp9           goto state 57
	Exp10          goto state 58
	Exp11          goto state 59
	FunctionExp    goto state 60
	Lambda         goto state 61

State 67

	Exp9 -> 'Tupla' . '(' ListExp ')'                   (rule 33)

	'('            shift, and enter state 94


State 68

	Exp9 -> 'false' .                                   (rule 37)

	'!='           reduce using rule 37
	'%'            reduce using rule 37
	'&&'           reduce using rule 37
	')'            reduce using rule 37
	'*'            reduce using rule 37
	'*='           reduce using rule 37
	'+'            reduce using rule 37
	'+='           reduce using rule 37
	','            reduce using rule 37
	'-'            reduce using rule 37
	'-='           reduce using rule 37
	'..'           reduce using rule 37
	'/'            reduce using rule 37
	'/='           reduce using rule 37
	':'            reduce using rule 37
	';'            reduce using rule 37
	'<'            reduce using rule 37
	'<='           reduce using rule 37
	'='            reduce using rule 37
	'=='           reduce using rule 37
	'>'            reduce using rule 37
	'>='           reduce using rule 37
	'?'            reduce using rule 37
	'?.let'        reduce using rule 37
	']'            reduce using rule 37
	'downTo'       reduce using rule 37
	'step'         reduce using rule 37
	'until'        reduce using rule 37
	'||'           reduce using rule 37
	'}'            reduce using rule 37


State 69

	Exp9 -> 'null' .                                    (rule 38)

	'!='           reduce using rule 38
	'%'            reduce using rule 38
	'&&'           reduce using rule 38
	')'            reduce using rule 38
	'*'            reduce using rule 38
	'*='           reduce using rule 38
	'+'            reduce using rule 38
	'+='           reduce using rule 38
	','            reduce using rule 38
	'-'            reduce using rule 38
	'-='           reduce using rule 38
	'..'           reduce using rule 38
	'/'            reduce using rule 38
	'/='           reduce using rule 38
	':'            reduce using rule 38
	';'            reduce using rule 38
	'<'            reduce using rule 38
	'<='           reduce using rule 38
	'='            reduce using rule 38
	'=='           reduce using rule 38
	'>'            reduce using rule 38
	'>='           reduce using rule 38
	'?'            reduce using rule 38
	'?.let'        reduce using rule 38
	']'            reduce using rule 38
	'downTo'       reduce using rule 38
	'step'         reduce using rule 38
	'until'        reduce using rule 38
	'||'           reduce using rule 38
	'}'            reduce using rule 38


State 70

	Exp9 -> 'true' .                                    (rule 36)

	'!='           reduce using rule 36
	'%'            reduce using rule 36
	'&&'           reduce using rule 36
	')'            reduce using rule 36
	'*'            reduce using rule 36
	'*='           reduce using rule 36
	'+'            reduce using rule 36
	'+='           reduce using rule 36
	','            reduce using rule 36
	'-'            reduce using rule 36
	'-='           reduce using rule 36
	'..'           reduce using rule 36
	'/'            reduce using rule 36
	'/='           reduce using rule 36
	':'            reduce using rule 36
	';'            reduce using rule 36
	'<'            reduce using rule 36
	'<='           reduce using rule 36
	'='            reduce using rule 36
	'=='           reduce using rule 36
	'>'            reduce using rule 36
	'>='           reduce using rule 36
	'?'            reduce using rule 36
	'?.let'        reduce using rule 36
	']'            reduce using rule 36
	'downTo'       reduce using rule 36
	'step'         reduce using rule 36
	'until'        reduce using rule 36
	'||'           reduce using rule 36
	'}'            reduce using rule 36


State 71

	Lambda -> '{' . ListArg '->' ListStm Exp '}'        (rule 100)
	Lambda -> '{' . ListArg '->' ListStm '}'            (rule 101)

	'->'           reduce using rule 70
	L_ident        shift, and enter state 13

	Ident          goto state 30
	Arg            goto state 31
	ListArg        goto state 93

State 72

	String -> L_quoted .                                (rule 2)

	'!='           reduce using rule 2
	'%'            reduce using rule 2
	'&&'           reduce using rule 2
	')'            reduce using rule 2
	'*'            reduce using rule 2
	'*='           reduce using rule 2
	'+'            reduce using rule 2
	'+='           reduce using rule 2
	','            reduce using rule 2
	'-'            reduce using rule 2
	'-='           reduce using rule 2
	'..'           reduce using rule 2
	'/'            reduce using rule 2
	'/='           reduce using rule 2
	':'            reduce using rule 2
	';'            reduce using rule 2
	'<'            reduce using rule 2
	'<='           reduce using rule 2
	'='            reduce using rule 2
	'=='           reduce using rule 2
	'>'            reduce using rule 2
	'>='           reduce using rule 2
	'?'            reduce using rule 2
	'?.let'        reduce using rule 2
	']'            reduce using rule 2
	'downTo'       reduce using rule 2
	'step'         reduce using rule 2
	'until'        reduce using rule 2
	'||'           reduce using rule 2
	'}'            reduce using rule 2


State 73

	Type -> '(' ListType ')' . '->' BaseType            (rule 65)

	'->'           shift, and enter state 92


State 74

	ListType -> Type ',' . ListType                     (rule 68)

	'('            shift, and enter state 22
	')'            reduce using rule 66
	'>'            reduce using rule 66
	'Bool'         shift, and enter state 23
	'Int'          shift, and enter state 24
	'String'       shift, and enter state 25
	'Tupla'        shift, and enter state 26
	'Unit'         shift, and enter state 27

	BaseType       goto state 20
	Type           goto state 40
	ListType       goto state 91

State 75

	BaseType -> 'Tupla' '<' ListType . '>'              (rule 58)

	'>'            shift, and enter state 90


State 76

	Exp -> Exp . OpAssign Exp1                          (rule 5)
	ArrayDec -> 'val' Ident '=' 'Array' '(' Exp . ',' Exp ')' ';'    (rule 108)

	'*='           shift, and enter state 83
	'+='           shift, and enter state 84
	','            shift, and enter state 89
	'-='           shift, and enter state 85
	'/='           shift, and enter state 86
	'='            shift, and enter state 88

	OpAssign       goto state 82

State 77

	Exp -> Exp . OpAssign Exp1                          (rule 5)
	Dec -> 'val' Ident ':' Type '=' Exp . ';'           (rule 95)

	'*='           shift, and enter state 83
	'+='           shift, and enter state 84
	'-='           shift, and enter state 85
	'/='           shift, and enter state 86
	';'            shift, and enter state 87
	'='            shift, and enter state 88

	OpAssign       goto state 82

State 78

	Arg -> Ident ':' Type .                             (rule 69)

	')'            reduce using rule 69
	','            reduce using rule 69
	'->'           reduce using rule 69


State 79

	ListArg -> Arg ',' ListArg .                        (rule 72)

	')'            reduce using rule 72
	'->'           reduce using rule 72


State 80

	FunctionDec -> 'fun' Ident '(' ListArg ')' ':' . Type '{' ListStm '}'    (rule 98)

	'('            shift, and enter state 22
	'Bool'         shift, and enter state 23
	'Int'          shift, and enter state 24
	'String'       shift, and enter state 25
	'Tupla'        shift, and enter state 26
	'Unit'         shift, and enter state 27

	BaseType       goto state 20
	Type           goto state 81

State 81

	FunctionDec -> 'fun' Ident '(' ListArg ')' ':' Type . '{' ListStm '}'    (rule 98)

	'{'            shift, and enter state 144


State 82

	Exp -> Exp OpAssign . Exp1                          (rule 5)

	'!'            shift, and enter state 62
	'('            shift, and enter state 63
	'++'           shift, and enter state 64
	'-'            shift, and enter state 65
	'--'           shift, and enter state 66
	'Tupla'        shift, and enter state 67
	'false'        shift, and enter state 68
	'null'         shift, and enter state 69
	'true'         shift, and enter state 70
	'{'            shift, and enter state 71
	L_integ        shift, and enter state 2
	L_quoted       shift, and enter state 72
	L_ident        shift, and enter state 13

	Integer        goto state 45
	String         goto state 46
	Ident          goto state 47
	Exp1           goto state 143
	Exp2           goto state 50
	Exp3           goto state 51
	Exp4           goto state 52
	Exp5           goto state 53
	Exp6           goto state 54
	Exp7           goto state 55
	Exp8           goto state 56
	Exp9           goto state 57
	Exp10          goto state 58
	Exp11          goto state 59
	FunctionExp    goto state 60
	Lambda         goto state 61

State 83

	OpAssign -> '*=' .                                  (rule 56)

	'!'            reduce using rule 56
	'('            reduce using rule 56
	'++'           reduce using rule 56
	'-'            reduce using rule 56
	'--'           reduce using rule 56
	'Tupla'        reduce using rule 56
	'false'        reduce using rule 56
	'null'         reduce using rule 56
	'true'         reduce using rule 56
	'{'            reduce using rule 56
	L_integ        reduce using rule 56
	L_quoted       reduce using rule 56
	L_ident        reduce using rule 56


State 84

	OpAssign -> '+=' .                                  (rule 54)

	'!'            reduce using rule 54
	'('            reduce using rule 54
	'++'           reduce using rule 54
	'-'            reduce using rule 54
	'--'           reduce using rule 54
	'Tupla'        reduce using rule 54
	'false'        reduce using rule 54
	'null'         reduce using rule 54
	'true'         reduce using rule 54
	'{'            reduce using rule 54
	L_integ        reduce using rule 54
	L_quoted       reduce using rule 54
	L_ident        reduce using rule 54


State 85

	OpAssign -> '-=' .                                  (rule 55)

	'!'            reduce using rule 55
	'('            reduce using rule 55
	'++'           reduce using rule 55
	'-'            reduce using rule 55
	'--'           reduce using rule 55
	'Tupla'        reduce using rule 55
	'false'        reduce using rule 55
	'null'         reduce using rule 55
	'true'         reduce using rule 55
	'{'            reduce using rule 55
	L_integ        reduce using rule 55
	L_quoted       reduce using rule 55
	L_ident        reduce using rule 55


State 86

	OpAssign -> '/=' .                                  (rule 57)

	'!'            reduce using rule 57
	'('            reduce using rule 57
	'++'           reduce using rule 57
	'-'            reduce using rule 57
	'--'           reduce using rule 57
	'Tupla'        reduce using rule 57
	'false'        reduce using rule 57
	'null'         reduce using rule 57
	'true'         reduce using rule 57
	'{'            reduce using rule 57
	L_integ        reduce using rule 57
	L_quoted       reduce using rule 57
	L_ident        reduce using rule 57


State 87

	Dec -> 'val' Ident ':' Type '=' Exp ';' .           (rule 95)

	'!'            reduce using rule 95
	'('            reduce using rule 95
	'++'           reduce using rule 95
	'-'            reduce using rule 95
	'--'           reduce using rule 95
	'Tupla'        reduce using rule 95
	'break'        reduce using rule 95
	'continue'     reduce using rule 95
	'false'        reduce using rule 95
	'for'          reduce using rule 95
	'fun'          reduce using rule 95
	'if'           reduce using rule 95
	'null'         reduce using rule 95
	'print'        reduce using rule 95
	'println'      reduce using rule 95
	'return'       reduce using rule 95
	'run'          reduce using rule 95
	'true'         reduce using rule 95
	'val'          reduce using rule 95
	'var'          reduce using rule 95
	'while'        reduce using rule 95
	'{'            reduce using rule 95
	'}'            reduce using rule 95
	L_integ        reduce using rule 95
	L_quoted       reduce using rule 95
	L_ident        reduce using rule 95
	%eof           reduce using rule 95


State 88

	OpAssign -> '=' .                                   (rule 53)

	'!'            reduce using rule 53
	'('            reduce using rule 53
	'++'           reduce using rule 53
	'-'            reduce using rule 53
	'--'           reduce using rule 53
	'Tupla'        reduce using rule 53
	'false'        reduce using rule 53
	'null'         reduce using rule 53
	'true'         reduce using rule 53
	'{'            reduce using rule 53
	L_integ        reduce using rule 53
	L_quoted       reduce using rule 53
	L_ident        reduce using rule 53


State 89

	ArrayDec -> 'val' Ident '=' 'Array' '(' Exp ',' . Exp ')' ';'    (rule 108)

	'!'            shift, and enter state 62
	'('            shift, and enter state 63
	'++'           shift, and enter state 64
	'-'            shift, and enter state 65
	'--'           shift, and enter state 66
	'Tupla'        shift, and enter state 67
	'false'        shift, and enter state 68
	'null'         shift, and enter state 69
	'true'         shift, and enter state 70
	'{'            shift, and enter state 71
	L_integ        shift, and enter state 2
	L_quoted       shift, and enter state 72
	L_ident        shift, and enter state 13

	Integer        goto state 45
	String         goto state 46
	Ident          goto state 47
	Exp            goto state 142
	Exp1           goto state 49
	Exp2           goto state 50
	Exp3           goto state 51
	Exp4           goto state 52
	Exp5           goto state 53
	Exp6           goto state 54
	Exp7           goto state 55
	Exp8           goto state 56
	Exp9           goto state 57
	Exp10          goto state 58
	Exp11          goto state 59
	FunctionExp    goto state 60
	Lambda         goto state 61

State 90

	BaseType -> 'Tupla' '<' ListType '>' .              (rule 58)

	')'            reduce using rule 58
	','            reduce using rule 58
	'->'           reduce using rule 58
	';'            reduce using rule 58
	'='            reduce using rule 58
	'>'            reduce using rule 58
	'?'            reduce using rule 58
	'{'            reduce using rule 58


State 91

	ListType -> Type ',' ListType .                     (rule 68)

	')'            reduce using rule 68
	'>'            reduce using rule 68


State 92

	Type -> '(' ListType ')' '->' . BaseType            (rule 65)

	'Bool'         shift, and enter state 23
	'Int'          shift, and enter state 24
	'String'       shift, and enter state 25
	'Tupla'        shift, and enter state 26

	BaseType       goto state 141

State 93

	Lambda -> '{' ListArg . '->' ListStm Exp '}'        (rule 100)
	Lambda -> '{' ListArg . '->' ListStm '}'            (rule 101)

	'->'           shift, and enter state 140


State 94

	Exp9 -> 'Tupla' '(' . ListExp ')'                   (rule 33)

	'!'            shift, and enter state 62
	'('            shift, and enter state 63
	')'            reduce using rule 47
	'++'           shift, and enter state 64
	'-'            shift, and enter state 65
	'--'           shift, and enter state 66
	'Tupla'        shift, and enter state 67
	'false'        shift, and enter state 68
	'null'         shift, and enter state 69
	'true'         shift, and enter state 70
	'{'            shift, and enter state 71
	L_integ        shift, and enter state 2
	L_quoted       shift, and enter state 72
	L_ident        shift, and enter state 13

	Integer        goto state 45
	String         goto state 46
	Ident          goto state 47
	Exp            goto state 121
	Exp1           goto state 49
	Exp2           goto state 50
	Exp3           goto state 51
	Exp4           goto state 52
	Exp5           goto state 53
	Exp6           goto state 54
	Exp7           goto state 55
	Exp8           goto state 56
	Exp9           goto state 57
	Exp10          goto state 58
	Exp11          goto state 59
	ListExp        goto state 139
	FunctionExp    goto state 60
	Lambda         goto state 61

State 95

	Exp8 -> '--' Exp8 .                                 (rule 31)

	'!='           reduce using rule 31
	'%'            reduce using rule 31
	'&&'           reduce using rule 31
	')'            reduce using rule 31
	'*'            reduce using rule 31
	'*='           reduce using rule 31
	'+'            reduce using rule 31
	'+='           reduce using rule 31
	','            reduce using rule 31
	'-'            reduce using rule 31
	'-='           reduce using rule 31
	'..'           reduce using rule 31
	'/'            reduce using rule 31
	'/='           reduce using rule 31
	':'            reduce using rule 31
	';'            reduce using rule 31
	'<'            reduce using rule 31
	'<='           reduce using rule 31
	'='            reduce using rule 31
	'=='           reduce using rule 31
	'>'            reduce using rule 31
	'>='           reduce using rule 31
	'?'            reduce using rule 31
	'?.let'        reduce using rule 31
	']'            reduce using rule 31
	'downTo'       reduce using rule 31
	'step'         reduce using rule 31
	'until'        reduce using rule 31
	'||'           reduce using rule 31
	'}'            reduce using rule 31


State 96

	Exp8 -> '-' Exp8 .                                  (rule 28)

	'!='           reduce using rule 28
	'%'            reduce using rule 28
	'&&'           reduce using rule 28
	')'            reduce using rule 28
	'*'            reduce using rule 28
	'*='           reduce using rule 28
	'+'            reduce using rule 28
	'+='           reduce using rule 28
	','            reduce using rule 28
	'-'            reduce using rule 28
	'-='           reduce using rule 28
	'..'           reduce using rule 28
	'/'            reduce using rule 28
	'/='           reduce using rule 28
	':'            reduce using rule 28
	';'            reduce using rule 28
	'<'            reduce using rule 28
	'<='           reduce using rule 28
	'='            reduce using rule 28
	'=='           reduce using rule 28
	'>'            reduce using rule 28
	'>='           reduce using rule 28
	'?'            reduce using rule 28
	'?.let'        reduce using rule 28
	']'            reduce using rule 28
	'downTo'       reduce using rule 28
	'step'         reduce using rule 28
	'until'        reduce using rule 28
	'||'           reduce using rule 28
	'}'            reduce using rule 28


State 97

	Exp8 -> '++' Exp8 .                                 (rule 30)

	'!='           reduce using rule 30
	'%'            reduce using rule 30
	'&&'           reduce using rule 30
	')'            reduce using rule 30
	'*'            reduce using rule 30
	'*='           reduce using rule 30
	'+'            reduce using rule 30
	'+='           reduce using rule 30
	','            reduce using rule 30
	'-'            reduce using rule 30
	'-='           reduce using rule 30
	'..'           reduce using rule 30
	'/'            reduce using rule 30
	'/='           reduce using rule 30
	':'            reduce using rule 30
	';'            reduce using rule 30
	'<'            reduce using rule 30
	'<='           reduce using rule 30
	'='            reduce using rule 30
	'=='           reduce using rule 30
	'>'            reduce using rule 30
	'>='           reduce using rule 30
	'?'            reduce using rule 30
	'?.let'        reduce using rule 30
	']'            reduce using rule 30
	'downTo'       reduce using rule 30
	'step'         reduce using rule 30
	'until'        reduce using rule 30
	'||'           reduce using rule 30
	'}'            reduce using rule 30


State 98

	Exp -> Exp . OpAssign Exp1                          (rule 5)
	Exp11 -> '(' Exp . ')'                              (rule 46)

	')'            shift, and enter state 138
	'*='           shift, and enter state 83
	'+='           shift, and enter state 84
	'-='           shift, and enter state 85
	'/='           shift, and enter state 86
	'='            shift, and enter state 88

	OpAssign       goto state 82

State 99

	Exp8 -> '!' Exp8 .                                  (rule 29)

	'!='           reduce using rule 29
	'%'            reduce using rule 29
	'&&'           reduce using rule 29
	')'            reduce using rule 29
	'*'            reduce using rule 29
	'*='           reduce using rule 29
	'+'            reduce using rule 29
	'+='           reduce using rule 29
	','            reduce using rule 29
	'-'            reduce using rule 29
	'-='           reduce using rule 29
	'..'           reduce using rule 29
	'/'            reduce using rule 29
	'/='           reduce using rule 29
	':'            reduce using rule 29
	';'            reduce using rule 29
	'<'            reduce using rule 29
	'<='           reduce using rule 29
	'='            reduce using rule 29
	'=='           reduce using rule 29
	'>'            reduce using rule 29
	'>='           reduce using rule 29
	'?'            reduce using rule 29
	'?.let'        reduce using rule 29
	']'            reduce using rule 29
	'downTo'       reduce using rule 29
	'step'         reduce using rule 29
	'until'        reduce using rule 29
	'||'           reduce using rule 29
	'}'            reduce using rule 29


State 100

	Exp10 -> Exp10 '!!' .                               (rule 43)

	'!!'           reduce using rule 43
	'!='           reduce using rule 43
	'%'            reduce using rule 43
	'&&'           reduce using rule 43
	')'            reduce using rule 43
	'*'            reduce using rule 43
	'*='           reduce using rule 43
	'+'            reduce using rule 43
	'+='           reduce using rule 43
	','            reduce using rule 43
	'-'            reduce using rule 43
	'-='           reduce using rule 43
	'..'           reduce using rule 43
	'/'            reduce using rule 43
	'/='           reduce using rule 43
	':'            reduce using rule 43
	';'            reduce using rule 43
	'<'            reduce using rule 43
	'<='           reduce using rule 43
	'='            reduce using rule 43
	'=='           reduce using rule 43
	'>'            reduce using rule 43
	'>='           reduce using rule 43
	'?'            reduce using rule 43
	'?.let'        reduce using rule 43
	']'            reduce using rule 43
	'downTo'       reduce using rule 43
	'step'         reduce using rule 43
	'until'        reduce using rule 43
	'||'           reduce using rule 43
	'}'            reduce using rule 43


State 101

	Exp7 -> Exp7 '%' . Exp8                             (rule 26)

	'!'            shift, and enter state 62
	'('            shift, and enter state 63
	'++'           shift, and enter state 64
	'-'            shift, and enter state 65
	'--'           shift, and enter state 66
	'Tupla'        shift, and enter state 67
	'false'        shift, and enter state 68
	'null'         shift, and enter state 69
	'true'         shift, and enter state 70
	'{'            shift, and enter state 71
	L_integ        shift, and enter state 2
	L_quoted       shift, and enter state 72
	L_ident        shift, and enter state 13

	Integer        goto state 45
	String         goto state 46
	Ident          goto state 47
	Exp8           goto state 137
	Exp9           goto state 57
	Exp10          goto state 58
	Exp11          goto state 59
	FunctionExp    goto state 60
	Lambda         goto state 61

State 102

	Exp7 -> Exp7 '*' . Exp8                             (rule 24)

	'!'            shift, and enter state 62
	'('            shift, and enter state 63
	'++'           shift, and enter state 64
	'-'            shift, and enter state 65
	'--'           shift, and enter state 66
	'Tupla'        shift, and enter state 67
	'false'        shift, and enter state 68
	'null'         shift, and enter state 69
	'true'         shift, and enter state 70
	'{'            shift, and enter state 71
	L_integ        shift, and enter state 2
	L_quoted       shift, and enter state 72
	L_ident        shift, and enter state 13

	Integer        goto state 45
	String         goto state 46
	Ident          goto state 47
	Exp8           goto state 136
	Exp9           goto state 57
	Exp10          goto state 58
	Exp11          goto state 59
	FunctionExp    goto state 60
	Lambda         goto state 61

State 103

	Exp7 -> Exp7 '/' . Exp8                             (rule 25)

	'!'            shift, and enter state 62
	'('            shift, and enter state 63
	'++'           shift, and enter state 64
	'-'            shift, and enter state 65
	'--'           shift, and enter state 66
	'Tupla'        shift, and enter state 67
	'false'        shift, and enter state 68
	'null'         shift, and enter state 69
	'true'         shift, and enter state 70
	'{'            shift, and enter state 71
	L_integ        shift, and enter state 2
	L_quoted       shift, and enter state 72
	L_ident        shift, and enter state 13

	Integer        goto state 45
	String         goto state 46
	Ident          goto state 47
	Exp8           goto state 135
	Exp9           goto state 57
	Exp10          goto state 58
	Exp11          goto state 59
	FunctionExp    goto state 60
	Lambda         goto state 61

State 104

	Exp6 -> Exp6 '+' . Exp7                             (rule 21)

	'!'            shift, and enter state 62
	'('            shift, and enter state 63
	'++'           shift, and enter state 64
	'-'            shift, and enter state 65
	'--'           shift, and enter state 66
	'Tupla'        shift, and enter state 67
	'false'        shift, and enter state 68
	'null'         shift, and enter state 69
	'true'         shift, and enter state 70
	'{'            shift, and enter state 71
	L_integ        shift, and enter state 2
	L_quoted       shift, and enter state 72
	L_ident        shift, and enter state 13

	Integer        goto state 45
	String         goto state 46
	Ident          goto state 47
	Exp7           goto state 134
	Exp8           goto state 56
	Exp9           goto state 57
	Exp10          goto state 58
	Exp11          goto state 59
	FunctionExp    goto state 60
	Lambda         goto state 61

State 105

	Exp6 -> Exp6 '-' . Exp7                             (rule 22)

	'!'            shift, and enter state 62
	'('            shift, and enter state 63
	'++'           shift, and enter state 64
	'-'            shift, and enter state 65
	'--'           shift, and enter state 66
	'Tupla'        shift, and enter state 67
	'false'        shift, and enter state 68
	'null'         shift, and enter state 69
	'true'         shift, and enter state 70
	'{'            shift, and enter state 71
	L_integ        shift, and enter state 2
	L_quoted       shift, and enter state 72
	L_ident        shift, and enter state 13

	Integer        goto state 45
	String         goto state 46
	Ident          goto state 47
	Exp7           goto state 133
	Exp8           goto state 56
	Exp9           goto state 57
	Exp10          goto state 58
	Exp11          goto state 59
	FunctionExp    goto state 60
	Lambda         goto state 61

State 106

	Exp5 -> Exp5 '<' . Exp6                             (rule 16)

	'!'            shift, and enter state 62
	'('            shift, and enter state 63
	'++'           shift, and enter state 64
	'-'            shift, and enter state 65
	'--'           shift, and enter state 66
	'Tupla'        shift, and enter state 67
	'false'        shift, and enter state 68
	'null'         shift, and enter state 69
	'true'         shift, and enter state 70
	'{'            shift, and enter state 71
	L_integ        shift, and enter state 2
	L_quoted       shift, and enter state 72
	L_ident        shift, and enter state 13

	Integer        goto state 45
	String         goto state 46
	Ident          goto state 47
	Exp6           goto state 132
	Exp7           goto state 55
	Exp8           goto state 56
	Exp9           goto state 57
	Exp10          goto state 58
	Exp11          goto state 59
	FunctionExp    goto state 60
	Lambda         goto state 61

State 107

	Exp5 -> Exp5 '<=' . Exp6                            (rule 18)

	'!'            shift, and enter state 62
	'('            shift, and enter state 63
	'++'           shift, and enter state 64
	'-'            shift, and enter state 65
	'--'           shift, and enter state 66
	'Tupla'        shift, and enter state 67
	'false'        shift, and enter state 68
	'null'         shift, and enter state 69
	'true'         shift, and enter state 70
	'{'            shift, and enter state 71
	L_integ        shift, and enter state 2
	L_quoted       shift, and enter state 72
	L_ident        shift, and enter state 13

	Integer        goto state 45
	String         goto state 46
	Ident          goto state 47
	Exp6           goto state 131
	Exp7           goto state 55
	Exp8           goto state 56
	Exp9           goto state 57
	Exp10          goto state 58
	Exp11          goto state 59
	FunctionExp    goto state 60
	Lambda         goto state 61

State 108

	Exp5 -> Exp5 '>' . Exp6                             (rule 17)

	'!'            shift, and enter state 62
	'('            shift, and enter state 63
	'++'           shift, and enter state 64
	'-'            shift, and enter state 65
	'--'           shift, and enter state 66
	'Tupla'        shift, and enter state 67
	'false'        shift, and enter state 68
	'null'         shift, and enter state 69
	'true'         shift, and enter state 70
	'{'            shift, and enter state 71
	L_integ        shift, and enter state 2
	L_quoted       shift, and enter state 72
	L_ident        shift, and enter state 13

	Integer        goto state 45
	String         goto state 46
	Ident          goto state 47
	Exp6           goto state 130
	Exp7           goto state 55
	Exp8           goto state 56
	Exp9           goto state 57
	Exp10          goto state 58
	Exp11          goto state 59
	FunctionExp    goto state 60
	Lambda         goto state 61

State 109

	Exp5 -> Exp5 '>=' . Exp6                            (rule 19)

	'!'            shift, and enter state 62
	'('            shift, and enter state 63
	'++'           shift, and enter state 64
	'-'            shift, and enter state 65
	'--'           shift, and enter state 66
	'Tupla'        shift, and enter state 67
	'false'        shift, and enter state 68
	'null'         shift, and enter state 69
	'true'         shift, and enter state 70
	'{'            shift, and enter state 71
	L_integ        shift, and enter state 2
	L_quoted       shift, and enter state 72
	L_ident        shift, and enter state 13

	Integer        goto state 45
	String         goto state 46
	Ident          goto state 47
	Exp6           goto state 129
	Exp7           goto state 55
	Exp8           goto state 56
	Exp9           goto state 57
	Exp10          goto state 58
	Exp11          goto state 59
	FunctionExp    goto state 60
	Lambda         goto state 61

State 110

	Exp4 -> Exp4 '!=' . Exp5                            (rule 14)

	'!'            shift, and enter state 62
	'('            shift, and enter state 63
	'++'           shift, and enter state 64
	'-'            shift, and enter state 65
	'--'           shift, and enter state 66
	'Tupla'        shift, and enter state 67
	'false'        shift, and enter state 68
	'null'         shift, and enter state 69
	'true'         shift, and enter state 70
	'{'            shift, and enter state 71
	L_integ        shift, and enter state 2
	L_quoted       shift, and enter state 72
	L_ident        shift, and enter state 13

	Integer        goto state 45
	String         goto state 46
	Ident          goto state 47
	Exp5           goto state 128
	Exp6           goto state 54
	Exp7           goto state 55
	Exp8           goto state 56
	Exp9           goto state 57
	Exp10          goto state 58
	Exp11          goto state 59
	FunctionExp    goto state 60
	Lambda         goto state 61

State 111

	Exp4 -> Exp4 '==' . Exp5                            (rule 13)

	'!'            shift, and enter state 62
	'('            shift, and enter state 63
	'++'           shift, and enter state 64
	'-'            shift, and enter state 65
	'--'           shift, and enter state 66
	'Tupla'        shift, and enter state 67
	'false'        shift, and enter state 68
	'null'         shift, and enter state 69
	'true'         shift, and enter state 70
	'{'            shift, and enter state 71
	L_integ        shift, and enter state 2
	L_quoted       shift, and enter state 72
	L_ident        shift, and enter state 13

	Integer        goto state 45
	String         goto state 46
	Ident          goto state 47
	Exp5           goto state 127
	Exp6           goto state 54
	Exp7           goto state 55
	Exp8           goto state 56
	Exp9           goto state 57
	Exp10          goto state 58
	Exp11          goto state 59
	FunctionExp    goto state 60
	Lambda         goto state 61

State 112

	Exp3 -> Exp3 '&&' . Exp4                            (rule 11)

	'!'            shift, and enter state 62
	'('            shift, and enter state 63
	'++'           shift, and enter state 64
	'-'            shift, and enter state 65
	'--'           shift, and enter state 66
	'Tupla'        shift, and enter state 67
	'false'        shift, and enter state 68
	'null'         shift, and enter state 69
	'true'         shift, and enter state 70
	'{'            shift, and enter state 71
	L_integ        shift, and enter state 2
	L_quoted       shift, and enter state 72
	L_ident        shift, and enter state 13

	Integer        goto state 45
	String         goto state 46
	Ident          goto state 47
	Exp4           goto state 126
	Exp5           goto state 53
	Exp6           goto state 54
	Exp7           goto state 55
	Exp8           goto state 56
	Exp9           goto state 57
	Exp10          goto state 58
	Exp11          goto state 59
	FunctionExp    goto state 60
	Lambda         goto state 61

State 113

	Exp1 -> Exp3 '?' . Exp1 ':' Exp2                    (rule 7)

	'!'            shift, and enter state 62
	'('            shift, and enter state 63
	'++'           shift, and enter state 64
	'-'            shift, and enter state 65
	'--'           shift, and enter state 66
	'Tupla'        shift, and enter state 67
	'false'        shift, and enter state 68
	'null'         shift, and enter state 69
	'true'         shift, and enter state 70
	'{'            shift, and enter state 71
	L_integ        shift, and enter state 2
	L_quoted       shift, and enter state 72
	L_ident        shift, and enter state 13

	Integer        goto state 45
	String         goto state 46
	Ident          goto state 47
	Exp1           goto state 125
	Exp2           goto state 50
	Exp3           goto state 51
	Exp4           goto state 52
	Exp5           goto state 53
	Exp6           goto state 54
	Exp7           goto state 55
	Exp8           goto state 56
	Exp9           goto state 57
	Exp10          goto state 58
	Exp11          goto state 59
	FunctionExp    goto state 60
	Lambda         goto state 61

State 114

	Exp2 -> Exp2 '||' . Exp3                            (rule 9)

	'!'            shift, and enter state 62
	'('            shift, and enter state 63
	'++'           shift, and enter state 64
	'-'            shift, and enter state 65
	'--'           shift, and enter state 66
	'Tupla'        shift, and enter state 67
	'false'        shift, and enter state 68
	'null'         shift, and enter state 69
	'true'         shift, and enter state 70
	'{'            shift, and enter state 71
	L_integ        shift, and enter state 2
	L_quoted       shift, and enter state 72
	L_ident        shift, and enter state 13

	Integer        goto state 45
	String         goto state 46
	Ident          goto state 47
	Exp3           goto state 124
	Exp4           goto state 52
	Exp5           goto state 53
	Exp6           goto state 54
	Exp7           goto state 55
	Exp8           goto state 56
	Exp9           goto state 57
	Exp10          goto state 58
	Exp11          goto state 59
	FunctionExp    goto state 60
	Lambda         goto state 61

State 115

	Dec -> 'var' Ident ':' Type '=' Exp ';' .           (rule 94)

	'!'            reduce using rule 94
	'('            reduce using rule 94
	'++'           reduce using rule 94
	'-'            reduce using rule 94
	'--'           reduce using rule 94
	'Tupla'        reduce using rule 94
	'break'        reduce using rule 94
	'continue'     reduce using rule 94
	'false'        reduce using rule 94
	'for'          reduce using rule 94
	'fun'          reduce using rule 94
	'if'           reduce using rule 94
	'null'         reduce using rule 94
	'print'        reduce using rule 94
	'println'      reduce using rule 94
	'return'       reduce using rule 94
	'run'          reduce using rule 94
	'true'         reduce using rule 94
	'val'          reduce using rule 94
	'var'          reduce using rule 94
	'while'        reduce using rule 94
	'{'            reduce using rule 94
	'}'            reduce using rule 94
	L_integ        reduce using rule 94
	L_quoted       reduce using rule 94
	L_ident        reduce using rule 94
	%eof           reduce using rule 94


State 116

	ListDimExp -> DimExp .                              (rule 51)
	ListDimExp -> DimExp . ListDimExp                   (rule 52)

	'!='           reduce using rule 51
	'%'            reduce using rule 51
	'&&'           reduce using rule 51
	')'            reduce using rule 51
	'*'            reduce using rule 51
	'*='           reduce using rule 51
	'+'            reduce using rule 51
	'+='           reduce using rule 51
	','            reduce using rule 51
	'-'            reduce using rule 51
	'-='           reduce using rule 51
	'..'           reduce using rule 51
	'/'            reduce using rule 51
	'/='           reduce using rule 51
	':'            reduce using rule 51
	';'            reduce using rule 51
	'<'            reduce using rule 51
	'<='           reduce using rule 51
	'='            reduce using rule 51
	'=='           reduce using rule 51
	'>'            reduce using rule 51
	'>='           reduce using rule 51
	'?'            reduce using rule 51
	'?.let'        reduce using rule 51
	'['            shift, and enter state 119
	']'            reduce using rule 51
	'downTo'       reduce using rule 51
	'step'         reduce using rule 51
	'until'        reduce using rule 51
	'||'           reduce using rule 51
	'}'            reduce using rule 51

	DimExp         goto state 116
	ListDimExp     goto state 123

State 117

	Exp9 -> Ident ListDimExp .                          (rule 40)

	'!='           reduce using rule 40
	'%'            reduce using rule 40
	'&&'           reduce using rule 40
	')'            reduce using rule 40
	'*'            reduce using rule 40
	'*='           reduce using rule 40
	'+'            reduce using rule 40
	'+='           reduce using rule 40
	','            reduce using rule 40
	'-'            reduce using rule 40
	'-='           reduce using rule 40
	'..'           reduce using rule 40
	'/'            reduce using rule 40
	'/='           reduce using rule 40
	':'            reduce using rule 40
	';'            reduce using rule 40
	'<'            reduce using rule 40
	'<='           reduce using rule 40
	'='            reduce using rule 40
	'=='           reduce using rule 40
	'>'            reduce using rule 40
	'>='           reduce using rule 40
	'?'            reduce using rule 40
	'?.let'        reduce using rule 40
	']'            reduce using rule 40
	'downTo'       reduce using rule 40
	'step'         reduce using rule 40
	'until'        reduce using rule 40
	'||'           reduce using rule 40
	'}'            reduce using rule 40


State 118

	FunctionExp -> Ident '(' . ListExp ')'              (rule 99)

	'!'            shift, and enter state 62
	'('            shift, and enter state 63
	')'            reduce using rule 47
	'++'           shift, and enter state 64
	'-'            shift, and enter state 65
	'--'           shift, and enter state 66
	'Tupla'        shift, and enter state 67
	'false'        shift, and enter state 68
	'null'         shift, and enter state 69
	'true'         shift, and enter state 70
	'{'            shift, and enter state 71
	L_integ        shift, and enter state 2
	L_quoted       shift, and enter state 72
	L_ident        shift, and enter state 13

	Integer        goto state 45
	String         goto state 46
	Ident          goto state 47
	Exp            goto state 121
	Exp1           goto state 49
	Exp2           goto state 50
	Exp3           goto state 51
	Exp4           goto state 52
	Exp5           goto state 53
	Exp6           goto state 54
	Exp7           goto state 55
	Exp8           goto state 56
	Exp9           goto state 57
	Exp10          goto state 58
	Exp11          goto state 59
	ListExp        goto state 122
	FunctionExp    goto state 60
	Lambda         goto state 61

State 119

	DimExp -> '[' . Exp ']'                             (rule 50)

	'!'            shift, and enter state 62
	'('            shift, and enter state 63
	'++'           shift, and enter state 64
	'-'            shift, and enter state 65
	'--'           shift, and enter state 66
	'Tupla'        shift, and enter state 67
	'false'        shift, and enter state 68
	'null'         shift, and enter state 69
	'true'         shift, and enter state 70
	'{'            shift, and enter state 71
	L_integ        shift, and enter state 2
	L_quoted       shift, and enter state 72
	L_ident        shift, and enter state 13

	Integer        goto state 45
	String         goto state 46
	Ident          goto state 47
	Exp            goto state 120
	Exp1           goto state 49
	Exp2           goto state 50
	Exp3           goto state 51
	Exp4           goto state 52
	Exp5           goto state 53
	Exp6           goto state 54
	Exp7           goto state 55
	Exp8           goto state 56
	Exp9           goto state 57
	Exp10          goto state 58
	Exp11          goto state 59
	FunctionExp    goto state 60
	Lambda         goto state 61

State 120

	Exp -> Exp . OpAssign Exp1                          (rule 5)
	DimExp -> '[' Exp . ']'                             (rule 50)

	'*='           shift, and enter state 83
	'+='           shift, and enter state 84
	'-='           shift, and enter state 85
	'/='           shift, and enter state 86
	'='            shift, and enter state 88
	']'            shift, and enter state 152

	OpAssign       goto state 82

State 121

	Exp -> Exp . OpAssign Exp1                          (rule 5)
	ListExp -> Exp .                                    (rule 48)
	ListExp -> Exp . ',' ListExp                        (rule 49)

	')'            reduce using rule 48
	'*='           shift, and enter state 83
	'+='           shift, and enter state 84
	','            shift, and enter state 151
	'-='           shift, and enter state 85
	'/='           shift, and enter state 86
	'='            shift, and enter state 88

	OpAssign       goto state 82

State 122

	FunctionExp -> Ident '(' ListExp . ')'              (rule 99)

	')'            shift, and enter state 150


State 123

	ListDimExp -> DimExp ListDimExp .                   (rule 52)

	'!='           reduce using rule 52
	'%'            reduce using rule 52
	'&&'           reduce using rule 52
	')'            reduce using rule 52
	'*'            reduce using rule 52
	'*='           reduce using rule 52
	'+'            reduce using rule 52
	'+='           reduce using rule 52
	','            reduce using rule 52
	'-'            reduce using rule 52
	'-='           reduce using rule 52
	'..'           reduce using rule 52
	'/'            reduce using rule 52
	'/='           reduce using rule 52
	':'            reduce using rule 52
	';'            reduce using rule 52
	'<'            reduce using rule 52
	'<='           reduce using rule 52
	'='            reduce using rule 52
	'=='           reduce using rule 52
	'>'            reduce using rule 52
	'>='           reduce using rule 52
	'?'            reduce using rule 52
	'?.let'        reduce using rule 52
	']'            reduce using rule 52
	'downTo'       reduce using rule 52
	'step'         reduce using rule 52
	'until'        reduce using rule 52
	'||'           reduce using rule 52
	'}'            reduce using rule 52


State 124

	Exp2 -> Exp2 '||' Exp3 .                            (rule 9)
	Exp3 -> Exp3 . '&&' Exp4                            (rule 11)

	'&&'           shift, and enter state 112
	')'            reduce using rule 9
	'*='           reduce using rule 9
	'+='           reduce using rule 9
	','            reduce using rule 9
	'-='           reduce using rule 9
	'..'           reduce using rule 9
	'/='           reduce using rule 9
	':'            reduce using rule 9
	';'            reduce using rule 9
	'='            reduce using rule 9
	'?.let'        reduce using rule 9
	']'            reduce using rule 9
	'downTo'       reduce using rule 9
	'step'         reduce using rule 9
	'until'        reduce using rule 9
	'||'           reduce using rule 9
	'}'            reduce using rule 9


State 125

	Exp1 -> Exp3 '?' Exp1 . ':' Exp2                    (rule 7)

	':'            shift, and enter state 149


State 126

	Exp3 -> Exp3 '&&' Exp4 .                            (rule 11)
	Exp4 -> Exp4 . '==' Exp5                            (rule 13)
	Exp4 -> Exp4 . '!=' Exp5                            (rule 14)

	'!='           shift, and enter state 110
	'&&'           reduce using rule 11
	')'            reduce using rule 11
	'*='           reduce using rule 11
	'+='           reduce using rule 11
	','            reduce using rule 11
	'-='           reduce using rule 11
	'..'           reduce using rule 11
	'/='           reduce using rule 11
	':'            reduce using rule 11
	';'            reduce using rule 11
	'='            reduce using rule 11
	'=='           shift, and enter state 111
	'?'            reduce using rule 11
	'?.let'        reduce using rule 11
	']'            reduce using rule 11
	'downTo'       reduce using rule 11
	'step'         reduce using rule 11
	'until'        reduce using rule 11
	'||'           reduce using rule 11
	'}'            reduce using rule 11


State 127

	Exp4 -> Exp4 '==' Exp5 .                            (rule 13)
	Exp5 -> Exp5 . '<' Exp6                             (rule 16)
	Exp5 -> Exp5 . '>' Exp6                             (rule 17)
	Exp5 -> Exp5 . '<=' Exp6                            (rule 18)
	Exp5 -> Exp5 . '>=' Exp6                            (rule 19)

	'!='           reduce using rule 13
	'&&'           reduce using rule 13
	')'            reduce using rule 13
	'*='           reduce using rule 13
	'+='           reduce using rule 13
	','            reduce using rule 13
	'-='           reduce using rule 13
	'..'           reduce using rule 13
	'/='           reduce using rule 13
	':'            reduce using rule 13
	';'            reduce using rule 13
	'<'            shift, and enter state 106
	'<='           shift, and enter state 107
	'='            reduce using rule 13
	'=='           reduce using rule 13
	'>'            shift, and enter state 108
	'>='           shift, and enter state 109
	'?'            reduce using rule 13
	'?.let'        reduce using rule 13
	']'            reduce using rule 13
	'downTo'       reduce using rule 13
	'step'         reduce using rule 13
	'until'        reduce using rule 13
	'||'           reduce using rule 13
	'}'            reduce using rule 13


State 128

	Exp4 -> Exp4 '!=' Exp5 .                            (rule 14)
	Exp5 -> Exp5 . '<' Exp6                             (rule 16)
	Exp5 -> Exp5 . '>' Exp6                             (rule 17)
	Exp5 -> Exp5 . '<=' Exp6                            (rule 18)
	Exp5 -> Exp5 . '>=' Exp6                            (rule 19)

	'!='           reduce using rule 14
	'&&'           reduce using rule 14
	')'            reduce using rule 14
	'*='           reduce using rule 14
	'+='           reduce using rule 14
	','            reduce using rule 14
	'-='           reduce using rule 14
	'..'           reduce using rule 14
	'/='           reduce using rule 14
	':'            reduce using rule 14
	';'            reduce using rule 14
	'<'            shift, and enter state 106
	'<='           shift, and enter state 107
	'='            reduce using rule 14
	'=='           reduce using rule 14
	'>'            shift, and enter state 108
	'>='           shift, and enter state 109
	'?'            reduce using rule 14
	'?.let'        reduce using rule 14
	']'            reduce using rule 14
	'downTo'       reduce using rule 14
	'step'         reduce using rule 14
	'until'        reduce using rule 14
	'||'           reduce using rule 14
	'}'            reduce using rule 14


State 129

	Exp5 -> Exp5 '>=' Exp6 .                            (rule 19)
	Exp6 -> Exp6 . '+' Exp7                             (rule 21)
	Exp6 -> Exp6 . '-' Exp7                             (rule 22)

	'!='           reduce using rule 19
	'&&'           reduce using rule 19
	')'            reduce using rule 19
	'*='           reduce using rule 19
	'+'            shift, and enter state 104
	'+='           reduce using rule 19
	','            reduce using rule 19
	'-'            shift, and enter state 105
	'-='           reduce using rule 19
	'..'           reduce using rule 19
	'/='           reduce using rule 19
	':'            reduce using rule 19
	';'            reduce using rule 19
	'<'            reduce using rule 19
	'<='           reduce using rule 19
	'='            reduce using rule 19
	'=='           reduce using rule 19
	'>'            reduce using rule 19
	'>='           reduce using rule 19
	'?'            reduce using rule 19
	'?.let'        reduce using rule 19
	']'            reduce using rule 19
	'downTo'       reduce using rule 19
	'step'         reduce using rule 19
	'until'        reduce using rule 19
	'||'           reduce using rule 19
	'}'            reduce using rule 19


State 130

	Exp5 -> Exp5 '>' Exp6 .                             (rule 17)
	Exp6 -> Exp6 . '+' Exp7                             (rule 21)
	Exp6 -> Exp6 . '-' Exp7                             (rule 22)

	'!='           reduce using rule 17
	'&&'           reduce using rule 17
	')'            reduce using rule 17
	'*='           reduce using rule 17
	'+'            shift, and enter state 104
	'+='           reduce using rule 17
	','            reduce using rule 17
	'-'            shift, and enter state 105
	'-='           reduce using rule 17
	'..'           reduce using rule 17
	'/='           reduce using rule 17
	':'            reduce using rule 17
	';'            reduce using rule 17
	'<'            reduce using rule 17
	'<='           reduce using rule 17
	'='            reduce using rule 17
	'=='           reduce using rule 17
	'>'            reduce using rule 17
	'>='           reduce using rule 17
	'?'            reduce using rule 17
	'?.let'        reduce using rule 17
	']'            reduce using rule 17
	'downTo'       reduce using rule 17
	'step'         reduce using rule 17
	'until'        reduce using rule 17
	'||'           reduce using rule 17
	'}'            reduce using rule 17


State 131

	Exp5 -> Exp5 '<=' Exp6 .                            (rule 18)
	Exp6 -> Exp6 . '+' Exp7                             (rule 21)
	Exp6 -> Exp6 . '-' Exp7                             (rule 22)

	'!='           reduce using rule 18
	'&&'           reduce using rule 18
	')'            reduce using rule 18
	'*='           reduce using rule 18
	'+'            shift, and enter state 104
	'+='           reduce using rule 18
	','            reduce using rule 18
	'-'            shift, and enter state 105
	'-='           reduce using rule 18
	'..'           reduce using rule 18
	'/='           reduce using rule 18
	':'            reduce using rule 18
	';'            reduce using rule 18
	'<'            reduce using rule 18
	'<='           reduce using rule 18
	'='            reduce using rule 18
	'=='           reduce using rule 18
	'>'            reduce using rule 18
	'>='           reduce using rule 18
	'?'            reduce using rule 18
	'?.let'        reduce using rule 18
	']'            reduce using rule 18
	'downTo'       reduce using rule 18
	'step'         reduce using rule 18
	'until'        reduce using rule 18
	'||'           reduce using rule 18
	'}'            reduce using rule 18


State 132

	Exp5 -> Exp5 '<' Exp6 .                             (rule 16)
	Exp6 -> Exp6 . '+' Exp7                             (rule 21)
	Exp6 -> Exp6 . '-' Exp7                             (rule 22)

	'!='           reduce using rule 16
	'&&'           reduce using rule 16
	')'            reduce using rule 16
	'*='           reduce using rule 16
	'+'            shift, and enter state 104
	'+='           reduce using rule 16
	','            reduce using rule 16
	'-'            shift, and enter state 105
	'-='           reduce using rule 16
	'..'           reduce using rule 16
	'/='           reduce using rule 16
	':'            reduce using rule 16
	';'            reduce using rule 16
	'<'            reduce using rule 16
	'<='           reduce using rule 16
	'='            reduce using rule 16
	'=='           reduce using rule 16
	'>'            reduce using rule 16
	'>='           reduce using rule 16
	'?'            reduce using rule 16
	'?.let'        reduce using rule 16
	']'            reduce using rule 16
	'downTo'       reduce using rule 16
	'step'         reduce using rule 16
	'until'        reduce using rule 16
	'||'           reduce using rule 16
	'}'            reduce using rule 16


State 133

	Exp6 -> Exp6 '-' Exp7 .                             (rule 22)
	Exp7 -> Exp7 . '*' Exp8                             (rule 24)
	Exp7 -> Exp7 . '/' Exp8                             (rule 25)
	Exp7 -> Exp7 . '%' Exp8                             (rule 26)

	'!='           reduce using rule 22
	'%'            shift, and enter state 101
	'&&'           reduce using rule 22
	')'            reduce using rule 22
	'*'            shift, and enter state 102
	'*='           reduce using rule 22
	'+'            reduce using rule 22
	'+='           reduce using rule 22
	','            reduce using rule 22
	'-'            reduce using rule 22
	'-='           reduce using rule 22
	'..'           reduce using rule 22
	'/'            shift, and enter state 103
	'/='           reduce using rule 22
	':'            reduce using rule 22
	';'            reduce using rule 22
	'<'            reduce using rule 22
	'<='           reduce using rule 22
	'='            reduce using rule 22
	'=='           reduce using rule 22
	'>'            reduce using rule 22
	'>='           reduce using rule 22
	'?'            reduce using rule 22
	'?.let'        reduce using rule 22
	']'            reduce using rule 22
	'downTo'       reduce using rule 22
	'step'         reduce using rule 22
	'until'        reduce using rule 22
	'||'           reduce using rule 22
	'}'            reduce using rule 22


State 134

	Exp6 -> Exp6 '+' Exp7 .                             (rule 21)
	Exp7 -> Exp7 . '*' Exp8                             (rule 24)
	Exp7 -> Exp7 . '/' Exp8                             (rule 25)
	Exp7 -> Exp7 . '%' Exp8                             (rule 26)

	'!='           reduce using rule 21
	'%'            shift, and enter state 101
	'&&'           reduce using rule 21
	')'            reduce using rule 21
	'*'            shift, and enter state 102
	'*='           reduce using rule 21
	'+'            reduce using rule 21
	'+='           reduce using rule 21
	','            reduce using rule 21
	'-'            reduce using rule 21
	'-='           reduce using rule 21
	'..'           reduce using rule 21
	'/'            shift, and enter state 103
	'/='           reduce using rule 21
	':'            reduce using rule 21
	';'            reduce using rule 21
	'<'            reduce using rule 21
	'<='           reduce using rule 21
	'='            reduce using rule 21
	'=='           reduce using rule 21
	'>'            reduce using rule 21
	'>='           reduce using rule 21
	'?'            reduce using rule 21
	'?.let'        reduce using rule 21
	']'            reduce using rule 21
	'downTo'       reduce using rule 21
	'step'         reduce using rule 21
	'until'        reduce using rule 21
	'||'           reduce using rule 21
	'}'            reduce using rule 21


State 135

	Exp7 -> Exp7 '/' Exp8 .                             (rule 25)

	'!='           reduce using rule 25
	'%'            reduce using rule 25
	'&&'           reduce using rule 25
	')'            reduce using rule 25
	'*'            reduce using rule 25
	'*='           reduce using rule 25
	'+'            reduce using rule 25
	'+='           reduce using rule 25
	','            reduce using rule 25
	'-'            reduce using rule 25
	'-='           reduce using rule 25
	'..'           reduce using rule 25
	'/'            reduce using rule 25
	'/='           reduce using rule 25
	':'            reduce using rule 25
	';'            reduce using rule 25
	'<'            reduce using rule 25
	'<='           reduce using rule 25
	'='            reduce using rule 25
	'=='           reduce using rule 25
	'>'            reduce using rule 25
	'>='           reduce using rule 25
	'?'            reduce using rule 25
	'?.let'        reduce using rule 25
	']'            reduce using rule 25
	'downTo'       reduce using rule 25
	'step'         reduce using rule 25
	'until'        reduce using rule 25
	'||'           reduce using rule 25
	'}'            reduce using rule 25


State 136

	Exp7 -> Exp7 '*' Exp8 .                             (rule 24)

	'!='           reduce using rule 24
	'%'            reduce using rule 24
	'&&'           reduce using rule 24
	')'            reduce using rule 24
	'*'            reduce using rule 24
	'*='           reduce using rule 24
	'+'            reduce using rule 24
	'+='           reduce using rule 24
	','            reduce using rule 24
	'-'            reduce using rule 24
	'-='           reduce using rule 24
	'..'           reduce using rule 24
	'/'            reduce using rule 24
	'/='           reduce using rule 24
	':'            reduce using rule 24
	';'            reduce using rule 24
	'<'            reduce using rule 24
	'<='           reduce using rule 24
	'='            reduce using rule 24
	'=='           reduce using rule 24
	'>'            reduce using rule 24
	'>='           reduce using rule 24
	'?'            reduce using rule 24
	'?.let'        reduce using rule 24
	']'            reduce using rule 24
	'downTo'       reduce using rule 24
	'step'         reduce using rule 24
	'until'        reduce using rule 24
	'||'           reduce using rule 24
	'}'            reduce using rule 24


State 137

	Exp7 -> Exp7 '%' Exp8 .                             (rule 26)

	'!='           reduce using rule 26
	'%'            reduce using rule 26
	'&&'           reduce using rule 26
	')'            reduce using rule 26
	'*'            reduce using rule 26
	'*='           reduce using rule 26
	'+'            reduce using rule 26
	'+='           reduce using rule 26
	','            reduce using rule 26
	'-'            reduce using rule 26
	'-='           reduce using rule 26
	'..'           reduce using rule 26
	'/'            reduce using rule 26
	'/='           reduce using rule 26
	':'            reduce using rule 26
	';'            reduce using rule 26
	'<'            reduce using rule 26
	'<='           reduce using rule 26
	'='            reduce using rule 26
	'=='           reduce using rule 26
	'>'            reduce using rule 26
	'>='           reduce using rule 26
	'?'            reduce using rule 26
	'?.let'        reduce using rule 26
	']'            reduce using rule 26
	'downTo'       reduce using rule 26
	'step'         reduce using rule 26
	'until'        reduce using rule 26
	'||'           reduce using rule 26
	'}'            reduce using rule 26


State 138

	Exp11 -> '(' Exp ')' .                              (rule 46)

	'!!'           reduce using rule 46
	'!='           reduce using rule 46
	'%'            reduce using rule 46
	'&&'           reduce using rule 46
	')'            reduce using rule 46
	'*'            reduce using rule 46
	'*='           reduce using rule 46
	'+'            reduce using rule 46
	'+='           reduce using rule 46
	','            reduce using rule 46
	'-'            reduce using rule 46
	'-='           reduce using rule 46
	'..'           reduce using rule 46
	'/'            reduce using rule 46
	'/='           reduce using rule 46
	':'            reduce using rule 46
	';'            reduce using rule 46
	'<'            reduce using rule 46
	'<='           reduce using rule 46
	'='            reduce using rule 46
	'=='           reduce using rule 46
	'>'            reduce using rule 46
	'>='           reduce using rule 46
	'?'            reduce using rule 46
	'?.let'        reduce using rule 46
	']'            reduce using rule 46
	'downTo'       reduce using rule 46
	'step'         reduce using rule 46
	'until'        reduce using rule 46
	'||'           reduce using rule 46
	'}'            reduce using rule 46


State 139

	Exp9 -> 'Tupla' '(' ListExp . ')'                   (rule 33)

	')'            shift, and enter state 148


State 140

	Lambda -> '{' ListArg '->' . ListStm Exp '}'        (rule 100)
	Lambda -> '{' ListArg '->' . ListStm '}'            (rule 101)

	'!'            reduce using rule 87
	'('            reduce using rule 87
	'++'           reduce using rule 87
	'-'            reduce using rule 87
	'--'           reduce using rule 87
	'Tupla'        reduce using rule 87
	'break'        reduce using rule 87
	'continue'     reduce using rule 87
	'false'        reduce using rule 87
	'for'          reduce using rule 87
	'fun'          reduce using rule 87
	'if'           reduce using rule 87
	'null'         reduce using rule 87
	'print'        reduce using rule 87
	'println'      reduce using rule 87
	'return'       reduce using rule 87
	'run'          reduce using rule 87
	'true'         reduce using rule 87
	'val'          reduce using rule 87
	'var'          reduce using rule 87
	'while'        reduce using rule 87
	'{'            reduce using rule 87
	'}'            reduce using rule 87
	L_integ        reduce using rule 87
	L_quoted       reduce using rule 87
	L_ident        reduce using rule 87

	ListStm        goto state 147

State 141

	Type -> '(' ListType ')' '->' BaseType .            (rule 65)

	')'            reduce using rule 65
	','            reduce using rule 65
	'->'           reduce using rule 65
	';'            reduce using rule 65
	'='            reduce using rule 65
	'>'            reduce using rule 65
	'{'            reduce using rule 65


State 142

	Exp -> Exp . OpAssign Exp1                          (rule 5)
	ArrayDec -> 'val' Ident '=' 'Array' '(' Exp ',' Exp . ')' ';'    (rule 108)

	')'            shift, and enter state 146
	'*='           shift, and enter state 83
	'+='           shift, and enter state 84
	'-='           shift, and enter state 85
	'/='           shift, and enter state 86
	'='            shift, and enter state 88

	OpAssign       goto state 82

State 143

	Exp -> Exp OpAssign Exp1 .                          (rule 5)

	')'            reduce using rule 5
	'*='           reduce using rule 5
	'+='           reduce using rule 5
	','            reduce using rule 5
	'-='           reduce using rule 5
	'..'           reduce using rule 5
	'/='           reduce using rule 5
	';'            reduce using rule 5
	'='            reduce using rule 5
	'?.let'        reduce using rule 5
	']'            reduce using rule 5
	'downTo'       reduce using rule 5
	'step'         reduce using rule 5
	'until'        reduce using rule 5
	'}'            reduce using rule 5


State 144

	FunctionDec -> 'fun' Ident '(' ListArg ')' ':' Type '{' . ListStm '}'    (rule 98)

	'!'            reduce using rule 87
	'('            reduce using rule 87
	'++'           reduce using rule 87
	'-'            reduce using rule 87
	'--'           reduce using rule 87
	'Tupla'        reduce using rule 87
	'break'        reduce using rule 87
	'continue'     reduce using rule 87
	'false'        reduce using rule 87
	'for'          reduce using rule 87
	'fun'          reduce using rule 87
	'if'           reduce using rule 87
	'null'         reduce using rule 87
	'print'        reduce using rule 87
	'println'      reduce using rule 87
	'return'       reduce using rule 87
	'run'          reduce using rule 87
	'true'         reduce using rule 87
	'val'          reduce using rule 87
	'var'          reduce using rule 87
	'while'        reduce using rule 87
	'{'            reduce using rule 87
	'}'            reduce using rule 87
	L_integ        reduce using rule 87
	L_quoted       reduce using rule 87
	L_ident        reduce using rule 87

	ListStm        goto state 145

State 145

	ListStm -> ListStm . Stm                            (rule 88)
	FunctionDec -> 'fun' Ident '(' ListArg ')' ':' Type '{' ListStm . '}'    (rule 98)

	'!'            shift, and enter state 62
	'('            shift, and enter state 63
	'++'           shift, and enter state 64
	'-'            shift, and enter state 65
	'--'           shift, and enter state 66
	'Tupla'        shift, and enter state 67
	'break'        shift, and enter state 159
	'continue'     shift, and enter state 160
	'false'        shift, and enter state 68
	'for'          shift, and enter state 161
	'fun'          shift, and enter state 9
	'if'           shift, and enter state 162
	'null'         shift, and enter state 69
	'print'        shift, and enter state 163
	'println'      shift, and enter state 164
	'return'       shift, and enter state 165
	'run'          shift, and enter state 166
	'true'         shift, and enter state 70
	'val'          shift, and enter state 10
	'var'          shift, and enter state 11
	'while'        shift, and enter state 167
	'{'            shift, and enter state 71
	'}'            shift, and enter state 171
	L_integ        shift, and enter state 2
	L_quoted       shift, and enter state 72
	L_ident        shift, and enter state 13

	Integer        goto state 45
	String         goto state 46
	Ident          goto state 47
	Exp            goto state 170
	Exp1           goto state 49
	Exp2           goto state 50
	Exp3           goto state 51
	Exp4           goto state 52
	Exp5           goto state 53
	Exp6           goto state 54
	Exp7           goto state 55
	Exp8           goto state 56
	Exp9           goto state 57
	Exp10          goto state 58
	Exp11          goto state 59
	Stm            goto state 157
	Dec            goto state 158
	FunctionDec    goto state 7
	FunctionExp    goto state 60
	Lambda         goto state 61
	ArrayDec       goto state 8

State 146

	ArrayDec -> 'val' Ident '=' 'Array' '(' Exp ',' Exp ')' . ';'    (rule 108)

	';'            shift, and enter state 169


State 147

	ListStm -> ListStm . Stm                            (rule 88)
	Lambda -> '{' ListArg '->' ListStm . Exp '}'        (rule 100)
	Lambda -> '{' ListArg '->' ListStm . '}'            (rule 101)

	'!'            shift, and enter state 62
	'('            shift, and enter state 63
	'++'           shift, and enter state 64
	'-'            shift, and enter state 65
	'--'           shift, and enter state 66
	'Tupla'        shift, and enter state 67
	'break'        shift, and enter state 159
	'continue'     shift, and enter state 160
	'false'        shift, and enter state 68
	'for'          shift, and enter state 161
	'fun'          shift, and enter state 9
	'if'           shift, and enter state 162
	'null'         shift, and enter state 69
	'print'        shift, and enter state 163
	'println'      shift, and enter state 164
	'return'       shift, and enter state 165
	'run'          shift, and enter state 166
	'true'         shift, and enter state 70
	'val'          shift, and enter state 10
	'var'          shift, and enter state 11
	'while'        shift, and enter state 167
	'{'            shift, and enter state 71
	'}'            shift, and enter state 168
	L_integ        shift, and enter state 2
	L_quoted       shift, and enter state 72
	L_ident        shift, and enter state 13

	Integer        goto state 45
	String         goto state 46
	Ident          goto state 47
	Exp            goto state 156
	Exp1           goto state 49
	Exp2           goto state 50
	Exp3           goto state 51
	Exp4           goto state 52
	Exp5           goto state 53
	Exp6           goto state 54
	Exp7           goto state 55
	Exp8           goto state 56
	Exp9           goto state 57
	Exp10          goto state 58
	Exp11          goto state 59
	Stm            goto state 157
	Dec            goto state 158
	FunctionDec    goto state 7
	FunctionExp    goto state 60
	Lambda         goto state 61
	ArrayDec       goto state 8

State 148

	Exp9 -> 'Tupla' '(' ListExp ')' .                   (rule 33)

	'!='           reduce using rule 33
	'%'            reduce using rule 33
	'&&'           reduce using rule 33
	')'            reduce using rule 33
	'*'            reduce using rule 33
	'*='           reduce using rule 33
	'+'            reduce using rule 33
	'+='           reduce using rule 33
	','            reduce using rule 33
	'-'            reduce using rule 33
	'-='           reduce using rule 33
	'..'           reduce using rule 33
	'/'            reduce using rule 33
	'/='           reduce using rule 33
	':'            reduce using rule 33
	';'            reduce using rule 33
	'<'            reduce using rule 33
	'<='           reduce using rule 33
	'='            reduce using rule 33
	'=='           reduce using rule 33
	'>'            reduce using rule 33
	'>='           reduce using rule 33
	'?'            reduce using rule 33
	'?.let'        reduce using rule 33
	']'            reduce using rule 33
	'downTo'       reduce using rule 33
	'step'         reduce using rule 33
	'until'        reduce using rule 33
	'||'           reduce using rule 33
	'}'            reduce using rule 33


State 149

	Exp1 -> Exp3 '?' Exp1 ':' . Exp2                    (rule 7)

	'!'            shift, and enter state 62
	'('            shift, and enter state 63
	'++'           shift, and enter state 64
	'-'            shift, and enter state 65
	'--'           shift, and enter state 66
	'Tupla'        shift, and enter state 67
	'false'        shift, and enter state 68
	'null'         shift, and enter state 69
	'true'         shift, and enter state 70
	'{'            shift, and enter state 71
	L_integ        shift, and enter state 2
	L_quoted       shift, and enter state 72
	L_ident        shift, and enter state 13

	Integer        goto state 45
	String         goto state 46
	Ident          goto state 47
	Exp2           goto state 154
	Exp3           goto state 155
	Exp4           goto state 52
	Exp5           goto state 53
	Exp6           goto state 54
	Exp7           goto state 55
	Exp8           goto state 56
	Exp9           goto state 57
	Exp10          goto state 58
	Exp11          goto state 59
	FunctionExp    goto state 60
	Lambda         goto state 61

State 150

	FunctionExp -> Ident '(' ListExp ')' .              (rule 99)

	'!='           reduce using rule 99
	'%'            reduce using rule 99
	'&&'           reduce using rule 99
	')'            reduce using rule 99
	'*'            reduce using rule 99
	'*='           reduce using rule 99
	'+'            reduce using rule 99
	'+='           reduce using rule 99
	','            reduce using rule 99
	'-'            reduce using rule 99
	'-='           reduce using rule 99
	'..'           reduce using rule 99
	'/'            reduce using rule 99
	'/='           reduce using rule 99
	':'            reduce using rule 99
	';'            reduce using rule 99
	'<'            reduce using rule 99
	'<='           reduce using rule 99
	'='            reduce using rule 99
	'=='           reduce using rule 99
	'>'            reduce using rule 99
	'>='           reduce using rule 99
	'?'            reduce using rule 99
	'?.let'        reduce using rule 99
	']'            reduce using rule 99
	'downTo'       reduce using rule 99
	'step'         reduce using rule 99
	'until'        reduce using rule 99
	'||'           reduce using rule 99
	'}'            reduce using rule 99


State 151

	ListExp -> Exp ',' . ListExp                        (rule 49)

	'!'            shift, and enter state 62
	'('            shift, and enter state 63
	')'            reduce using rule 47
	'++'           shift, and enter state 64
	'-'            shift, and enter state 65
	'--'           shift, and enter state 66
	'Tupla'        shift, and enter state 67
	'false'        shift, and enter state 68
	'null'         shift, and enter state 69
	'true'         shift, and enter state 70
	'{'            shift, and enter state 71
	L_integ        shift, and enter state 2
	L_quoted       shift, and enter state 72
	L_ident        shift, and enter state 13

	Integer        goto state 45
	String         goto state 46
	Ident          goto state 47
	Exp            goto state 121
	Exp1           goto state 49
	Exp2           goto state 50
	Exp3           goto state 51
	Exp4           goto state 52
	Exp5           goto state 53
	Exp6           goto state 54
	Exp7           goto state 55
	Exp8           goto state 56
	Exp9           goto state 57
	Exp10          goto state 58
	Exp11          goto state 59
	ListExp        goto state 153
	FunctionExp    goto state 60
	Lambda         goto state 61

State 152

	DimExp -> '[' Exp ']' .                             (rule 50)

	'!='           reduce using rule 50
	'%'            reduce using rule 50
	'&&'           reduce using rule 50
	')'            reduce using rule 50
	'*'            reduce using rule 50
	'*='           reduce using rule 50
	'+'            reduce using rule 50
	'+='           reduce using rule 50
	','            reduce using rule 50
	'-'            reduce using rule 50
	'-='           reduce using rule 50
	'..'           reduce using rule 50
	'/'            reduce using rule 50
	'/='           reduce using rule 50
	':'            reduce using rule 50
	';'            reduce using rule 50
	'<'            reduce using rule 50
	'<='           reduce using rule 50
	'='            reduce using rule 50
	'=='           reduce using rule 50
	'>'            reduce using rule 50
	'>='           reduce using rule 50
	'?'            reduce using rule 50
	'?.let'        reduce using rule 50
	'['            reduce using rule 50
	']'            reduce using rule 50
	'downTo'       reduce using rule 50
	'step'         reduce using rule 50
	'until'        reduce using rule 50
	'||'           reduce using rule 50
	'}'            reduce using rule 50


State 153

	ListExp -> Exp ',' ListExp .                        (rule 49)

	')'            reduce using rule 49


State 154

	Exp1 -> Exp3 '?' Exp1 ':' Exp2 .                    (rule 7)
	Exp2 -> Exp2 . '||' Exp3                            (rule 9)

	')'            reduce using rule 7
	'*='           reduce using rule 7
	'+='           reduce using rule 7
	','            reduce using rule 7
	'-='           reduce using rule 7
	'..'           reduce using rule 7
	'/='           reduce using rule 7
	':'            reduce using rule 7
	';'            reduce using rule 7
	'='            reduce using rule 7
	'?.let'        reduce using rule 7
	']'            reduce using rule 7
	'downTo'       reduce using rule 7
	'step'         reduce using rule 7
	'until'        reduce using rule 7
	'||'           shift, and enter state 114
	'}'            reduce using rule 7


State 155

	Exp2 -> Exp3 .                                      (rule 10)
	Exp3 -> Exp3 . '&&' Exp4                            (rule 11)

	'&&'           shift, and enter state 112
	')'            reduce using rule 10
	'*='           reduce using rule 10
	'+='           reduce using rule 10
	','            reduce using rule 10
	'-='           reduce using rule 10
	'..'           reduce using rule 10
	'/='           reduce using rule 10
	':'            reduce using rule 10
	';'            reduce using rule 10
	'='            reduce using rule 10
	'?.let'        reduce using rule 10
	']'            reduce using rule 10
	'downTo'       reduce using rule 10
	'step'         reduce using rule 10
	'until'        reduce using rule 10
	'||'           reduce using rule 10
	'}'            reduce using rule 10


State 156

	Exp -> Exp . OpAssign Exp1                          (rule 5)
	Stm -> Exp . ';'                                    (rule 74)
	Stm -> Exp . '?.let' '{' Stm '}'                    (rule 86)
	Lambda -> '{' ListArg '->' ListStm Exp . '}'        (rule 100)

	'*='           shift, and enter state 83
	'+='           shift, and enter state 84
	'-='           shift, and enter state 85
	'/='           shift, and enter state 86
	';'            shift, and enter state 172
	'='            shift, and enter state 88
	'?.let'        shift, and enter state 173
	'}'            shift, and enter state 184

	OpAssign       goto state 82

State 157

	ListStm -> ListStm Stm .                            (rule 88)

	'!'            reduce using rule 88
	'('            reduce using rule 88
	'++'           reduce using rule 88
	'-'            reduce using rule 88
	'--'           reduce using rule 88
	'Tupla'        reduce using rule 88
	'break'        reduce using rule 88
	'continue'     reduce using rule 88
	'false'        reduce using rule 88
	'for'          reduce using rule 88
	'fun'          reduce using rule 88
	'if'           reduce using rule 88
	'null'         reduce using rule 88
	'print'        reduce using rule 88
	'println'      reduce using rule 88
	'return'       reduce using rule 88
	'run'          reduce using rule 88
	'true'         reduce using rule 88
	'val'          reduce using rule 88
	'var'          reduce using rule 88
	'while'        reduce using rule 88
	'{'            reduce using rule 88
	'}'            reduce using rule 88
	L_integ        reduce using rule 88
	L_quoted       reduce using rule 88
	L_ident        reduce using rule 88


State 158

	Stm -> Dec .                                        (rule 73)

	'!'            reduce using rule 73
	'('            reduce using rule 73
	'++'           reduce using rule 73
	'-'            reduce using rule 73
	'--'           reduce using rule 73
	'Tupla'        reduce using rule 73
	'break'        reduce using rule 73
	'continue'     reduce using rule 73
	'false'        reduce using rule 73
	'for'          reduce using rule 73
	'fun'          reduce using rule 73
	'if'           reduce using rule 73
	'null'         reduce using rule 73
	'print'        reduce using rule 73
	'println'      reduce using rule 73
	'return'       reduce using rule 73
	'run'          reduce using rule 73
	'true'         reduce using rule 73
	'val'          reduce using rule 73
	'var'          reduce using rule 73
	'while'        reduce using rule 73
	'{'            reduce using rule 73
	'}'            reduce using rule 73
	L_integ        reduce using rule 73
	L_quoted       reduce using rule 73
	L_ident        reduce using rule 73


State 159

	Stm -> 'break' . ';'                                (rule 78)

	';'            shift, and enter state 183


State 160

	Stm -> 'continue' . ';'                             (rule 79)

	';'            shift, and enter state 182


State 161

	Stm -> 'for' . '(' Ident 'in' Iterable ')' '{' ListStm '}'    (rule 76)

	'('            shift, and enter state 181


State 162

	Stm -> 'if' . '(' Exp ')' '{' ListStm '}'           (rule 82)
	Stm -> 'if' . '(' Exp ')' '{' ListStm '}' 'else' '{' ListStm '}'    (rule 83)

	'('            shift, and enter state 180


State 163

	Stm -> 'print' . '(' Exp ')' ';'                    (rule 84)

	'('            shift, and enter state 179


State 164

	Stm -> 'println' . '(' Exp ')' ';'                  (rule 85)

	'('            shift, and enter state 178


State 165

	Stm -> 'return' . Exp ';'                           (rule 80)
	Stm -> 'return' . ';'                               (rule 81)

	'!'            shift, and enter state 62
	'('            shift, and enter state 63
	'++'           shift, and enter state 64
	'-'            shift, and enter state 65
	'--'           shift, and enter state 66
	';'            shift, and enter state 177
	'Tupla'        shift, and enter state 67
	'false'        shift, and enter state 68
	'null'         shift, and enter state 69
	'true'         shift, and enter state 70
	'{'            shift, and enter state 71
	L_integ        shift, and enter state 2
	L_quoted       shift, and enter state 72
	L_ident        shift, and enter state 13

	Integer        goto state 45
	String         goto state 46
	Ident          goto state 47
	Exp            goto state 176
	Exp1           goto state 49
	Exp2           goto state 50
	Exp3           goto state 51
	Exp4           goto state 52
	Exp5           goto state 53
	Exp6           goto state 54
	Exp7           goto state 55
	Exp8           goto state 56
	Exp9           goto state 57
	Exp10          goto state 58
	Exp11          goto state 59
	FunctionExp    goto state 60
	Lambda         goto state 61

State 166

	Stm -> 'run' . '{' ListStm '}'                      (rule 75)

	'{'            shift, and enter state 175


State 167

	Stm -> 'while' . '(' Exp ')' '{' ListStm '}'        (rule 77)

	'('            shift, and enter state 174


State 168

	Lambda -> '{' ListArg '->' ListStm '}' .            (rule 101)

	'!='           reduce using rule 101
	'%'            reduce using rule 101
	'&&'           reduce using rule 101
	')'            reduce using rule 101
	'*'            reduce using rule 101
	'*='           reduce using rule 101
	'+'            reduce using rule 101
	'+='           reduce using rule 101
	','            reduce using rule 101
	'-'            reduce using rule 101
	'-='           reduce using rule 101
	'..'           reduce using rule 101
	'/'            reduce using rule 101
	'/='           reduce using rule 101
	':'            reduce using rule 101
	';'            reduce using rule 101
	'<'            reduce using rule 101
	'<='           reduce using rule 101
	'='            reduce using rule 101
	'=='           reduce using rule 101
	'>'            reduce using rule 101
	'>='           reduce using rule 101
	'?'            reduce using rule 101
	'?.let'        reduce using rule 101
	']'            reduce using rule 101
	'downTo'       reduce using rule 101
	'step'         reduce using rule 101
	'until'        reduce using rule 101
	'||'           reduce using rule 101
	'}'            reduce using rule 101


State 169

	ArrayDec -> 'val' Ident '=' 'Array' '(' Exp ',' Exp ')' ';' .    (rule 108)

	'!'            reduce using rule 108
	'('            reduce using rule 108
	'++'           reduce using rule 108
	'-'            reduce using rule 108
	'--'           reduce using rule 108
	'Tupla'        reduce using rule 108
	'break'        reduce using rule 108
	'continue'     reduce using rule 108
	'false'        reduce using rule 108
	'for'          reduce using rule 108
	'fun'          reduce using rule 108
	'if'           reduce using rule 108
	'null'         reduce using rule 108
	'print'        reduce using rule 108
	'println'      reduce using rule 108
	'return'       reduce using rule 108
	'run'          reduce using rule 108
	'true'         reduce using rule 108
	'val'          reduce using rule 108
	'var'          reduce using rule 108
	'while'        reduce using rule 108
	'{'            reduce using rule 108
	'}'            reduce using rule 108
	L_integ        reduce using rule 108
	L_quoted       reduce using rule 108
	L_ident        reduce using rule 108
	%eof           reduce using rule 108


State 170

	Exp -> Exp . OpAssign Exp1                          (rule 5)
	Stm -> Exp . ';'                                    (rule 74)
	Stm -> Exp . '?.let' '{' Stm '}'                    (rule 86)

	'*='           shift, and enter state 83
	'+='           shift, and enter state 84
	'-='           shift, and enter state 85
	'/='           shift, and enter state 86
	';'            shift, and enter state 172
	'='            shift, and enter state 88
	'?.let'        shift, and enter state 173

	OpAssign       goto state 82

State 171

	FunctionDec -> 'fun' Ident '(' ListArg ')' ':' Type '{' ListStm '}' .    (rule 98)

	'!'            reduce using rule 98
	'('            reduce using rule 98
	'++'           reduce using rule 98
	'-'            reduce using rule 98
	'--'           reduce using rule 98
	'Tupla'        reduce using rule 98
	'break'        reduce using rule 98
	'continue'     reduce using rule 98
	'false'        reduce using rule 98
	'for'          reduce using rule 98
	'fun'          reduce using rule 98
	'if'           reduce using rule 98
	'null'         reduce using rule 98
	'print'        reduce using rule 98
	'println'      reduce using rule 98
	'return'       reduce using rule 98
	'run'          reduce using rule 98
	'true'         reduce using rule 98
	'val'          reduce using rule 98
	'var'          reduce using rule 98
	'while'        reduce using rule 98
	'{'            reduce using rule 98
	'}'            reduce using rule 98
	L_integ        reduce using rule 98
	L_quoted       reduce using rule 98
	L_ident        reduce using rule 98
	%eof           reduce using rule 98


State 172

	Stm -> Exp ';' .                                    (rule 74)

	'!'            reduce using rule 74
	'('            reduce using rule 74
	'++'           reduce using rule 74
	'-'            reduce using rule 74
	'--'           reduce using rule 74
	'Tupla'        reduce using rule 74
	'break'        reduce using rule 74
	'continue'     reduce using rule 74
	'false'        reduce using rule 74
	'for'          reduce using rule 74
	'fun'          reduce using rule 74
	'if'           reduce using rule 74
	'null'         reduce using rule 74
	'print'        reduce using rule 74
	'println'      reduce using rule 74
	'return'       reduce using rule 74
	'run'          reduce using rule 74
	'true'         reduce using rule 74
	'val'          reduce using rule 74
	'var'          reduce using rule 74
	'while'        reduce using rule 74
	'{'            reduce using rule 74
	'}'            reduce using rule 74
	L_integ        reduce using rule 74
	L_quoted       reduce using rule 74
	L_ident        reduce using rule 74


State 173

	Stm -> Exp '?.let' . '{' Stm '}'                    (rule 86)

	'{'            shift, and enter state 192


State 174

	Stm -> 'while' '(' . Exp ')' '{' ListStm '}'        (rule 77)

	'!'            shift, and enter state 62
	'('            shift, and enter state 63
	'++'           shift, and enter state 64
	'-'            shift, and enter state 65
	'--'           shift, and enter state 66
	'Tupla'        shift, and enter state 67
	'false'        shift, and enter state 68
	'null'         shift, and enter state 69
	'true'         shift, and enter state 70
	'{'            shift, and enter state 71
	L_integ        shift, and enter state 2
	L_quoted       shift, and enter state 72
	L_ident        shift, and enter state 13

	Integer        goto state 45
	String         goto state 46
	Ident          goto state 47
	Exp            goto state 191
	Exp1           goto state 49
	Exp2           goto state 50
	Exp3           goto state 51
	Exp4           goto state 52
	Exp5           goto state 53
	Exp6           goto state 54
	Exp7           goto state 55
	Exp8           goto state 56
	Exp9           goto state 57
	Exp10          goto state 58
	Exp11          goto state 59
	FunctionExp    goto state 60
	Lambda         goto state 61

State 175

	Stm -> 'run' '{' . ListStm '}'                      (rule 75)

	'!'            reduce using rule 87
	'('            reduce using rule 87
	'++'           reduce using rule 87
	'-'            reduce using rule 87
	'--'           reduce using rule 87
	'Tupla'        reduce using rule 87
	'break'        reduce using rule 87
	'continue'     reduce using rule 87
	'false'        reduce using rule 87
	'for'          reduce using rule 87
	'fun'          reduce using rule 87
	'if'           reduce using rule 87
	'null'         reduce using rule 87
	'print'        reduce using rule 87
	'println'      reduce using rule 87
	'return'       reduce using rule 87
	'run'          reduce using rule 87
	'true'         reduce using rule 87
	'val'          reduce using rule 87
	'var'          reduce using rule 87
	'while'        reduce using rule 87
	'{'            reduce using rule 87
	'}'            reduce using rule 87
	L_integ        reduce using rule 87
	L_quoted       reduce using rule 87
	L_ident        reduce using rule 87

	ListStm        goto state 190

State 176

	Exp -> Exp . OpAssign Exp1                          (rule 5)
	Stm -> 'return' Exp . ';'                           (rule 80)

	'*='           shift, and enter state 83
	'+='           shift, and enter state 84
	'-='           shift, and enter state 85
	'/='           shift, and enter state 86
	';'            shift, and enter state 189
	'='            shift, and enter state 88

	OpAssign       goto state 82

State 177

	Stm -> 'return' ';' .                               (rule 81)

	'!'            reduce using rule 81
	'('            reduce using rule 81
	'++'           reduce using rule 81
	'-'            reduce using rule 81
	'--'           reduce using rule 81
	'Tupla'        reduce using rule 81
	'break'        reduce using rule 81
	'continue'     reduce using rule 81
	'false'        reduce using rule 81
	'for'          reduce using rule 81
	'fun'          reduce using rule 81
	'if'           reduce using rule 81
	'null'         reduce using rule 81
	'print'        reduce using rule 81
	'println'      reduce using rule 81
	'return'       reduce using rule 81
	'run'          reduce using rule 81
	'true'         reduce using rule 81
	'val'          reduce using rule 81
	'var'          reduce using rule 81
	'while'        reduce using rule 81
	'{'            reduce using rule 81
	'}'            reduce using rule 81
	L_integ        reduce using rule 81
	L_quoted       reduce using rule 81
	L_ident        reduce using rule 81


State 178

	Stm -> 'println' '(' . Exp ')' ';'                  (rule 85)

	'!'            shift, and enter state 62
	'('            shift, and enter state 63
	'++'           shift, and enter state 64
	'-'            shift, and enter state 65
	'--'           shift, and enter state 66
	'Tupla'        shift, and enter state 67
	'false'        shift, and enter state 68
	'null'         shift, and enter state 69
	'true'         shift, and enter state 70
	'{'            shift, and enter state 71
	L_integ        shift, and enter state 2
	L_quoted       shift, and enter state 72
	L_ident        shift, and enter state 13

	Integer        goto state 45
	String         goto state 46
	Ident          goto state 47
	Exp            goto state 188
	Exp1           goto state 49
	Exp2           goto state 50
	Exp3           goto state 51
	Exp4           goto state 52
	Exp5           goto state 53
	Exp6           goto state 54
	Exp7           goto state 55
	Exp8           goto state 56
	Exp9           goto state 57
	Exp10          goto state 58
	Exp11          goto state 59
	FunctionExp    goto state 60
	Lambda         goto state 61

State 179

	Stm -> 'print' '(' . Exp ')' ';'                    (rule 84)

	'!'            shift, and enter state 62
	'('            shift, and enter state 63
	'++'           shift, and enter state 64
	'-'            shift, and enter state 65
	'--'           shift, and enter state 66
	'Tupla'        shift, and enter state 67
	'false'        shift, and enter state 68
	'null'         shift, and enter state 69
	'true'         shift, and enter state 70
	'{'            shift, and enter state 71
	L_integ        shift, and enter state 2
	L_quoted       shift, and enter state 72
	L_ident        shift, and enter state 13

	Integer        goto state 45
	String         goto state 46
	Ident          goto state 47
	Exp            goto state 187
	Exp1           goto state 49
	Exp2           goto state 50
	Exp3           goto state 51
	Exp4           goto state 52
	Exp5           goto state 53
	Exp6           goto state 54
	Exp7           goto state 55
	Exp8           goto state 56
	Exp9           goto state 57
	Exp10          goto state 58
	Exp11          goto state 59
	FunctionExp    goto state 60
	Lambda         goto state 61

State 180

	Stm -> 'if' '(' . Exp ')' '{' ListStm '}'           (rule 82)
	Stm -> 'if' '(' . Exp ')' '{' ListStm '}' 'else' '{' ListStm '}'    (rule 83)

	'!'            shift, and enter state 62
	'('            shift, and enter state 63
	'++'           shift, and enter state 64
	'-'            shift, and enter state 65
	'--'           shift, and enter state 66
	'Tupla'        shift, and enter state 67
	'false'        shift, and enter state 68
	'null'         shift, and enter state 69
	'true'         shift, and enter state 70
	'{'            shift, and enter state 71
	L_integ        shift, and enter state 2
	L_quoted       shift, and enter state 72
	L_ident        shift, and enter state 13

	Integer        goto state 45
	String         goto state 46
	Ident          goto state 47
	Exp            goto state 186
	Exp1           goto state 49
	Exp2           goto state 50
	Exp3           goto state 51
	Exp4           goto state 52
	Exp5           goto state 53
	Exp6           goto state 54
	Exp7           goto state 55
	Exp8           goto state 56
	Exp9           goto state 57
	Exp10          goto state 58
	Exp11          goto state 59
	FunctionExp    goto state 60
	Lambda         goto state 61

State 181

	Stm -> 'for' '(' . Ident 'in' Iterable ')' '{' ListStm '}'    (rule 76)

	L_ident        shift, and enter state 13

	Ident          goto state 185

State 182

	Stm -> 'continue' ';' .                             (rule 79)

	'!'            reduce using rule 79
	'('            reduce using rule 79
	'++'           reduce using rule 79
	'-'            reduce using rule 79
	'--'           reduce using rule 79
	'Tupla'        reduce using rule 79
	'break'        reduce using rule 79
	'continue'     reduce using rule 79
	'false'        reduce using rule 79
	'for'          reduce using rule 79
	'fun'          reduce using rule 79
	'if'           reduce using rule 79
	'null'         reduce using rule 79
	'print'        reduce using rule 79
	'println'      reduce using rule 79
	'return'       reduce using rule 79
	'run'          reduce using rule 79
	'true'         reduce using rule 79
	'val'          reduce using rule 79
	'var'          reduce using rule 79
	'while'        reduce using rule 79
	'{'            reduce using rule 79
	'}'            reduce using rule 79
	L_integ        reduce using rule 79
	L_quoted       reduce using rule 79
	L_ident        reduce using rule 79


State 183

	Stm -> 'break' ';' .                                (rule 78)

	'!'            reduce using rule 78
	'('            reduce using rule 78
	'++'           reduce using rule 78
	'-'            reduce using rule 78
	'--'           reduce using rule 78
	'Tupla'        reduce using rule 78
	'break'        reduce using rule 78
	'continue'     reduce using rule 78
	'false'        reduce using rule 78
	'for'          reduce using rule 78
	'fun'          reduce using rule 78
	'if'           reduce using rule 78
	'null'         reduce using rule 78
	'print'        reduce using rule 78
	'println'      reduce using rule 78
	'return'       reduce using rule 78
	'run'          reduce using rule 78
	'true'         reduce using rule 78
	'val'          reduce using rule 78
	'var'          reduce using rule 78
	'while'        reduce using rule 78
	'{'            reduce using rule 78
	'}'            reduce using rule 78
	L_integ        reduce using rule 78
	L_quoted       reduce using rule 78
	L_ident        reduce using rule 78


State 184

	Lambda -> '{' ListArg '->' ListStm Exp '}' .        (rule 100)

	'!='           reduce using rule 100
	'%'            reduce using rule 100
	'&&'           reduce using rule 100
	')'            reduce using rule 100
	'*'            reduce using rule 100
	'*='           reduce using rule 100
	'+'            reduce using rule 100
	'+='           reduce using rule 100
	','            reduce using rule 100
	'-'            reduce using rule 100
	'-='           reduce using rule 100
	'..'           reduce using rule 100
	'/'            reduce using rule 100
	'/='           reduce using rule 100
	':'            reduce using rule 100
	';'            reduce using rule 100
	'<'            reduce using rule 100
	'<='           reduce using rule 100
	'='            reduce using rule 100
	'=='           reduce using rule 100
	'>'            reduce using rule 100
	'>='           reduce using rule 100
	'?'            reduce using rule 100
	'?.let'        reduce using rule 100
	']'            reduce using rule 100
	'downTo'       reduce using rule 100
	'step'         reduce using rule 100
	'until'        reduce using rule 100
	'||'           reduce using rule 100
	'}'            reduce using rule 100


State 185

	Stm -> 'for' '(' Ident . 'in' Iterable ')' '{' ListStm '}'    (rule 76)

	'in'           shift, and enter state 199


State 186

	Exp -> Exp . OpAssign Exp1                          (rule 5)
	Stm -> 'if' '(' Exp . ')' '{' ListStm '}'           (rule 82)
	Stm -> 'if' '(' Exp . ')' '{' ListStm '}' 'else' '{' ListStm '}'    (rule 83)

	')'            shift, and enter state 198
	'*='           shift, and enter state 83
	'+='           shift, and enter state 84
	'-='           shift, and enter state 85
	'/='           shift, and enter state 86
	'='            shift, and enter state 88

	OpAssign       goto state 82

State 187

	Exp -> Exp . OpAssign Exp1                          (rule 5)
	Stm -> 'print' '(' Exp . ')' ';'                    (rule 84)

	')'            shift, and enter state 197
	'*='           shift, and enter state 83
	'+='           shift, and enter state 84
	'-='           shift, and enter state 85
	'/='           shift, and enter state 86
	'='            shift, and enter state 88

	OpAssign       goto state 82

State 188

	Exp -> Exp . OpAssign Exp1                          (rule 5)
	Stm -> 'println' '(' Exp . ')' ';'                  (rule 85)

	')'            shift, and enter state 196
	'*='           shift, and enter state 83
	'+='           shift, and enter state 84
	'-='           shift, and enter state 85
	'/='           shift, and enter state 86
	'='            shift, and enter state 88

	OpAssign       goto state 82

State 189

	Stm -> 'return' Exp ';' .                           (rule 80)

	'!'            reduce using rule 80
	'('            reduce using rule 80
	'++'           reduce using rule 80
	'-'            reduce using rule 80
	'--'           reduce using rule 80
	'Tupla'        reduce using rule 80
	'break'        reduce using rule 80
	'continue'     reduce using rule 80
	'false'        reduce using rule 80
	'for'          reduce using rule 80
	'fun'          reduce using rule 80
	'if'           reduce using rule 80
	'null'         reduce using rule 80
	'print'        reduce using rule 80
	'println'      reduce using rule 80
	'return'       reduce using rule 80
	'run'          reduce using rule 80
	'true'         reduce using rule 80
	'val'          reduce using rule 80
	'var'          reduce using rule 80
	'while'        reduce using rule 80
	'{'            reduce using rule 80
	'}'            reduce using rule 80
	L_integ        reduce using rule 80
	L_quoted       reduce using rule 80
	L_ident        reduce using rule 80


State 190

	Stm -> 'run' '{' ListStm . '}'                      (rule 75)
	ListStm -> ListStm . Stm                            (rule 88)

	'!'            shift, and enter state 62
	'('            shift, and enter state 63
	'++'           shift, and enter state 64
	'-'            shift, and enter state 65
	'--'           shift, and enter state 66
	'Tupla'        shift, and enter state 67
	'break'        shift, and enter state 159
	'continue'     shift, and enter state 160
	'false'        shift, and enter state 68
	'for'          shift, and enter state 161
	'fun'          shift, and enter state 9
	'if'           shift, and enter state 162
	'null'         shift, and enter state 69
	'print'        shift, and enter state 163
	'println'      shift, and enter state 164
	'return'       shift, and enter state 165
	'run'          shift, and enter state 166
	'true'         shift, and enter state 70
	'val'          shift, and enter state 10
	'var'          shift, and enter state 11
	'while'        shift, and enter state 167
	'{'            shift, and enter state 71
	'}'            shift, and enter state 195
	L_integ        shift, and enter state 2
	L_quoted       shift, and enter state 72
	L_ident        shift, and enter state 13

	Integer        goto state 45
	String         goto state 46
	Ident          goto state 47
	Exp            goto state 170
	Exp1           goto state 49
	Exp2           goto state 50
	Exp3           goto state 51
	Exp4           goto state 52
	Exp5           goto state 53
	Exp6           goto state 54
	Exp7           goto state 55
	Exp8           goto state 56
	Exp9           goto state 57
	Exp10          goto state 58
	Exp11          goto state 59
	Stm            goto state 157
	Dec            goto state 158
	FunctionDec    goto state 7
	FunctionExp    goto state 60
	Lambda         goto state 61
	ArrayDec       goto state 8

State 191

	Exp -> Exp . OpAssign Exp1                          (rule 5)
	Stm -> 'while' '(' Exp . ')' '{' ListStm '}'        (rule 77)

	')'            shift, and enter state 194
	'*='           shift, and enter state 83
	'+='           shift, and enter state 84
	'-='           shift, and enter state 85
	'/='           shift, and enter state 86
	'='            shift, and enter state 88

	OpAssign       goto state 82

State 192

	Stm -> Exp '?.let' '{' . Stm '}'                    (rule 86)

	'!'            shift, and enter state 62
	'('            shift, and enter state 63
	'++'           shift, and enter state 64
	'-'            shift, and enter state 65
	'--'           shift, and enter state 66
	'Tupla'        shift, and enter state 67
	'break'        shift, and enter state 159
	'continue'     shift, and enter state 160
	'false'        shift, and enter state 68
	'for'          shift, and enter state 161
	'fun'          shift, and enter state 9
	'if'           shift, and enter state 162
	'null'         shift, and enter state 69
	'print'        shift, and enter state 163
	'println'      shift, and enter state 164
	'return'       shift, and enter state 165
	'run'          shift, and enter state 166
	'true'         shift, and enter state 70
	'val'          shift, and enter state 10
	'var'          shift, and enter state 11
	'while'        shift, and enter state 167
	'{'            shift, and enter state 71
	L_integ        shift, and enter state 2
	L_quoted       shift, and enter state 72
	L_ident        shift, and enter state 13

	Integer        goto state 45
	String         goto state 46
	Ident          goto state 47
	Exp            goto state 170
	Exp1           goto state 49
	Exp2           goto state 50
	Exp3           goto state 51
	Exp4           goto state 52
	Exp5           goto state 53
	Exp6           goto state 54
	Exp7           goto state 55
	Exp8           goto state 56
	Exp9           goto state 57
	Exp10          goto state 58
	Exp11          goto state 59
	Stm            goto state 193
	Dec            goto state 158
	FunctionDec    goto state 7
	FunctionExp    goto state 60
	Lambda         goto state 61
	ArrayDec       goto state 8

State 193

	Stm -> Exp '?.let' '{' Stm . '}'                    (rule 86)

	'}'            shift, and enter state 207


State 194

	Stm -> 'while' '(' Exp ')' . '{' ListStm '}'        (rule 77)

	'{'            shift, and enter state 206


State 195

	Stm -> 'run' '{' ListStm '}' .                      (rule 75)

	'!'            reduce using rule 75
	'('            reduce using rule 75
	'++'           reduce using rule 75
	'-'            reduce using rule 75
	'--'           reduce using rule 75
	'Tupla'        reduce using rule 75
	'break'        reduce using rule 75
	'continue'     reduce using rule 75
	'false'        reduce using rule 75
	'for'          reduce using rule 75
	'fun'          reduce using rule 75
	'if'           reduce using rule 75
	'null'         reduce using rule 75
	'print'        reduce using rule 75
	'println'      reduce using rule 75
	'return'       reduce using rule 75
	'run'          reduce using rule 75
	'true'         reduce using rule 75
	'val'          reduce using rule 75
	'var'          reduce using rule 75
	'while'        reduce using rule 75
	'{'            reduce using rule 75
	'}'            reduce using rule 75
	L_integ        reduce using rule 75
	L_quoted       reduce using rule 75
	L_ident        reduce using rule 75


State 196

	Stm -> 'println' '(' Exp ')' . ';'                  (rule 85)

	';'            shift, and enter state 205


State 197

	Stm -> 'print' '(' Exp ')' . ';'                    (rule 84)

	';'            shift, and enter state 204


State 198

	Stm -> 'if' '(' Exp ')' . '{' ListStm '}'           (rule 82)
	Stm -> 'if' '(' Exp ')' . '{' ListStm '}' 'else' '{' ListStm '}'    (rule 83)

	'{'            shift, and enter state 203


State 199

	Stm -> 'for' '(' Ident 'in' . Iterable ')' '{' ListStm '}'    (rule 76)

	'!'            shift, and enter state 62
	'('            shift, and enter state 63
	'++'           shift, and enter state 64
	'-'            shift, and enter state 65
	'--'           shift, and enter state 66
	'Tupla'        shift, and enter state 67
	'false'        shift, and enter state 68
	'null'         shift, and enter state 69
	'true'         shift, and enter state 70
	'{'            shift, and enter state 71
	L_integ        shift, and enter state 2
	L_quoted       shift, and enter state 72
	L_ident        shift, and enter state 13

	Integer        goto state 45
	String         goto state 46
	Ident          goto state 200
	Exp            goto state 201
	Exp1           goto state 49
	Exp2           goto state 50
	Exp3           goto state 51
	Exp4           goto state 52
	Exp5           goto state 53
	Exp6           goto state 54
	Exp7           goto state 55
	Exp8           goto state 56
	Exp9           goto state 57
	Exp10          goto state 58
	Exp11          goto state 59
	FunctionExp    goto state 60
	Lambda         goto state 61
	Iterable       goto state 202

State 200

	Exp9 -> Ident . ListDimExp                          (rule 40)
	Exp11 -> Ident .                                    (rule 45)
	FunctionExp -> Ident . '(' ListExp ')'              (rule 99)
	Iterable -> Ident .                                 (rule 102)

	'!!'           reduce using rule 45
	'!='           reduce using rule 45
	'%'            reduce using rule 45
	'&&'           reduce using rule 45
	'('            shift, and enter state 118
	')'            reduce using rule 102
	'*'            reduce using rule 45
	'*='           reduce using rule 45
	'+'            reduce using rule 45
	'+='           reduce using rule 45
	'-'            reduce using rule 45
	'-='           reduce using rule 45
	'..'           reduce using rule 45
	'/'            reduce using rule 45
	'/='           reduce using rule 45
	'<'            reduce using rule 45
	'<='           reduce using rule 45
	'='            reduce using rule 45
	'=='           reduce using rule 45
	'>'            reduce using rule 45
	'>='           reduce using rule 45
	'?'            reduce using rule 45
	'['            shift, and enter state 119
	'downTo'       reduce using rule 45
	'until'        reduce using rule 45
	'||'           reduce using rule 45

	DimExp         goto state 116
	ListDimExp     goto state 117

State 201

	Exp -> Exp . OpAssign Exp1                          (rule 5)
	Iterable -> Exp . '..' Exp                          (rule 103)
	Iterable -> Exp . 'until' Exp                       (rule 104)
	Iterable -> Exp . 'downTo' Exp                      (rule 105)
	Iterable -> Exp . 'until' Exp 'step' Exp            (rule 106)
	Iterable -> Exp . 'downTo' Exp 'step' Exp           (rule 107)

	'*='           shift, and enter state 83
	'+='           shift, and enter state 84
	'-='           shift, and enter state 85
	'..'           shift, and enter state 211
	'/='           shift, and enter state 86
	'='            shift, and enter state 88
	'downTo'       shift, and enter state 212
	'until'        shift, and enter state 213

	OpAssign       goto state 82

State 202

	Stm -> 'for' '(' Ident 'in' Iterable . ')' '{' ListStm '}'    (rule 76)

	')'            shift, and enter state 210


State 203

	Stm -> 'if' '(' Exp ')' '{' . ListStm '}'           (rule 82)
	Stm -> 'if' '(' Exp ')' '{' . ListStm '}' 'else' '{' ListStm '}'    (rule 83)

	'!'            reduce using rule 87
	'('            reduce using rule 87
	'++'           reduce using rule 87
	'-'            reduce using rule 87
	'--'           reduce using rule 87
	'Tupla'        reduce using rule 87
	'break'        reduce using rule 87
	'continue'     reduce using rule 87
	'false'        reduce using rule 87
	'for'          reduce using rule 87
	'fun'          reduce using rule 87
	'if'           reduce using rule 87
	'null'         reduce using rule 87
	'print'        reduce using rule 87
	'println'      reduce using rule 87
	'return'       reduce using rule 87
	'run'          reduce using rule 87
	'true'         reduce using rule 87
	'val'          reduce using rule 87
	'var'          reduce using rule 87
	'while'        reduce using rule 87
	'{'            reduce using rule 87
	'}'            reduce using rule 87
	L_integ        reduce using rule 87
	L_quoted       reduce using rule 87
	L_ident        reduce using rule 87

	ListStm        goto state 209

State 204

	Stm -> 'print' '(' Exp ')' ';' .                    (rule 84)

	'!'            reduce using rule 84
	'('            reduce using rule 84
	'++'           reduce using rule 84
	'-'            reduce using rule 84
	'--'           reduce using rule 84
	'Tupla'        reduce using rule 84
	'break'        reduce using rule 84
	'continue'     reduce using rule 84
	'false'        reduce using rule 84
	'for'          reduce using rule 84
	'fun'          reduce using rule 84
	'if'           reduce using rule 84
	'null'         reduce using rule 84
	'print'        reduce using rule 84
	'println'      reduce using rule 84
	'return'       reduce using rule 84
	'run'          reduce using rule 84
	'true'         reduce using rule 84
	'val'          reduce using rule 84
	'var'          reduce using rule 84
	'while'        reduce using rule 84
	'{'            reduce using rule 84
	'}'            reduce using rule 84
	L_integ        reduce using rule 84
	L_quoted       reduce using rule 84
	L_ident        reduce using rule 84


State 205

	Stm -> 'println' '(' Exp ')' ';' .                  (rule 85)

	'!'            reduce using rule 85
	'('            reduce using rule 85
	'++'           reduce using rule 85
	'-'            reduce using rule 85
	'--'           reduce using rule 85
	'Tupla'        reduce using rule 85
	'break'        reduce using rule 85
	'continue'     reduce using rule 85
	'false'        reduce using rule 85
	'for'          reduce using rule 85
	'fun'          reduce using rule 85
	'if'           reduce using rule 85
	'null'         reduce using rule 85
	'print'        reduce using rule 85
	'println'      reduce using rule 85
	'return'       reduce using rule 85
	'run'          reduce using rule 85
	'true'         reduce using rule 85
	'val'          reduce using rule 85
	'var'          reduce using rule 85
	'while'        reduce using rule 85
	'{'            reduce using rule 85
	'}'            reduce using rule 85
	L_integ        reduce using rule 85
	L_quoted       reduce using rule 85
	L_ident        reduce using rule 85


State 206

	Stm -> 'while' '(' Exp ')' '{' . ListStm '}'        (rule 77)

	'!'            reduce using rule 87
	'('            reduce using rule 87
	'++'           reduce using rule 87
	'-'            reduce using rule 87
	'--'           reduce using rule 87
	'Tupla'        reduce using rule 87
	'break'        reduce using rule 87
	'continue'     reduce using rule 87
	'false'        reduce using rule 87
	'for'          reduce using rule 87
	'fun'          reduce using rule 87
	'if'           reduce using rule 87
	'null'         reduce using rule 87
	'print'        reduce using rule 87
	'println'      reduce using rule 87
	'return'       reduce using rule 87
	'run'          reduce using rule 87
	'true'         reduce using rule 87
	'val'          reduce using rule 87
	'var'          reduce using rule 87
	'while'        reduce using rule 87
	'{'            reduce using rule 87
	'}'            reduce using rule 87
	L_integ        reduce using rule 87
	L_quoted       reduce using rule 87
	L_ident        reduce using rule 87

	ListStm        goto state 208

State 207

	Stm -> Exp '?.let' '{' Stm '}' .                    (rule 86)

	'!'            reduce using rule 86
	'('            reduce using rule 86
	'++'           reduce using rule 86
	'-'            reduce using rule 86
	'--'           reduce using rule 86
	'Tupla'        reduce using rule 86
	'break'        reduce using rule 86
	'continue'     reduce using rule 86
	'false'        reduce using rule 86
	'for'          reduce using rule 86
	'fun'          reduce using rule 86
	'if'           reduce using rule 86
	'null'         reduce using rule 86
	'print'        reduce using rule 86
	'println'      reduce using rule 86
	'return'       reduce using rule 86
	'run'          reduce using rule 86
	'true'         reduce using rule 86
	'val'          reduce using rule 86
	'var'          reduce using rule 86
	'while'        reduce using rule 86
	'{'            reduce using rule 86
	'}'            reduce using rule 86
	L_integ        reduce using rule 86
	L_quoted       reduce using rule 86
	L_ident        reduce using rule 86


State 208

	Stm -> 'while' '(' Exp ')' '{' ListStm . '}'        (rule 77)
	ListStm -> ListStm . Stm                            (rule 88)

	'!'            shift, and enter state 62
	'('            shift, and enter state 63
	'++'           shift, and enter state 64
	'-'            shift, and enter state 65
	'--'           shift, and enter state 66
	'Tupla'        shift, and enter state 67
	'break'        shift, and enter state 159
	'continue'     shift, and enter state 160
	'false'        shift, and enter state 68
	'for'          shift, and enter state 161
	'fun'          shift, and enter state 9
	'if'           shift, and enter state 162
	'null'         shift, and enter state 69
	'print'        shift, and enter state 163
	'println'      shift, and enter state 164
	'return'       shift, and enter state 165
	'run'          shift, and enter state 166
	'true'         shift, and enter state 70
	'val'          shift, and enter state 10
	'var'          shift, and enter state 11
	'while'        shift, and enter state 167
	'{'            shift, and enter state 71
	'}'            shift, and enter state 219
	L_integ        shift, and enter state 2
	L_quoted       shift, and enter state 72
	L_ident        shift, and enter state 13

	Integer        goto state 45
	String         goto state 46
	Ident          goto state 47
	Exp            goto state 170
	Exp1           goto state 49
	Exp2           goto state 50
	Exp3           goto state 51
	Exp4           goto state 52
	Exp5           goto state 53
	Exp6           goto state 54
	Exp7           goto state 55
	Exp8           goto state 56
	Exp9           goto state 57
	Exp10          goto state 58
	Exp11          goto state 59
	Stm            goto state 157
	Dec            goto state 158
	FunctionDec    goto state 7
	FunctionExp    goto state 60
	Lambda         goto state 61
	ArrayDec       goto state 8

State 209

	Stm -> 'if' '(' Exp ')' '{' ListStm . '}'           (rule 82)
	Stm -> 'if' '(' Exp ')' '{' ListStm . '}' 'else' '{' ListStm '}'    (rule 83)
	ListStm -> ListStm . Stm                            (rule 88)

	'!'            shift, and enter state 62
	'('            shift, and enter state 63
	'++'           shift, and enter state 64
	'-'            shift, and enter state 65
	'--'           shift, and enter state 66
	'Tupla'        shift, and enter state 67
	'break'        shift, and enter state 159
	'continue'     shift, and enter state 160
	'false'        shift, and enter state 68
	'for'          shift, and enter state 161
	'fun'          shift, and enter state 9
	'if'           shift, and enter state 162
	'null'         shift, and enter state 69
	'print'        shift, and enter state 163
	'println'      shift, and enter state 164
	'return'       shift, and enter state 165
	'run'          shift, and enter state 166
	'true'         shift, and enter state 70
	'val'          shift, and enter state 10
	'var'          shift, and enter state 11
	'while'        shift, and enter state 167
	'{'            shift, and enter state 71
	'}'            shift, and enter state 218
	L_integ        shift, and enter state 2
	L_quoted       shift, and enter state 72
	L_ident        shift, and enter state 13

	Integer        goto state 45
	String         goto state 46
	Ident          goto state 47
	Exp            goto state 170
	Exp1           goto state 49
	Exp2           goto state 50
	Exp3           goto state 51
	Exp4           goto state 52
	Exp5           goto state 53
	Exp6           goto state 54
	Exp7           goto state 55
	Exp8           goto state 56
	Exp9           goto state 57
	Exp10          goto state 58
	Exp11          goto state 59
	Stm            goto state 157
	Dec            goto state 158
	FunctionDec    goto state 7
	FunctionExp    goto state 60
	Lambda         goto state 61
	ArrayDec       goto state 8

State 210

	Stm -> 'for' '(' Ident 'in' Iterable ')' . '{' ListStm '}'    (rule 76)

	'{'            shift, and enter state 217


State 211

	Iterable -> Exp '..' . Exp                          (rule 103)

	'!'            shift, and enter state 62
	'('            shift, and enter state 63
	'++'           shift, and enter state 64
	'-'            shift, and enter state 65
	'--'           shift, and enter state 66
	'Tupla'        shift, and enter state 67
	'false'        shift, and enter state 68
	'null'         shift, and enter state 69
	'true'         shift, and enter state 70
	'{'            shift, and enter state 71
	L_integ        shift, and enter state 2
	L_quoted       shift, and enter state 72
	L_ident        shift, and enter state 13

	Integer        goto state 45
	String         goto state 46
	Ident          goto state 47
	Exp            goto state 216
	Exp1           goto state 49
	Exp2           goto state 50
	Exp3           goto state 51
	Exp4           goto state 52
	Exp5           goto state 53
	Exp6           goto state 54
	Exp7           goto state 55
	Exp8           goto state 56
	Exp9           goto state 57
	Exp10          goto state 58
	Exp11          goto state 59
	FunctionExp    goto state 60
	Lambda         goto state 61

State 212

	Iterable -> Exp 'downTo' . Exp                      (rule 105)
	Iterable -> Exp 'downTo' . Exp 'step' Exp           (rule 107)

	'!'            shift, and enter state 62
	'('            shift, and enter state 63
	'++'           shift, and enter state 64
	'-'            shift, and enter state 65
	'--'           shift, and enter state 66
	'Tupla'        shift, and enter state 67
	'false'        shift, and enter state 68
	'null'         shift, and enter state 69
	'true'         shift, and enter state 70
	'{'            shift, and enter state 71
	L_integ        shift, and enter state 2
	L_quoted       shift, and enter state 72
	L_ident        shift, and enter state 13

	Integer        goto state 45
	String         goto state 46
	Ident          goto state 47
	Exp            goto state 215
	Exp1           goto state 49
	Exp2           goto state 50
	Exp3           goto state 51
	Exp4           goto state 52
	Exp5           goto state 53
	Exp6           goto state 54
	Exp7           goto state 55
	Exp8           goto state 56
	Exp9           goto state 57
	Exp10          goto state 58
	Exp11          goto state 59
	FunctionExp    goto state 60
	Lambda         goto state 61

State 213

	Iterable -> Exp 'until' . Exp                       (rule 104)
	Iterable -> Exp 'until' . Exp 'step' Exp            (rule 106)

	'!'            shift, and enter state 62
	'('            shift, and enter state 63
	'++'           shift, and enter state 64
	'-'            shift, and enter state 65
	'--'           shift, and enter state 66
	'Tupla'        shift, and enter state 67
	'false'        shift, and enter state 68
	'null'         shift, and enter state 69
	'true'         shift, and enter state 70
	'{'            shift, and enter state 71
	L_integ        shift, and enter state 2
	L_quoted       shift, and enter state 72
	L_ident        shift, and enter state 13

	Integer        goto state 45
	String         goto state 46
	Ident          goto state 47
	Exp            goto state 214
	Exp1           goto state 49
	Exp2           goto state 50
	Exp3           goto state 51
	Exp4           goto state 52
	Exp5           goto state 53
	Exp6           goto state 54
	Exp7           goto state 55
	Exp8           goto state 56
	Exp9           goto state 57
	Exp10          goto state 58
	Exp11          goto state 59
	FunctionExp    goto state 60
	Lambda         goto state 61

State 214

	Exp -> Exp . OpAssign Exp1                          (rule 5)
	Iterable -> Exp 'until' Exp .                       (rule 104)
	Iterable -> Exp 'until' Exp . 'step' Exp            (rule 106)

	')'            reduce using rule 104
	'*='           shift, and enter state 83
	'+='           shift, and enter state 84
	'-='           shift, and enter state 85
	'/='           shift, and enter state 86
	'='            shift, and enter state 88
	'step'         shift, and enter state 223

	OpAssign       goto state 82

State 215

	Exp -> Exp . OpAssign Exp1                          (rule 5)
	Iterable -> Exp 'downTo' Exp .                      (rule 105)
	Iterable -> Exp 'downTo' Exp . 'step' Exp           (rule 107)

	')'            reduce using rule 105
	'*='           shift, and enter state 83
	'+='           shift, and enter state 84
	'-='           shift, and enter state 85
	'/='           shift, and enter state 86
	'='            shift, and enter state 88
	'step'         shift, and enter state 222

	OpAssign       goto state 82

State 216

	Exp -> Exp . OpAssign Exp1                          (rule 5)
	Iterable -> Exp '..' Exp .                          (rule 103)

	')'            reduce using rule 103
	'*='           shift, and enter state 83
	'+='           shift, and enter state 84
	'-='           shift, and enter state 85
	'/='           shift, and enter state 86
	'='            shift, and enter state 88

	OpAssign       goto state 82

State 217

	Stm -> 'for' '(' Ident 'in' Iterable ')' '{' . ListStm '}'    (rule 76)

	'!'            reduce using rule 87
	'('            reduce using rule 87
	'++'           reduce using rule 87
	'-'            reduce using rule 87
	'--'           reduce using rule 87
	'Tupla'        reduce using rule 87
	'break'        reduce using rule 87
	'continue'     reduce using rule 87
	'false'        reduce using rule 87
	'for'          reduce using rule 87
	'fun'          reduce using rule 87
	'if'           reduce using rule 87
	'null'         reduce using rule 87
	'print'        reduce using rule 87
	'println'      reduce using rule 87
	'return'       reduce using rule 87
	'run'          reduce using rule 87
	'true'         reduce using rule 87
	'val'          reduce using rule 87
	'var'          reduce using rule 87
	'while'        reduce using rule 87
	'{'            reduce using rule 87
	'}'            reduce using rule 87
	L_integ        reduce using rule 87
	L_quoted       reduce using rule 87
	L_ident        reduce using rule 87

	ListStm        goto state 221

State 218

	Stm -> 'if' '(' Exp ')' '{' ListStm '}' .           (rule 82)
	Stm -> 'if' '(' Exp ')' '{' ListStm '}' . 'else' '{' ListStm '}'    (rule 83)

	'!'            reduce using rule 82
	'('            reduce using rule 82
	'++'           reduce using rule 82
	'-'            reduce using rule 82
	'--'           reduce using rule 82
	'Tupla'        reduce using rule 82
	'break'        reduce using rule 82
	'continue'     reduce using rule 82
	'else'         shift, and enter state 220
	'false'        reduce using rule 82
	'for'          reduce using rule 82
	'fun'          reduce using rule 82
	'if'           reduce using rule 82
	'null'         reduce using rule 82
	'print'        reduce using rule 82
	'println'      reduce using rule 82
	'return'       reduce using rule 82
	'run'          reduce using rule 82
	'true'         reduce using rule 82
	'val'          reduce using rule 82
	'var'          reduce using rule 82
	'while'        reduce using rule 82
	'{'            reduce using rule 82
	'}'            reduce using rule 82
	L_integ        reduce using rule 82
	L_quoted       reduce using rule 82
	L_ident        reduce using rule 82


State 219

	Stm -> 'while' '(' Exp ')' '{' ListStm '}' .        (rule 77)

	'!'            reduce using rule 77
	'('            reduce using rule 77
	'++'           reduce using rule 77
	'-'            reduce using rule 77
	'--'           reduce using rule 77
	'Tupla'        reduce using rule 77
	'break'        reduce using rule 77
	'continue'     reduce using rule 77
	'false'        reduce using rule 77
	'for'          reduce using rule 77
	'fun'          reduce using rule 77
	'if'           reduce using rule 77
	'null'         reduce using rule 77
	'print'        reduce using rule 77
	'println'      reduce using rule 77
	'return'       reduce using rule 77
	'run'          reduce using rule 77
	'true'         reduce using rule 77
	'val'          reduce using rule 77
	'var'          reduce using rule 77
	'while'        reduce using rule 77
	'{'            reduce using rule 77
	'}'            reduce using rule 77
	L_integ        reduce using rule 77
	L_quoted       reduce using rule 77
	L_ident        reduce using rule 77


State 220

	Stm -> 'if' '(' Exp ')' '{' ListStm '}' 'else' . '{' ListStm '}'    (rule 83)

	'{'            shift, and enter state 227


State 221

	Stm -> 'for' '(' Ident 'in' Iterable ')' '{' ListStm . '}'    (rule 76)
	ListStm -> ListStm . Stm                            (rule 88)

	'!'            shift, and enter state 62
	'('            shift, and enter state 63
	'++'           shift, and enter state 64
	'-'            shift, and enter state 65
	'--'           shift, and enter state 66
	'Tupla'        shift, and enter state 67
	'break'        shift, and enter state 159
	'continue'     shift, and enter state 160
	'false'        shift, and enter state 68
	'for'          shift, and enter state 161
	'fun'          shift, and enter state 9
	'if'           shift, and enter state 162
	'null'         shift, and enter state 69
	'print'        shift, and enter state 163
	'println'      shift, and enter state 164
	'return'       shift, and enter state 165
	'run'          shift, and enter state 166
	'true'         shift, and enter state 70
	'val'          shift, and enter state 10
	'var'          shift, and enter state 11
	'while'        shift, and enter state 167
	'{'            shift, and enter state 71
	'}'            shift, and enter state 226
	L_integ        shift, and enter state 2
	L_quoted       shift, and enter state 72
	L_ident        shift, and enter state 13

	Integer        goto state 45
	String         goto state 46
	Ident          goto state 47
	Exp            goto state 170
	Exp1           goto state 49
	Exp2           goto state 50
	Exp3           goto state 51
	Exp4           goto state 52
	Exp5           goto state 53
	Exp6           goto state 54
	Exp7           goto state 55
	Exp8           goto state 56
	Exp9           goto state 57
	Exp10          goto state 58
	Exp11          goto state 59
	Stm            goto state 157
	Dec            goto state 158
	FunctionDec    goto state 7
	FunctionExp    goto state 60
	Lambda         goto state 61
	ArrayDec       goto state 8

State 222

	Iterable -> Exp 'downTo' Exp 'step' . Exp           (rule 107)

	'!'            shift, and enter state 62
	'('            shift, and enter state 63
	'++'           shift, and enter state 64
	'-'            shift, and enter state 65
	'--'           shift, and enter state 66
	'Tupla'        shift, and enter state 67
	'false'        shift, and enter state 68
	'null'         shift, and enter state 69
	'true'         shift, and enter state 70
	'{'            shift, and enter state 71
	L_integ        shift, and enter state 2
	L_quoted       shift, and enter state 72
	L_ident        shift, and enter state 13

	Integer        goto state 45
	String         goto state 46
	Ident          goto state 47
	Exp            goto state 225
	Exp1           goto state 49
	Exp2           goto state 50
	Exp3           goto state 51
	Exp4           goto state 52
	Exp5           goto state 53
	Exp6           goto state 54
	Exp7           goto state 55
	Exp8           goto state 56
	Exp9           goto state 57
	Exp10          goto state 58
	Exp11          goto state 59
	FunctionExp    goto state 60
	Lambda         goto state 61

State 223

	Iterable -> Exp 'until' Exp 'step' . Exp            (rule 106)

	'!'            shift, and enter state 62
	'('            shift, and enter state 63
	'++'           shift, and enter state 64
	'-'            shift, and enter state 65
	'--'           shift, and enter state 66
	'Tupla'        shift, and enter state 67
	'false'        shift, and enter state 68
	'null'         shift, and enter state 69
	'true'         shift, and enter state 70
	'{'            shift, and enter state 71
	L_integ        shift, and enter state 2
	L_quoted       shift, and enter state 72
	L_ident        shift, and enter state 13

	Integer        goto state 45
	String         goto state 46
	Ident          goto state 47
	Exp            goto state 224
	Exp1           goto state 49
	Exp2           goto state 50
	Exp3           goto state 51
	Exp4           goto state 52
	Exp5           goto state 53
	Exp6           goto state 54
	Exp7           goto state 55
	Exp8           goto state 56
	Exp9           goto state 57
	Exp10          goto state 58
	Exp11          goto state 59
	FunctionExp    goto state 60
	Lambda         goto state 61

State 224

	Exp -> Exp . OpAssign Exp1                          (rule 5)
	Iterable -> Exp 'until' Exp 'step' Exp .            (rule 106)

	')'            reduce using rule 106
	'*='           shift, and enter state 83
	'+='           shift, and enter state 84
	'-='           shift, and enter state 85
	'/='           shift, and enter state 86
	'='            shift, and enter state 88

	OpAssign       goto state 82

State 225

	Exp -> Exp . OpAssign Exp1                          (rule 5)
	Iterable -> Exp 'downTo' Exp 'step' Exp .           (rule 107)

	')'            reduce using rule 107
	'*='           shift, and enter state 83
	'+='           shift, and enter state 84
	'-='           shift, and enter state 85
	'/='           shift, and enter state 86
	'='            shift, and enter state 88

	OpAssign       goto state 82

State 226

	Stm -> 'for' '(' Ident 'in' Iterable ')' '{' ListStm '}' .    (rule 76)

	'!'            reduce using rule 76
	'('            reduce using rule 76
	'++'           reduce using rule 76
	'-'            reduce using rule 76
	'--'           reduce using rule 76
	'Tupla'        reduce using rule 76
	'break'        reduce using rule 76
	'continue'     reduce using rule 76
	'false'        reduce using rule 76
	'for'          reduce using rule 76
	'fun'          reduce using rule 76
	'if'           reduce using rule 76
	'null'         reduce using rule 76
	'print'        reduce using rule 76
	'println'      reduce using rule 76
	'return'       reduce using rule 76
	'run'          reduce using rule 76
	'true'         reduce using rule 76
	'val'          reduce using rule 76
	'var'          reduce using rule 76
	'while'        reduce using rule 76
	'{'            reduce using rule 76
	'}'            reduce using rule 76
	L_integ        reduce using rule 76
	L_quoted       reduce using rule 76
	L_ident        reduce using rule 76


State 227

	Stm -> 'if' '(' Exp ')' '{' ListStm '}' 'else' '{' . ListStm '}'    (rule 83)

	'!'            reduce using rule 87
	'('            reduce using rule 87
	'++'           reduce using rule 87
	'-'            reduce using rule 87
	'--'           reduce using rule 87
	'Tupla'        reduce using rule 87
	'break'        reduce using rule 87
	'continue'     reduce using rule 87
	'false'        reduce using rule 87
	'for'          reduce using rule 87
	'fun'          reduce using rule 87
	'if'           reduce using rule 87
	'null'         reduce using rule 87
	'print'        reduce using rule 87
	'println'      reduce using rule 87
	'return'       reduce using rule 87
	'run'          reduce using rule 87
	'true'         reduce using rule 87
	'val'          reduce using rule 87
	'var'          reduce using rule 87
	'while'        reduce using rule 87
	'{'            reduce using rule 87
	'}'            reduce using rule 87
	L_integ        reduce using rule 87
	L_quoted       reduce using rule 87
	L_ident        reduce using rule 87

	ListStm        goto state 228

State 228

	Stm -> 'if' '(' Exp ')' '{' ListStm '}' 'else' '{' ListStm . '}'    (rule 83)
	ListStm -> ListStm . Stm                            (rule 88)

	'!'            shift, and enter state 62
	'('            shift, and enter state 63
	'++'           shift, and enter state 64
	'-'            shift, and enter state 65
	'--'           shift, and enter state 66
	'Tupla'        shift, and enter state 67
	'break'        shift, and enter state 159
	'continue'     shift, and enter state 160
	'false'        shift, and enter state 68
	'for'          shift, and enter state 161
	'fun'          shift, and enter state 9
	'if'           shift, and enter state 162
	'null'         shift, and enter state 69
	'print'        shift, and enter state 163
	'println'      shift, and enter state 164
	'return'       shift, and enter state 165
	'run'          shift, and enter state 166
	'true'         shift, and enter state 70
	'val'          shift, and enter state 10
	'var'          shift, and enter state 11
	'while'        shift, and enter state 167
	'{'            shift, and enter state 71
	'}'            shift, and enter state 229
	L_integ        shift, and enter state 2
	L_quoted       shift, and enter state 72
	L_ident        shift, and enter state 13

	Integer        goto state 45
	String         goto state 46
	Ident          goto state 47
	Exp            goto state 170
	Exp1           goto state 49
	Exp2           goto state 50
	Exp3           goto state 51
	Exp4           goto state 52
	Exp5           goto state 53
	Exp6           goto state 54
	Exp7           goto state 55
	Exp8           goto state 56
	Exp9           goto state 57
	Exp10          goto state 58
	Exp11          goto state 59
	Stm            goto state 157
	Dec            goto state 158
	FunctionDec    goto state 7
	FunctionExp    goto state 60
	Lambda         goto state 61
	ArrayDec       goto state 8

State 229

	Stm -> 'if' '(' Exp ')' '{' ListStm '}' 'else' '{' ListStm '}' .    (rule 83)

	'!'            reduce using rule 83
	'('            reduce using rule 83
	'++'           reduce using rule 83
	'-'            reduce using rule 83
	'--'           reduce using rule 83
	'Tupla'        reduce using rule 83
	'break'        reduce using rule 83
	'continue'     reduce using rule 83
	'false'        reduce using rule 83
	'for'          reduce using rule 83
	'fun'          reduce using rule 83
	'if'           reduce using rule 83
	'null'         reduce using rule 83
	'print'        reduce using rule 83
	'println'      reduce using rule 83
	'return'       reduce using rule 83
	'run'          reduce using rule 83
	'true'         reduce using rule 83
	'val'          reduce using rule 83
	'var'          reduce using rule 83
	'while'        reduce using rule 83
	'{'            reduce using rule 83
	'}'            reduce using rule 83
	L_integ        reduce using rule 83
	L_quoted       reduce using rule 83
	L_ident        reduce using rule 83


-----------------------------------------------------------------------------
Grammar Totals
-----------------------------------------------------------------------------
Number of rules: 109
Number of terminals: 64
Number of non-terminals: 36
Number of states: 230
