-----------------------------------------------------------------------------
Info file generated by Happy Version 1.19.12 from ParKotlin.y
-----------------------------------------------------------------------------


-----------------------------------------------------------------------------
Grammar
-----------------------------------------------------------------------------
	%start_pProg -> Prog                               (0)
	Integer -> L_integ                                 (1)
	String -> L_quoted                                 (2)
	Ident -> L_ident                                   (3)
	Prog -> ListInst                                   (4)
	Exp -> Exp OpAssign Exp1                           (5)
	Exp -> Exp1                                        (6)
	Exp1 -> Exp3 '?' Exp1 ':' Exp2                     (7)
	Exp1 -> Exp2                                       (8)
	Exp2 -> Exp2 '||' Exp3                             (9)
	Exp2 -> Exp3                                       (10)
	Exp3 -> Exp3 '&&' Exp4                             (11)
	Exp3 -> Exp4                                       (12)
	Exp4 -> Exp4 '==' Exp5                             (13)
	Exp4 -> Exp4 '!=' Exp5                             (14)
	Exp4 -> Exp5                                       (15)
	Exp5 -> Exp5 '<' Exp6                              (16)
	Exp5 -> Exp5 '>' Exp6                              (17)
	Exp5 -> Exp5 '<=' Exp6                             (18)
	Exp5 -> Exp5 '>=' Exp6                             (19)
	Exp5 -> Exp6                                       (20)
	Exp6 -> Exp6 '+' Exp7                              (21)
	Exp6 -> Exp6 '-' Exp7                              (22)
	Exp6 -> Exp7                                       (23)
	Exp7 -> Exp7 '*' Exp8                              (24)
	Exp7 -> Exp7 '/' Exp8                              (25)
	Exp7 -> Exp7 '%' Exp8                              (26)
	Exp7 -> Exp8                                       (27)
	Exp8 -> '-' Exp8                                   (28)
	Exp8 -> '!' Exp8                                   (29)
	Exp8 -> '++' Exp12                                 (30)
	Exp8 -> '--' Exp12                                 (31)
	Exp8 -> Exp9                                       (32)
	Exp9 -> Exp12 '++'                                 (33)
	Exp9 -> Exp12 '--'                                 (34)
	Exp9 -> Exp10                                      (35)
	Exp10 -> '[' Iterable ']'                          (36)
	Exp10 -> 'Array' '(' Exp ',' Exp ')'               (37)
	Exp10 -> 'Tupla' '(' ListExp ')'                   (38)
	Exp10 -> Integer                                   (39)
	Exp10 -> String                                    (40)
	Exp10 -> 'true'                                    (41)
	Exp10 -> 'false'                                   (42)
	Exp10 -> 'null'                                    (43)
	Exp10 -> FunctionExp                               (44)
	Exp10 -> Ident ListDimExp                          (45)
	Exp10 -> '{' ListArg '->' ListStm '}'              (46)
	Exp10 -> Exp11                                     (47)
	Exp11 -> Exp12 '!!'                                (48)
	Exp11 -> Exp12                                     (49)
	Exp12 -> Ident                                     (50)
	Exp12 -> '(' Exp ')'                               (51)
	ListExp ->                                         (52)
	ListExp -> Exp                                     (53)
	ListExp -> Exp ',' ListExp                         (54)
	DimExp -> '[' Exp ']'                              (55)
	ListDimExp -> DimExp                               (56)
	ListDimExp -> DimExp ListDimExp                    (57)
	OpAssign -> '='                                    (58)
	OpAssign -> '+='                                   (59)
	OpAssign -> '-='                                   (60)
	OpAssign -> '*='                                   (61)
	OpAssign -> '/='                                   (62)
	OpAssign -> '%='                                   (63)
	BaseType -> 'Tupla' '<' ListType '>'               (64)
	BaseType -> 'Bool'                                 (65)
	BaseType -> 'Int'                                  (66)
	BaseType -> 'String'                               (67)
	BaseType -> 'Array' '<' Type '>'                   (68)
	RetType -> 'Unit'                                  (69)
	RetType -> Type                                    (70)
	Type -> BaseType '?'                               (71)
	Type -> BaseType                                   (72)
	Type -> '(' ListType ')' '->' RetType              (73)
	ListType ->                                        (74)
	ListType -> Type                                   (75)
	ListType -> Type ',' ListType                      (76)
	Arg -> Ident ':' Type                              (77)
	ListArg ->                                         (78)
	ListArg -> Arg                                     (79)
	ListArg -> Arg ',' ListArg                         (80)
	Stm -> Dec                                         (81)
	Stm -> Exp ';'                                     (82)
	Stm -> 'run' '{' ListStm '}'                       (83)
	Stm -> 'for' '(' Ident 'in' Exp ')' '{' ListStm '}'   (84)
	Stm -> 'while' '(' Exp ')' '{' ListStm '}'         (85)
	Stm -> 'break' ';'                                 (86)
	Stm -> 'continue' ';'                              (87)
	Stm -> 'return' Exp ';'                            (88)
	Stm -> 'return' ';'                                (89)
	Stm -> 'if' '(' Exp ')' '{' ListStm '}'            (90)
	Stm -> 'if' '(' Exp ')' '{' ListStm '}' 'else' '{' ListStm '}'   (91)
	Stm -> 'print' '(' Exp ')' ';'                     (92)
	Stm -> 'println' '(' Exp ')' ';'                   (93)
	Stm -> Exp '?.let' '{' ListStm '}'                 (94)
	Stm -> 'assert' '(' Exp ')' ';'                    (95)
	ListStm ->                                         (96)
	ListStm -> ListStm Stm                             (97)
	Inst -> Dec                                        (98)
	ListInst ->                                        (99)
	ListInst -> ListInst Inst                          (100)
	Dec -> FunctionDec                                 (101)
	Dec -> 'var' Ident ':' Type '=' Exp ';'            (102)
	Dec -> 'val' Ident ':' Type '=' Exp ';'            (103)
	Dec -> 'var' Ident ':' Type ';'                    (104)
	Dec -> 'val' Ident ':' Type ';'                    (105)
	FunctionDec -> 'fun' Ident '(' ListArg ')' ':' RetType '{' ListStm '}'   (106)
	FunctionExp -> Ident '(' ListExp ')'               (107)
	Iterable -> Exp '..' Exp                           (108)
	Iterable -> Exp 'until' Exp                        (109)
	Iterable -> Exp 'downTo' Exp                       (110)
	Iterable -> Exp 'until' Exp 'step' Exp             (111)
	Iterable -> Exp 'downTo' Exp 'step' Exp            (112)

-----------------------------------------------------------------------------
Terminals
-----------------------------------------------------------------------------
	'!'            { PT _ (TS _ 1) }
	'!!'           { PT _ (TS _ 2) }
	'!='           { PT _ (TS _ 3) }
	'%'            { PT _ (TS _ 4) }
	'%='           { PT _ (TS _ 5) }
	'&&'           { PT _ (TS _ 6) }
	'('            { PT _ (TS _ 7) }
	')'            { PT _ (TS _ 8) }
	'*'            { PT _ (TS _ 9) }
	'*='           { PT _ (TS _ 10) }
	'+'            { PT _ (TS _ 11) }
	'++'           { PT _ (TS _ 12) }
	'+='           { PT _ (TS _ 13) }
	','            { PT _ (TS _ 14) }
	'-'            { PT _ (TS _ 15) }
	'--'           { PT _ (TS _ 16) }
	'-='           { PT _ (TS _ 17) }
	'->'           { PT _ (TS _ 18) }
	'..'           { PT _ (TS _ 19) }
	'/'            { PT _ (TS _ 20) }
	'/='           { PT _ (TS _ 21) }
	':'            { PT _ (TS _ 22) }
	';'            { PT _ (TS _ 23) }
	'<'            { PT _ (TS _ 24) }
	'<='           { PT _ (TS _ 25) }
	'='            { PT _ (TS _ 26) }
	'=='           { PT _ (TS _ 27) }
	'>'            { PT _ (TS _ 28) }
	'>='           { PT _ (TS _ 29) }
	'?'            { PT _ (TS _ 30) }
	'?.let'        { PT _ (TS _ 31) }
	'Array'        { PT _ (TS _ 32) }
	'Bool'         { PT _ (TS _ 33) }
	'Int'          { PT _ (TS _ 34) }
	'String'       { PT _ (TS _ 35) }
	'Tupla'        { PT _ (TS _ 36) }
	'Unit'         { PT _ (TS _ 37) }
	'['            { PT _ (TS _ 38) }
	']'            { PT _ (TS _ 39) }
	'assert'       { PT _ (TS _ 40) }
	'break'        { PT _ (TS _ 41) }
	'continue'     { PT _ (TS _ 42) }
	'downTo'       { PT _ (TS _ 43) }
	'else'         { PT _ (TS _ 44) }
	'false'        { PT _ (TS _ 45) }
	'for'          { PT _ (TS _ 46) }
	'fun'          { PT _ (TS _ 47) }
	'if'           { PT _ (TS _ 48) }
	'in'           { PT _ (TS _ 49) }
	'null'         { PT _ (TS _ 50) }
	'print'        { PT _ (TS _ 51) }
	'println'      { PT _ (TS _ 52) }
	'return'       { PT _ (TS _ 53) }
	'run'          { PT _ (TS _ 54) }
	'step'         { PT _ (TS _ 55) }
	'true'         { PT _ (TS _ 56) }
	'until'        { PT _ (TS _ 57) }
	'val'          { PT _ (TS _ 58) }
	'var'          { PT _ (TS _ 59) }
	'while'        { PT _ (TS _ 60) }
	'{'            { PT _ (TS _ 61) }
	'||'           { PT _ (TS _ 62) }
	'}'            { PT _ (TS _ 63) }
	L_integ        { PT _ (TI $$) }
	L_quoted       { PT _ (TL $$) }
	L_ident        { PT _ (TV $$) }

-----------------------------------------------------------------------------
Non-terminals
-----------------------------------------------------------------------------
	%start_pProg    rule  0
	Integer         rule  1
	String          rule  2
	Ident           rule  3
	Prog            rule  4
	Exp             rules 5, 6
	Exp1            rules 7, 8
	Exp2            rules 9, 10
	Exp3            rules 11, 12
	Exp4            rules 13, 14, 15
	Exp5            rules 16, 17, 18, 19, 20
	Exp6            rules 21, 22, 23
	Exp7            rules 24, 25, 26, 27
	Exp8            rules 28, 29, 30, 31, 32
	Exp9            rules 33, 34, 35
	Exp10           rules 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47
	Exp11           rules 48, 49
	Exp12           rules 50, 51
	ListExp         rules 52, 53, 54
	DimExp          rule  55
	ListDimExp      rules 56, 57
	OpAssign        rules 58, 59, 60, 61, 62, 63
	BaseType        rules 64, 65, 66, 67, 68
	RetType         rules 69, 70
	Type            rules 71, 72, 73
	ListType        rules 74, 75, 76
	Arg             rule  77
	ListArg         rules 78, 79, 80
	Stm             rules 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95
	ListStm         rules 96, 97
	Inst            rule  98
	ListInst        rules 99, 100
	Dec             rules 101, 102, 103, 104, 105
	FunctionDec     rule  106
	FunctionExp     rule  107
	Iterable        rules 108, 109, 110, 111, 112

-----------------------------------------------------------------------------
States
-----------------------------------------------------------------------------
State 0


	'fun'          reduce using rule 99
	'val'          reduce using rule 99
	'var'          reduce using rule 99
	%eof           reduce using rule 99

	Prog           goto state 3
	ListInst       goto state 4

State 1


	L_integ        shift, and enter state 2


State 2

	Integer -> L_integ .                                (rule 1)

	'!='           reduce using rule 1
	'%'            reduce using rule 1
	'%='           reduce using rule 1
	'&&'           reduce using rule 1
	')'            reduce using rule 1
	'*'            reduce using rule 1
	'*='           reduce using rule 1
	'+'            reduce using rule 1
	'+='           reduce using rule 1
	','            reduce using rule 1
	'-'            reduce using rule 1
	'-='           reduce using rule 1
	'..'           reduce using rule 1
	'/'            reduce using rule 1
	'/='           reduce using rule 1
	':'            reduce using rule 1
	';'            reduce using rule 1
	'<'            reduce using rule 1
	'<='           reduce using rule 1
	'='            reduce using rule 1
	'=='           reduce using rule 1
	'>'            reduce using rule 1
	'>='           reduce using rule 1
	'?'            reduce using rule 1
	'?.let'        reduce using rule 1
	']'            reduce using rule 1
	'downTo'       reduce using rule 1
	'step'         reduce using rule 1
	'until'        reduce using rule 1
	'||'           reduce using rule 1


State 3

	%start_pProg -> Prog .                              (rule 0)

	%eof           accept


State 4

	Prog -> ListInst .                                  (rule 4)
	ListInst -> ListInst . Inst                         (rule 100)

	'fun'          shift, and enter state 8
	'val'          shift, and enter state 9
	'var'          shift, and enter state 10
	%eof           reduce using rule 4

	Inst           goto state 5
	Dec            goto state 6
	FunctionDec    goto state 7

State 5

	ListInst -> ListInst Inst .                         (rule 100)

	'fun'          reduce using rule 100
	'val'          reduce using rule 100
	'var'          reduce using rule 100
	%eof           reduce using rule 100


State 6

	Inst -> Dec .                                       (rule 98)

	'fun'          reduce using rule 98
	'val'          reduce using rule 98
	'var'          reduce using rule 98
	%eof           reduce using rule 98


State 7

	Dec -> FunctionDec .                                (rule 101)

	'!'            reduce using rule 101
	'('            reduce using rule 101
	'++'           reduce using rule 101
	'-'            reduce using rule 101
	'--'           reduce using rule 101
	'Array'        reduce using rule 101
	'Tupla'        reduce using rule 101
	'['            reduce using rule 101
	'assert'       reduce using rule 101
	'break'        reduce using rule 101
	'continue'     reduce using rule 101
	'false'        reduce using rule 101
	'for'          reduce using rule 101
	'fun'          reduce using rule 101
	'if'           reduce using rule 101
	'null'         reduce using rule 101
	'print'        reduce using rule 101
	'println'      reduce using rule 101
	'return'       reduce using rule 101
	'run'          reduce using rule 101
	'true'         reduce using rule 101
	'val'          reduce using rule 101
	'var'          reduce using rule 101
	'while'        reduce using rule 101
	'{'            reduce using rule 101
	'}'            reduce using rule 101
	L_integ        reduce using rule 101
	L_quoted       reduce using rule 101
	L_ident        reduce using rule 101
	%eof           reduce using rule 101


State 8

	FunctionDec -> 'fun' . Ident '(' ListArg ')' ':' RetType '{' ListStm '}'    (rule 106)

	L_ident        shift, and enter state 12

	Ident          goto state 14

State 9

	Dec -> 'val' . Ident ':' Type '=' Exp ';'           (rule 103)
	Dec -> 'val' . Ident ':' Type ';'                   (rule 105)

	L_ident        shift, and enter state 12

	Ident          goto state 13

State 10

	Dec -> 'var' . Ident ':' Type '=' Exp ';'           (rule 102)
	Dec -> 'var' . Ident ':' Type ';'                   (rule 104)

	L_ident        shift, and enter state 12

	Ident          goto state 11

State 11

	Dec -> 'var' Ident . ':' Type '=' Exp ';'           (rule 102)
	Dec -> 'var' Ident . ':' Type ';'                   (rule 104)

	':'            shift, and enter state 17


State 12

	Ident -> L_ident .                                  (rule 3)

	'!!'           reduce using rule 3
	'!='           reduce using rule 3
	'%'            reduce using rule 3
	'%='           reduce using rule 3
	'&&'           reduce using rule 3
	'('            reduce using rule 3
	')'            reduce using rule 3
	'*'            reduce using rule 3
	'*='           reduce using rule 3
	'+'            reduce using rule 3
	'++'           reduce using rule 3
	'+='           reduce using rule 3
	','            reduce using rule 3
	'-'            reduce using rule 3
	'--'           reduce using rule 3
	'-='           reduce using rule 3
	'..'           reduce using rule 3
	'/'            reduce using rule 3
	'/='           reduce using rule 3
	':'            reduce using rule 3
	';'            reduce using rule 3
	'<'            reduce using rule 3
	'<='           reduce using rule 3
	'='            reduce using rule 3
	'=='           reduce using rule 3
	'>'            reduce using rule 3
	'>='           reduce using rule 3
	'?'            reduce using rule 3
	'?.let'        reduce using rule 3
	'['            reduce using rule 3
	']'            reduce using rule 3
	'downTo'       reduce using rule 3
	'in'           reduce using rule 3
	'step'         reduce using rule 3
	'until'        reduce using rule 3
	'||'           reduce using rule 3


State 13

	Dec -> 'val' Ident . ':' Type '=' Exp ';'           (rule 103)
	Dec -> 'val' Ident . ':' Type ';'                   (rule 105)

	':'            shift, and enter state 16


State 14

	FunctionDec -> 'fun' Ident . '(' ListArg ')' ':' RetType '{' ListStm '}'    (rule 106)

	'('            shift, and enter state 15


State 15

	FunctionDec -> 'fun' Ident '(' . ListArg ')' ':' RetType '{' ListStm '}'    (rule 106)

	')'            reduce using rule 78
	L_ident        shift, and enter state 12

	Ident          goto state 27
	Arg            goto state 28
	ListArg        goto state 29

State 16

	Dec -> 'val' Ident ':' . Type '=' Exp ';'           (rule 103)
	Dec -> 'val' Ident ':' . Type ';'                   (rule 105)

	'('            shift, and enter state 20
	'Array'        shift, and enter state 21
	'Bool'         shift, and enter state 22
	'Int'          shift, and enter state 23
	'String'       shift, and enter state 24
	'Tupla'        shift, and enter state 25

	BaseType       goto state 18
	Type           goto state 26

State 17

	Dec -> 'var' Ident ':' . Type '=' Exp ';'           (rule 102)
	Dec -> 'var' Ident ':' . Type ';'                   (rule 104)

	'('            shift, and enter state 20
	'Array'        shift, and enter state 21
	'Bool'         shift, and enter state 22
	'Int'          shift, and enter state 23
	'String'       shift, and enter state 24
	'Tupla'        shift, and enter state 25

	BaseType       goto state 18
	Type           goto state 19

State 18

	Type -> BaseType . '?'                              (rule 71)
	Type -> BaseType .                                  (rule 72)

	')'            reduce using rule 72
	','            reduce using rule 72
	'->'           reduce using rule 72
	';'            reduce using rule 72
	'='            reduce using rule 72
	'>'            reduce using rule 72
	'?'            shift, and enter state 41
	'{'            reduce using rule 72


State 19

	Dec -> 'var' Ident ':' Type . '=' Exp ';'           (rule 102)
	Dec -> 'var' Ident ':' Type . ';'                   (rule 104)

	';'            shift, and enter state 39
	'='            shift, and enter state 40


State 20

	Type -> '(' . ListType ')' '->' RetType             (rule 73)

	'('            shift, and enter state 20
	')'            reduce using rule 74
	'Array'        shift, and enter state 21
	'Bool'         shift, and enter state 22
	'Int'          shift, and enter state 23
	'String'       shift, and enter state 24
	'Tupla'        shift, and enter state 25

	BaseType       goto state 18
	Type           goto state 37
	ListType       goto state 38

State 21

	BaseType -> 'Array' . '<' Type '>'                  (rule 68)

	'<'            shift, and enter state 36


State 22

	BaseType -> 'Bool' .                                (rule 65)

	')'            reduce using rule 65
	','            reduce using rule 65
	'->'           reduce using rule 65
	';'            reduce using rule 65
	'='            reduce using rule 65
	'>'            reduce using rule 65
	'?'            reduce using rule 65
	'{'            reduce using rule 65


State 23

	BaseType -> 'Int' .                                 (rule 66)

	')'            reduce using rule 66
	','            reduce using rule 66
	'->'           reduce using rule 66
	';'            reduce using rule 66
	'='            reduce using rule 66
	'>'            reduce using rule 66
	'?'            reduce using rule 66
	'{'            reduce using rule 66


State 24

	BaseType -> 'String' .                              (rule 67)

	')'            reduce using rule 67
	','            reduce using rule 67
	'->'           reduce using rule 67
	';'            reduce using rule 67
	'='            reduce using rule 67
	'>'            reduce using rule 67
	'?'            reduce using rule 67
	'{'            reduce using rule 67


State 25

	BaseType -> 'Tupla' . '<' ListType '>'              (rule 64)

	'<'            shift, and enter state 35


State 26

	Dec -> 'val' Ident ':' Type . '=' Exp ';'           (rule 103)
	Dec -> 'val' Ident ':' Type . ';'                   (rule 105)

	';'            shift, and enter state 33
	'='            shift, and enter state 34


State 27

	Arg -> Ident . ':' Type                             (rule 77)

	':'            shift, and enter state 32


State 28

	ListArg -> Arg .                                    (rule 79)
	ListArg -> Arg . ',' ListArg                        (rule 80)

	')'            reduce using rule 79
	','            shift, and enter state 31
	'->'           reduce using rule 79


State 29

	FunctionDec -> 'fun' Ident '(' ListArg . ')' ':' RetType '{' ListStm '}'    (rule 106)

	')'            shift, and enter state 30


State 30

	FunctionDec -> 'fun' Ident '(' ListArg ')' . ':' RetType '{' ListStm '}'    (rule 106)

	':'            shift, and enter state 79


State 31

	ListArg -> Arg ',' . ListArg                        (rule 80)

	')'            reduce using rule 78
	'->'           reduce using rule 78
	L_ident        shift, and enter state 12

	Ident          goto state 27
	Arg            goto state 28
	ListArg        goto state 78

State 32

	Arg -> Ident ':' . Type                             (rule 77)

	'('            shift, and enter state 20
	'Array'        shift, and enter state 21
	'Bool'         shift, and enter state 22
	'Int'          shift, and enter state 23
	'String'       shift, and enter state 24
	'Tupla'        shift, and enter state 25

	BaseType       goto state 18
	Type           goto state 77

State 33

	Dec -> 'val' Ident ':' Type ';' .                   (rule 105)

	'!'            reduce using rule 105
	'('            reduce using rule 105
	'++'           reduce using rule 105
	'-'            reduce using rule 105
	'--'           reduce using rule 105
	'Array'        reduce using rule 105
	'Tupla'        reduce using rule 105
	'['            reduce using rule 105
	'assert'       reduce using rule 105
	'break'        reduce using rule 105
	'continue'     reduce using rule 105
	'false'        reduce using rule 105
	'for'          reduce using rule 105
	'fun'          reduce using rule 105
	'if'           reduce using rule 105
	'null'         reduce using rule 105
	'print'        reduce using rule 105
	'println'      reduce using rule 105
	'return'       reduce using rule 105
	'run'          reduce using rule 105
	'true'         reduce using rule 105
	'val'          reduce using rule 105
	'var'          reduce using rule 105
	'while'        reduce using rule 105
	'{'            reduce using rule 105
	'}'            reduce using rule 105
	L_integ        reduce using rule 105
	L_quoted       reduce using rule 105
	L_ident        reduce using rule 105
	%eof           reduce using rule 105


State 34

	Dec -> 'val' Ident ':' Type '=' . Exp ';'           (rule 103)

	'!'            shift, and enter state 59
	'('            shift, and enter state 60
	'++'           shift, and enter state 61
	'-'            shift, and enter state 62
	'--'           shift, and enter state 63
	'Array'        shift, and enter state 64
	'Tupla'        shift, and enter state 65
	'['            shift, and enter state 66
	'false'        shift, and enter state 67
	'null'         shift, and enter state 68
	'true'         shift, and enter state 69
	'{'            shift, and enter state 70
	L_integ        shift, and enter state 2
	L_quoted       shift, and enter state 71
	L_ident        shift, and enter state 12

	Integer        goto state 42
	String         goto state 43
	Ident          goto state 44
	Exp            goto state 76
	Exp1           goto state 46
	Exp2           goto state 47
	Exp3           goto state 48
	Exp4           goto state 49
	Exp5           goto state 50
	Exp6           goto state 51
	Exp7           goto state 52
	Exp8           goto state 53
	Exp9           goto state 54
	Exp10          goto state 55
	Exp11          goto state 56
	Exp12          goto state 57
	FunctionExp    goto state 58

State 35

	BaseType -> 'Tupla' '<' . ListType '>'              (rule 64)

	'('            shift, and enter state 20
	'>'            reduce using rule 74
	'Array'        shift, and enter state 21
	'Bool'         shift, and enter state 22
	'Int'          shift, and enter state 23
	'String'       shift, and enter state 24
	'Tupla'        shift, and enter state 25

	BaseType       goto state 18
	Type           goto state 37
	ListType       goto state 75

State 36

	BaseType -> 'Array' '<' . Type '>'                  (rule 68)

	'('            shift, and enter state 20
	'Array'        shift, and enter state 21
	'Bool'         shift, and enter state 22
	'Int'          shift, and enter state 23
	'String'       shift, and enter state 24
	'Tupla'        shift, and enter state 25

	BaseType       goto state 18
	Type           goto state 74

State 37

	ListType -> Type .                                  (rule 75)
	ListType -> Type . ',' ListType                     (rule 76)

	')'            reduce using rule 75
	','            shift, and enter state 73
	'>'            reduce using rule 75


State 38

	Type -> '(' ListType . ')' '->' RetType             (rule 73)

	')'            shift, and enter state 72


State 39

	Dec -> 'var' Ident ':' Type ';' .                   (rule 104)

	'!'            reduce using rule 104
	'('            reduce using rule 104
	'++'           reduce using rule 104
	'-'            reduce using rule 104
	'--'           reduce using rule 104
	'Array'        reduce using rule 104
	'Tupla'        reduce using rule 104
	'['            reduce using rule 104
	'assert'       reduce using rule 104
	'break'        reduce using rule 104
	'continue'     reduce using rule 104
	'false'        reduce using rule 104
	'for'          reduce using rule 104
	'fun'          reduce using rule 104
	'if'           reduce using rule 104
	'null'         reduce using rule 104
	'print'        reduce using rule 104
	'println'      reduce using rule 104
	'return'       reduce using rule 104
	'run'          reduce using rule 104
	'true'         reduce using rule 104
	'val'          reduce using rule 104
	'var'          reduce using rule 104
	'while'        reduce using rule 104
	'{'            reduce using rule 104
	'}'            reduce using rule 104
	L_integ        reduce using rule 104
	L_quoted       reduce using rule 104
	L_ident        reduce using rule 104
	%eof           reduce using rule 104


State 40

	Dec -> 'var' Ident ':' Type '=' . Exp ';'           (rule 102)

	'!'            shift, and enter state 59
	'('            shift, and enter state 60
	'++'           shift, and enter state 61
	'-'            shift, and enter state 62
	'--'           shift, and enter state 63
	'Array'        shift, and enter state 64
	'Tupla'        shift, and enter state 65
	'['            shift, and enter state 66
	'false'        shift, and enter state 67
	'null'         shift, and enter state 68
	'true'         shift, and enter state 69
	'{'            shift, and enter state 70
	L_integ        shift, and enter state 2
	L_quoted       shift, and enter state 71
	L_ident        shift, and enter state 12

	Integer        goto state 42
	String         goto state 43
	Ident          goto state 44
	Exp            goto state 45
	Exp1           goto state 46
	Exp2           goto state 47
	Exp3           goto state 48
	Exp4           goto state 49
	Exp5           goto state 50
	Exp6           goto state 51
	Exp7           goto state 52
	Exp8           goto state 53
	Exp9           goto state 54
	Exp10          goto state 55
	Exp11          goto state 56
	Exp12          goto state 57
	FunctionExp    goto state 58

State 41

	Type -> BaseType '?' .                              (rule 71)

	')'            reduce using rule 71
	','            reduce using rule 71
	'->'           reduce using rule 71
	';'            reduce using rule 71
	'='            reduce using rule 71
	'>'            reduce using rule 71
	'{'            reduce using rule 71


State 42

	Exp10 -> Integer .                                  (rule 39)

	'!='           reduce using rule 39
	'%'            reduce using rule 39
	'%='           reduce using rule 39
	'&&'           reduce using rule 39
	')'            reduce using rule 39
	'*'            reduce using rule 39
	'*='           reduce using rule 39
	'+'            reduce using rule 39
	'+='           reduce using rule 39
	','            reduce using rule 39
	'-'            reduce using rule 39
	'-='           reduce using rule 39
	'..'           reduce using rule 39
	'/'            reduce using rule 39
	'/='           reduce using rule 39
	':'            reduce using rule 39
	';'            reduce using rule 39
	'<'            reduce using rule 39
	'<='           reduce using rule 39
	'='            reduce using rule 39
	'=='           reduce using rule 39
	'>'            reduce using rule 39
	'>='           reduce using rule 39
	'?'            reduce using rule 39
	'?.let'        reduce using rule 39
	']'            reduce using rule 39
	'downTo'       reduce using rule 39
	'step'         reduce using rule 39
	'until'        reduce using rule 39
	'||'           reduce using rule 39


State 43

	Exp10 -> String .                                   (rule 40)

	'!='           reduce using rule 40
	'%'            reduce using rule 40
	'%='           reduce using rule 40
	'&&'           reduce using rule 40
	')'            reduce using rule 40
	'*'            reduce using rule 40
	'*='           reduce using rule 40
	'+'            reduce using rule 40
	'+='           reduce using rule 40
	','            reduce using rule 40
	'-'            reduce using rule 40
	'-='           reduce using rule 40
	'..'           reduce using rule 40
	'/'            reduce using rule 40
	'/='           reduce using rule 40
	':'            reduce using rule 40
	';'            reduce using rule 40
	'<'            reduce using rule 40
	'<='           reduce using rule 40
	'='            reduce using rule 40
	'=='           reduce using rule 40
	'>'            reduce using rule 40
	'>='           reduce using rule 40
	'?'            reduce using rule 40
	'?.let'        reduce using rule 40
	']'            reduce using rule 40
	'downTo'       reduce using rule 40
	'step'         reduce using rule 40
	'until'        reduce using rule 40
	'||'           reduce using rule 40


State 44

	Exp10 -> Ident . ListDimExp                         (rule 45)
	Exp12 -> Ident .                                    (rule 50)
	FunctionExp -> Ident . '(' ListExp ')'              (rule 107)

	'!!'           reduce using rule 50
	'!='           reduce using rule 50
	'%'            reduce using rule 50
	'%='           reduce using rule 50
	'&&'           reduce using rule 50
	'('            shift, and enter state 126
	')'            reduce using rule 50
	'*'            reduce using rule 50
	'*='           reduce using rule 50
	'+'            reduce using rule 50
	'++'           reduce using rule 50
	'+='           reduce using rule 50
	','            reduce using rule 50
	'-'            reduce using rule 50
	'--'           reduce using rule 50
	'-='           reduce using rule 50
	'..'           reduce using rule 50
	'/'            reduce using rule 50
	'/='           reduce using rule 50
	':'            reduce using rule 50
	';'            reduce using rule 50
	'<'            reduce using rule 50
	'<='           reduce using rule 50
	'='            reduce using rule 50
	'=='           reduce using rule 50
	'>'            reduce using rule 50
	'>='           reduce using rule 50
	'?'            reduce using rule 50
	'?.let'        reduce using rule 50
	'['            shift, and enter state 127
	']'            reduce using rule 50
	'downTo'       reduce using rule 50
	'step'         reduce using rule 50
	'until'        reduce using rule 50
	'||'           reduce using rule 50

	DimExp         goto state 124
	ListDimExp     goto state 125

State 45

	Exp -> Exp . OpAssign Exp1                          (rule 5)
	Dec -> 'var' Ident ':' Type '=' Exp . ';'           (rule 102)

	'%='           shift, and enter state 84
	'*='           shift, and enter state 85
	'+='           shift, and enter state 86
	'-='           shift, and enter state 87
	'/='           shift, and enter state 88
	';'            shift, and enter state 123
	'='            shift, and enter state 90

	OpAssign       goto state 83

State 46

	Exp -> Exp1 .                                       (rule 6)

	'%='           reduce using rule 6
	')'            reduce using rule 6
	'*='           reduce using rule 6
	'+='           reduce using rule 6
	','            reduce using rule 6
	'-='           reduce using rule 6
	'..'           reduce using rule 6
	'/='           reduce using rule 6
	';'            reduce using rule 6
	'='            reduce using rule 6
	'?.let'        reduce using rule 6
	']'            reduce using rule 6
	'downTo'       reduce using rule 6
	'step'         reduce using rule 6
	'until'        reduce using rule 6


State 47

	Exp1 -> Exp2 .                                      (rule 8)
	Exp2 -> Exp2 . '||' Exp3                            (rule 9)

	'%='           reduce using rule 8
	')'            reduce using rule 8
	'*='           reduce using rule 8
	'+='           reduce using rule 8
	','            reduce using rule 8
	'-='           reduce using rule 8
	'..'           reduce using rule 8
	'/='           reduce using rule 8
	':'            reduce using rule 8
	';'            reduce using rule 8
	'='            reduce using rule 8
	'?.let'        reduce using rule 8
	']'            reduce using rule 8
	'downTo'       reduce using rule 8
	'step'         reduce using rule 8
	'until'        reduce using rule 8
	'||'           shift, and enter state 122


State 48

	Exp1 -> Exp3 . '?' Exp1 ':' Exp2                    (rule 7)
	Exp2 -> Exp3 .                                      (rule 10)
	Exp3 -> Exp3 . '&&' Exp4                            (rule 11)

	'%='           reduce using rule 10
	'&&'           shift, and enter state 120
	')'            reduce using rule 10
	'*='           reduce using rule 10
	'+='           reduce using rule 10
	','            reduce using rule 10
	'-='           reduce using rule 10
	'..'           reduce using rule 10
	'/='           reduce using rule 10
	':'            reduce using rule 10
	';'            reduce using rule 10
	'='            reduce using rule 10
	'?'            shift, and enter state 121
	'?.let'        reduce using rule 10
	']'            reduce using rule 10
	'downTo'       reduce using rule 10
	'step'         reduce using rule 10
	'until'        reduce using rule 10
	'||'           reduce using rule 10


State 49

	Exp3 -> Exp4 .                                      (rule 12)
	Exp4 -> Exp4 . '==' Exp5                            (rule 13)
	Exp4 -> Exp4 . '!=' Exp5                            (rule 14)

	'!='           shift, and enter state 118
	'%='           reduce using rule 12
	'&&'           reduce using rule 12
	')'            reduce using rule 12
	'*='           reduce using rule 12
	'+='           reduce using rule 12
	','            reduce using rule 12
	'-='           reduce using rule 12
	'..'           reduce using rule 12
	'/='           reduce using rule 12
	':'            reduce using rule 12
	';'            reduce using rule 12
	'='            reduce using rule 12
	'=='           shift, and enter state 119
	'?'            reduce using rule 12
	'?.let'        reduce using rule 12
	']'            reduce using rule 12
	'downTo'       reduce using rule 12
	'step'         reduce using rule 12
	'until'        reduce using rule 12
	'||'           reduce using rule 12


State 50

	Exp4 -> Exp5 .                                      (rule 15)
	Exp5 -> Exp5 . '<' Exp6                             (rule 16)
	Exp5 -> Exp5 . '>' Exp6                             (rule 17)
	Exp5 -> Exp5 . '<=' Exp6                            (rule 18)
	Exp5 -> Exp5 . '>=' Exp6                            (rule 19)

	'!='           reduce using rule 15
	'%='           reduce using rule 15
	'&&'           reduce using rule 15
	')'            reduce using rule 15
	'*='           reduce using rule 15
	'+='           reduce using rule 15
	','            reduce using rule 15
	'-='           reduce using rule 15
	'..'           reduce using rule 15
	'/='           reduce using rule 15
	':'            reduce using rule 15
	';'            reduce using rule 15
	'<'            shift, and enter state 114
	'<='           shift, and enter state 115
	'='            reduce using rule 15
	'=='           reduce using rule 15
	'>'            shift, and enter state 116
	'>='           shift, and enter state 117
	'?'            reduce using rule 15
	'?.let'        reduce using rule 15
	']'            reduce using rule 15
	'downTo'       reduce using rule 15
	'step'         reduce using rule 15
	'until'        reduce using rule 15
	'||'           reduce using rule 15


State 51

	Exp5 -> Exp6 .                                      (rule 20)
	Exp6 -> Exp6 . '+' Exp7                             (rule 21)
	Exp6 -> Exp6 . '-' Exp7                             (rule 22)

	'!='           reduce using rule 20
	'%='           reduce using rule 20
	'&&'           reduce using rule 20
	')'            reduce using rule 20
	'*='           reduce using rule 20
	'+'            shift, and enter state 112
	'+='           reduce using rule 20
	','            reduce using rule 20
	'-'            shift, and enter state 113
	'-='           reduce using rule 20
	'..'           reduce using rule 20
	'/='           reduce using rule 20
	':'            reduce using rule 20
	';'            reduce using rule 20
	'<'            reduce using rule 20
	'<='           reduce using rule 20
	'='            reduce using rule 20
	'=='           reduce using rule 20
	'>'            reduce using rule 20
	'>='           reduce using rule 20
	'?'            reduce using rule 20
	'?.let'        reduce using rule 20
	']'            reduce using rule 20
	'downTo'       reduce using rule 20
	'step'         reduce using rule 20
	'until'        reduce using rule 20
	'||'           reduce using rule 20


State 52

	Exp6 -> Exp7 .                                      (rule 23)
	Exp7 -> Exp7 . '*' Exp8                             (rule 24)
	Exp7 -> Exp7 . '/' Exp8                             (rule 25)
	Exp7 -> Exp7 . '%' Exp8                             (rule 26)

	'!='           reduce using rule 23
	'%'            shift, and enter state 109
	'%='           reduce using rule 23
	'&&'           reduce using rule 23
	')'            reduce using rule 23
	'*'            shift, and enter state 110
	'*='           reduce using rule 23
	'+'            reduce using rule 23
	'+='           reduce using rule 23
	','            reduce using rule 23
	'-'            reduce using rule 23
	'-='           reduce using rule 23
	'..'           reduce using rule 23
	'/'            shift, and enter state 111
	'/='           reduce using rule 23
	':'            reduce using rule 23
	';'            reduce using rule 23
	'<'            reduce using rule 23
	'<='           reduce using rule 23
	'='            reduce using rule 23
	'=='           reduce using rule 23
	'>'            reduce using rule 23
	'>='           reduce using rule 23
	'?'            reduce using rule 23
	'?.let'        reduce using rule 23
	']'            reduce using rule 23
	'downTo'       reduce using rule 23
	'step'         reduce using rule 23
	'until'        reduce using rule 23
	'||'           reduce using rule 23


State 53

	Exp7 -> Exp8 .                                      (rule 27)

	'!='           reduce using rule 27
	'%'            reduce using rule 27
	'%='           reduce using rule 27
	'&&'           reduce using rule 27
	')'            reduce using rule 27
	'*'            reduce using rule 27
	'*='           reduce using rule 27
	'+'            reduce using rule 27
	'+='           reduce using rule 27
	','            reduce using rule 27
	'-'            reduce using rule 27
	'-='           reduce using rule 27
	'..'           reduce using rule 27
	'/'            reduce using rule 27
	'/='           reduce using rule 27
	':'            reduce using rule 27
	';'            reduce using rule 27
	'<'            reduce using rule 27
	'<='           reduce using rule 27
	'='            reduce using rule 27
	'=='           reduce using rule 27
	'>'            reduce using rule 27
	'>='           reduce using rule 27
	'?'            reduce using rule 27
	'?.let'        reduce using rule 27
	']'            reduce using rule 27
	'downTo'       reduce using rule 27
	'step'         reduce using rule 27
	'until'        reduce using rule 27
	'||'           reduce using rule 27


State 54

	Exp8 -> Exp9 .                                      (rule 32)

	'!='           reduce using rule 32
	'%'            reduce using rule 32
	'%='           reduce using rule 32
	'&&'           reduce using rule 32
	')'            reduce using rule 32
	'*'            reduce using rule 32
	'*='           reduce using rule 32
	'+'            reduce using rule 32
	'+='           reduce using rule 32
	','            reduce using rule 32
	'-'            reduce using rule 32
	'-='           reduce using rule 32
	'..'           reduce using rule 32
	'/'            reduce using rule 32
	'/='           reduce using rule 32
	':'            reduce using rule 32
	';'            reduce using rule 32
	'<'            reduce using rule 32
	'<='           reduce using rule 32
	'='            reduce using rule 32
	'=='           reduce using rule 32
	'>'            reduce using rule 32
	'>='           reduce using rule 32
	'?'            reduce using rule 32
	'?.let'        reduce using rule 32
	']'            reduce using rule 32
	'downTo'       reduce using rule 32
	'step'         reduce using rule 32
	'until'        reduce using rule 32
	'||'           reduce using rule 32


State 55

	Exp9 -> Exp10 .                                     (rule 35)

	'!='           reduce using rule 35
	'%'            reduce using rule 35
	'%='           reduce using rule 35
	'&&'           reduce using rule 35
	')'            reduce using rule 35
	'*'            reduce using rule 35
	'*='           reduce using rule 35
	'+'            reduce using rule 35
	'+='           reduce using rule 35
	','            reduce using rule 35
	'-'            reduce using rule 35
	'-='           reduce using rule 35
	'..'           reduce using rule 35
	'/'            reduce using rule 35
	'/='           reduce using rule 35
	':'            reduce using rule 35
	';'            reduce using rule 35
	'<'            reduce using rule 35
	'<='           reduce using rule 35
	'='            reduce using rule 35
	'=='           reduce using rule 35
	'>'            reduce using rule 35
	'>='           reduce using rule 35
	'?'            reduce using rule 35
	'?.let'        reduce using rule 35
	']'            reduce using rule 35
	'downTo'       reduce using rule 35
	'step'         reduce using rule 35
	'until'        reduce using rule 35
	'||'           reduce using rule 35


State 56

	Exp10 -> Exp11 .                                    (rule 47)

	'!='           reduce using rule 47
	'%'            reduce using rule 47
	'%='           reduce using rule 47
	'&&'           reduce using rule 47
	')'            reduce using rule 47
	'*'            reduce using rule 47
	'*='           reduce using rule 47
	'+'            reduce using rule 47
	'+='           reduce using rule 47
	','            reduce using rule 47
	'-'            reduce using rule 47
	'-='           reduce using rule 47
	'..'           reduce using rule 47
	'/'            reduce using rule 47
	'/='           reduce using rule 47
	':'            reduce using rule 47
	';'            reduce using rule 47
	'<'            reduce using rule 47
	'<='           reduce using rule 47
	'='            reduce using rule 47
	'=='           reduce using rule 47
	'>'            reduce using rule 47
	'>='           reduce using rule 47
	'?'            reduce using rule 47
	'?.let'        reduce using rule 47
	']'            reduce using rule 47
	'downTo'       reduce using rule 47
	'step'         reduce using rule 47
	'until'        reduce using rule 47
	'||'           reduce using rule 47


State 57

	Exp9 -> Exp12 . '++'                                (rule 33)
	Exp9 -> Exp12 . '--'                                (rule 34)
	Exp11 -> Exp12 . '!!'                               (rule 48)
	Exp11 -> Exp12 .                                    (rule 49)

	'!!'           shift, and enter state 106
	'!='           reduce using rule 49
	'%'            reduce using rule 49
	'%='           reduce using rule 49
	'&&'           reduce using rule 49
	')'            reduce using rule 49
	'*'            reduce using rule 49
	'*='           reduce using rule 49
	'+'            reduce using rule 49
	'++'           shift, and enter state 107
	'+='           reduce using rule 49
	','            reduce using rule 49
	'-'            reduce using rule 49
	'--'           shift, and enter state 108
	'-='           reduce using rule 49
	'..'           reduce using rule 49
	'/'            reduce using rule 49
	'/='           reduce using rule 49
	':'            reduce using rule 49
	';'            reduce using rule 49
	'<'            reduce using rule 49
	'<='           reduce using rule 49
	'='            reduce using rule 49
	'=='           reduce using rule 49
	'>'            reduce using rule 49
	'>='           reduce using rule 49
	'?'            reduce using rule 49
	'?.let'        reduce using rule 49
	']'            reduce using rule 49
	'downTo'       reduce using rule 49
	'step'         reduce using rule 49
	'until'        reduce using rule 49
	'||'           reduce using rule 49


State 58

	Exp10 -> FunctionExp .                              (rule 44)

	'!='           reduce using rule 44
	'%'            reduce using rule 44
	'%='           reduce using rule 44
	'&&'           reduce using rule 44
	')'            reduce using rule 44
	'*'            reduce using rule 44
	'*='           reduce using rule 44
	'+'            reduce using rule 44
	'+='           reduce using rule 44
	','            reduce using rule 44
	'-'            reduce using rule 44
	'-='           reduce using rule 44
	'..'           reduce using rule 44
	'/'            reduce using rule 44
	'/='           reduce using rule 44
	':'            reduce using rule 44
	';'            reduce using rule 44
	'<'            reduce using rule 44
	'<='           reduce using rule 44
	'='            reduce using rule 44
	'=='           reduce using rule 44
	'>'            reduce using rule 44
	'>='           reduce using rule 44
	'?'            reduce using rule 44
	'?.let'        reduce using rule 44
	']'            reduce using rule 44
	'downTo'       reduce using rule 44
	'step'         reduce using rule 44
	'until'        reduce using rule 44
	'||'           reduce using rule 44


State 59

	Exp8 -> '!' . Exp8                                  (rule 29)

	'!'            shift, and enter state 59
	'('            shift, and enter state 60
	'++'           shift, and enter state 61
	'-'            shift, and enter state 62
	'--'           shift, and enter state 63
	'Array'        shift, and enter state 64
	'Tupla'        shift, and enter state 65
	'['            shift, and enter state 66
	'false'        shift, and enter state 67
	'null'         shift, and enter state 68
	'true'         shift, and enter state 69
	'{'            shift, and enter state 70
	L_integ        shift, and enter state 2
	L_quoted       shift, and enter state 71
	L_ident        shift, and enter state 12

	Integer        goto state 42
	String         goto state 43
	Ident          goto state 44
	Exp8           goto state 105
	Exp9           goto state 54
	Exp10          goto state 55
	Exp11          goto state 56
	Exp12          goto state 57
	FunctionExp    goto state 58

State 60

	Exp12 -> '(' . Exp ')'                              (rule 51)

	'!'            shift, and enter state 59
	'('            shift, and enter state 60
	'++'           shift, and enter state 61
	'-'            shift, and enter state 62
	'--'           shift, and enter state 63
	'Array'        shift, and enter state 64
	'Tupla'        shift, and enter state 65
	'['            shift, and enter state 66
	'false'        shift, and enter state 67
	'null'         shift, and enter state 68
	'true'         shift, and enter state 69
	'{'            shift, and enter state 70
	L_integ        shift, and enter state 2
	L_quoted       shift, and enter state 71
	L_ident        shift, and enter state 12

	Integer        goto state 42
	String         goto state 43
	Ident          goto state 44
	Exp            goto state 104
	Exp1           goto state 46
	Exp2           goto state 47
	Exp3           goto state 48
	Exp4           goto state 49
	Exp5           goto state 50
	Exp6           goto state 51
	Exp7           goto state 52
	Exp8           goto state 53
	Exp9           goto state 54
	Exp10          goto state 55
	Exp11          goto state 56
	Exp12          goto state 57
	FunctionExp    goto state 58

State 61

	Exp8 -> '++' . Exp12                                (rule 30)

	'('            shift, and enter state 60
	L_ident        shift, and enter state 12

	Ident          goto state 100
	Exp12          goto state 103

State 62

	Exp8 -> '-' . Exp8                                  (rule 28)

	'!'            shift, and enter state 59
	'('            shift, and enter state 60
	'++'           shift, and enter state 61
	'-'            shift, and enter state 62
	'--'           shift, and enter state 63
	'Array'        shift, and enter state 64
	'Tupla'        shift, and enter state 65
	'['            shift, and enter state 66
	'false'        shift, and enter state 67
	'null'         shift, and enter state 68
	'true'         shift, and enter state 69
	'{'            shift, and enter state 70
	L_integ        shift, and enter state 2
	L_quoted       shift, and enter state 71
	L_ident        shift, and enter state 12

	Integer        goto state 42
	String         goto state 43
	Ident          goto state 44
	Exp8           goto state 102
	Exp9           goto state 54
	Exp10          goto state 55
	Exp11          goto state 56
	Exp12          goto state 57
	FunctionExp    goto state 58

State 63

	Exp8 -> '--' . Exp12                                (rule 31)

	'('            shift, and enter state 60
	L_ident        shift, and enter state 12

	Ident          goto state 100
	Exp12          goto state 101

State 64

	Exp10 -> 'Array' . '(' Exp ',' Exp ')'              (rule 37)

	'('            shift, and enter state 99


State 65

	Exp10 -> 'Tupla' . '(' ListExp ')'                  (rule 38)

	'('            shift, and enter state 98


State 66

	Exp10 -> '[' . Iterable ']'                         (rule 36)

	'!'            shift, and enter state 59
	'('            shift, and enter state 60
	'++'           shift, and enter state 61
	'-'            shift, and enter state 62
	'--'           shift, and enter state 63
	'Array'        shift, and enter state 64
	'Tupla'        shift, and enter state 65
	'['            shift, and enter state 66
	'false'        shift, and enter state 67
	'null'         shift, and enter state 68
	'true'         shift, and enter state 69
	'{'            shift, and enter state 70
	L_integ        shift, and enter state 2
	L_quoted       shift, and enter state 71
	L_ident        shift, and enter state 12

	Integer        goto state 42
	String         goto state 43
	Ident          goto state 44
	Exp            goto state 96
	Exp1           goto state 46
	Exp2           goto state 47
	Exp3           goto state 48
	Exp4           goto state 49
	Exp5           goto state 50
	Exp6           goto state 51
	Exp7           goto state 52
	Exp8           goto state 53
	Exp9           goto state 54
	Exp10          goto state 55
	Exp11          goto state 56
	Exp12          goto state 57
	FunctionExp    goto state 58
	Iterable       goto state 97

State 67

	Exp10 -> 'false' .                                  (rule 42)

	'!='           reduce using rule 42
	'%'            reduce using rule 42
	'%='           reduce using rule 42
	'&&'           reduce using rule 42
	')'            reduce using rule 42
	'*'            reduce using rule 42
	'*='           reduce using rule 42
	'+'            reduce using rule 42
	'+='           reduce using rule 42
	','            reduce using rule 42
	'-'            reduce using rule 42
	'-='           reduce using rule 42
	'..'           reduce using rule 42
	'/'            reduce using rule 42
	'/='           reduce using rule 42
	':'            reduce using rule 42
	';'            reduce using rule 42
	'<'            reduce using rule 42
	'<='           reduce using rule 42
	'='            reduce using rule 42
	'=='           reduce using rule 42
	'>'            reduce using rule 42
	'>='           reduce using rule 42
	'?'            reduce using rule 42
	'?.let'        reduce using rule 42
	']'            reduce using rule 42
	'downTo'       reduce using rule 42
	'step'         reduce using rule 42
	'until'        reduce using rule 42
	'||'           reduce using rule 42


State 68

	Exp10 -> 'null' .                                   (rule 43)

	'!='           reduce using rule 43
	'%'            reduce using rule 43
	'%='           reduce using rule 43
	'&&'           reduce using rule 43
	')'            reduce using rule 43
	'*'            reduce using rule 43
	'*='           reduce using rule 43
	'+'            reduce using rule 43
	'+='           reduce using rule 43
	','            reduce using rule 43
	'-'            reduce using rule 43
	'-='           reduce using rule 43
	'..'           reduce using rule 43
	'/'            reduce using rule 43
	'/='           reduce using rule 43
	':'            reduce using rule 43
	';'            reduce using rule 43
	'<'            reduce using rule 43
	'<='           reduce using rule 43
	'='            reduce using rule 43
	'=='           reduce using rule 43
	'>'            reduce using rule 43
	'>='           reduce using rule 43
	'?'            reduce using rule 43
	'?.let'        reduce using rule 43
	']'            reduce using rule 43
	'downTo'       reduce using rule 43
	'step'         reduce using rule 43
	'until'        reduce using rule 43
	'||'           reduce using rule 43


State 69

	Exp10 -> 'true' .                                   (rule 41)

	'!='           reduce using rule 41
	'%'            reduce using rule 41
	'%='           reduce using rule 41
	'&&'           reduce using rule 41
	')'            reduce using rule 41
	'*'            reduce using rule 41
	'*='           reduce using rule 41
	'+'            reduce using rule 41
	'+='           reduce using rule 41
	','            reduce using rule 41
	'-'            reduce using rule 41
	'-='           reduce using rule 41
	'..'           reduce using rule 41
	'/'            reduce using rule 41
	'/='           reduce using rule 41
	':'            reduce using rule 41
	';'            reduce using rule 41
	'<'            reduce using rule 41
	'<='           reduce using rule 41
	'='            reduce using rule 41
	'=='           reduce using rule 41
	'>'            reduce using rule 41
	'>='           reduce using rule 41
	'?'            reduce using rule 41
	'?.let'        reduce using rule 41
	']'            reduce using rule 41
	'downTo'       reduce using rule 41
	'step'         reduce using rule 41
	'until'        reduce using rule 41
	'||'           reduce using rule 41


State 70

	Exp10 -> '{' . ListArg '->' ListStm '}'             (rule 46)

	'->'           reduce using rule 78
	L_ident        shift, and enter state 12

	Ident          goto state 27
	Arg            goto state 28
	ListArg        goto state 95

State 71

	String -> L_quoted .                                (rule 2)

	'!='           reduce using rule 2
	'%'            reduce using rule 2
	'%='           reduce using rule 2
	'&&'           reduce using rule 2
	')'            reduce using rule 2
	'*'            reduce using rule 2
	'*='           reduce using rule 2
	'+'            reduce using rule 2
	'+='           reduce using rule 2
	','            reduce using rule 2
	'-'            reduce using rule 2
	'-='           reduce using rule 2
	'..'           reduce using rule 2
	'/'            reduce using rule 2
	'/='           reduce using rule 2
	':'            reduce using rule 2
	';'            reduce using rule 2
	'<'            reduce using rule 2
	'<='           reduce using rule 2
	'='            reduce using rule 2
	'=='           reduce using rule 2
	'>'            reduce using rule 2
	'>='           reduce using rule 2
	'?'            reduce using rule 2
	'?.let'        reduce using rule 2
	']'            reduce using rule 2
	'downTo'       reduce using rule 2
	'step'         reduce using rule 2
	'until'        reduce using rule 2
	'||'           reduce using rule 2


State 72

	Type -> '(' ListType ')' . '->' RetType             (rule 73)

	'->'           shift, and enter state 94


State 73

	ListType -> Type ',' . ListType                     (rule 76)

	'('            shift, and enter state 20
	')'            reduce using rule 74
	'>'            reduce using rule 74
	'Array'        shift, and enter state 21
	'Bool'         shift, and enter state 22
	'Int'          shift, and enter state 23
	'String'       shift, and enter state 24
	'Tupla'        shift, and enter state 25

	BaseType       goto state 18
	Type           goto state 37
	ListType       goto state 93

State 74

	BaseType -> 'Array' '<' Type . '>'                  (rule 68)

	'>'            shift, and enter state 92


State 75

	BaseType -> 'Tupla' '<' ListType . '>'              (rule 64)

	'>'            shift, and enter state 91


State 76

	Exp -> Exp . OpAssign Exp1                          (rule 5)
	Dec -> 'val' Ident ':' Type '=' Exp . ';'           (rule 103)

	'%='           shift, and enter state 84
	'*='           shift, and enter state 85
	'+='           shift, and enter state 86
	'-='           shift, and enter state 87
	'/='           shift, and enter state 88
	';'            shift, and enter state 89
	'='            shift, and enter state 90

	OpAssign       goto state 83

State 77

	Arg -> Ident ':' Type .                             (rule 77)

	')'            reduce using rule 77
	','            reduce using rule 77
	'->'           reduce using rule 77


State 78

	ListArg -> Arg ',' ListArg .                        (rule 80)

	')'            reduce using rule 80
	'->'           reduce using rule 80


State 79

	FunctionDec -> 'fun' Ident '(' ListArg ')' ':' . RetType '{' ListStm '}'    (rule 106)

	'('            shift, and enter state 20
	'Array'        shift, and enter state 21
	'Bool'         shift, and enter state 22
	'Int'          shift, and enter state 23
	'String'       shift, and enter state 24
	'Tupla'        shift, and enter state 25
	'Unit'         shift, and enter state 82

	BaseType       goto state 18
	RetType        goto state 80
	Type           goto state 81

State 80

	FunctionDec -> 'fun' Ident '(' ListArg ')' ':' RetType . '{' ListStm '}'    (rule 106)

	'{'            shift, and enter state 156


State 81

	RetType -> Type .                                   (rule 70)

	')'            reduce using rule 70
	','            reduce using rule 70
	'->'           reduce using rule 70
	';'            reduce using rule 70
	'='            reduce using rule 70
	'>'            reduce using rule 70
	'{'            reduce using rule 70


State 82

	RetType -> 'Unit' .                                 (rule 69)

	')'            reduce using rule 69
	','            reduce using rule 69
	'->'           reduce using rule 69
	';'            reduce using rule 69
	'='            reduce using rule 69
	'>'            reduce using rule 69
	'{'            reduce using rule 69


State 83

	Exp -> Exp OpAssign . Exp1                          (rule 5)

	'!'            shift, and enter state 59
	'('            shift, and enter state 60
	'++'           shift, and enter state 61
	'-'            shift, and enter state 62
	'--'           shift, and enter state 63
	'Array'        shift, and enter state 64
	'Tupla'        shift, and enter state 65
	'['            shift, and enter state 66
	'false'        shift, and enter state 67
	'null'         shift, and enter state 68
	'true'         shift, and enter state 69
	'{'            shift, and enter state 70
	L_integ        shift, and enter state 2
	L_quoted       shift, and enter state 71
	L_ident        shift, and enter state 12

	Integer        goto state 42
	String         goto state 43
	Ident          goto state 44
	Exp1           goto state 155
	Exp2           goto state 47
	Exp3           goto state 48
	Exp4           goto state 49
	Exp5           goto state 50
	Exp6           goto state 51
	Exp7           goto state 52
	Exp8           goto state 53
	Exp9           goto state 54
	Exp10          goto state 55
	Exp11          goto state 56
	Exp12          goto state 57
	FunctionExp    goto state 58

State 84

	OpAssign -> '%=' .                                  (rule 63)

	'!'            reduce using rule 63
	'('            reduce using rule 63
	'++'           reduce using rule 63
	'-'            reduce using rule 63
	'--'           reduce using rule 63
	'Array'        reduce using rule 63
	'Tupla'        reduce using rule 63
	'['            reduce using rule 63
	'false'        reduce using rule 63
	'null'         reduce using rule 63
	'true'         reduce using rule 63
	'{'            reduce using rule 63
	L_integ        reduce using rule 63
	L_quoted       reduce using rule 63
	L_ident        reduce using rule 63


State 85

	OpAssign -> '*=' .                                  (rule 61)

	'!'            reduce using rule 61
	'('            reduce using rule 61
	'++'           reduce using rule 61
	'-'            reduce using rule 61
	'--'           reduce using rule 61
	'Array'        reduce using rule 61
	'Tupla'        reduce using rule 61
	'['            reduce using rule 61
	'false'        reduce using rule 61
	'null'         reduce using rule 61
	'true'         reduce using rule 61
	'{'            reduce using rule 61
	L_integ        reduce using rule 61
	L_quoted       reduce using rule 61
	L_ident        reduce using rule 61


State 86

	OpAssign -> '+=' .                                  (rule 59)

	'!'            reduce using rule 59
	'('            reduce using rule 59
	'++'           reduce using rule 59
	'-'            reduce using rule 59
	'--'           reduce using rule 59
	'Array'        reduce using rule 59
	'Tupla'        reduce using rule 59
	'['            reduce using rule 59
	'false'        reduce using rule 59
	'null'         reduce using rule 59
	'true'         reduce using rule 59
	'{'            reduce using rule 59
	L_integ        reduce using rule 59
	L_quoted       reduce using rule 59
	L_ident        reduce using rule 59


State 87

	OpAssign -> '-=' .                                  (rule 60)

	'!'            reduce using rule 60
	'('            reduce using rule 60
	'++'           reduce using rule 60
	'-'            reduce using rule 60
	'--'           reduce using rule 60
	'Array'        reduce using rule 60
	'Tupla'        reduce using rule 60
	'['            reduce using rule 60
	'false'        reduce using rule 60
	'null'         reduce using rule 60
	'true'         reduce using rule 60
	'{'            reduce using rule 60
	L_integ        reduce using rule 60
	L_quoted       reduce using rule 60
	L_ident        reduce using rule 60


State 88

	OpAssign -> '/=' .                                  (rule 62)

	'!'            reduce using rule 62
	'('            reduce using rule 62
	'++'           reduce using rule 62
	'-'            reduce using rule 62
	'--'           reduce using rule 62
	'Array'        reduce using rule 62
	'Tupla'        reduce using rule 62
	'['            reduce using rule 62
	'false'        reduce using rule 62
	'null'         reduce using rule 62
	'true'         reduce using rule 62
	'{'            reduce using rule 62
	L_integ        reduce using rule 62
	L_quoted       reduce using rule 62
	L_ident        reduce using rule 62


State 89

	Dec -> 'val' Ident ':' Type '=' Exp ';' .           (rule 103)

	'!'            reduce using rule 103
	'('            reduce using rule 103
	'++'           reduce using rule 103
	'-'            reduce using rule 103
	'--'           reduce using rule 103
	'Array'        reduce using rule 103
	'Tupla'        reduce using rule 103
	'['            reduce using rule 103
	'assert'       reduce using rule 103
	'break'        reduce using rule 103
	'continue'     reduce using rule 103
	'false'        reduce using rule 103
	'for'          reduce using rule 103
	'fun'          reduce using rule 103
	'if'           reduce using rule 103
	'null'         reduce using rule 103
	'print'        reduce using rule 103
	'println'      reduce using rule 103
	'return'       reduce using rule 103
	'run'          reduce using rule 103
	'true'         reduce using rule 103
	'val'          reduce using rule 103
	'var'          reduce using rule 103
	'while'        reduce using rule 103
	'{'            reduce using rule 103
	'}'            reduce using rule 103
	L_integ        reduce using rule 103
	L_quoted       reduce using rule 103
	L_ident        reduce using rule 103
	%eof           reduce using rule 103


State 90

	OpAssign -> '=' .                                   (rule 58)

	'!'            reduce using rule 58
	'('            reduce using rule 58
	'++'           reduce using rule 58
	'-'            reduce using rule 58
	'--'           reduce using rule 58
	'Array'        reduce using rule 58
	'Tupla'        reduce using rule 58
	'['            reduce using rule 58
	'false'        reduce using rule 58
	'null'         reduce using rule 58
	'true'         reduce using rule 58
	'{'            reduce using rule 58
	L_integ        reduce using rule 58
	L_quoted       reduce using rule 58
	L_ident        reduce using rule 58


State 91

	BaseType -> 'Tupla' '<' ListType '>' .              (rule 64)

	')'            reduce using rule 64
	','            reduce using rule 64
	'->'           reduce using rule 64
	';'            reduce using rule 64
	'='            reduce using rule 64
	'>'            reduce using rule 64
	'?'            reduce using rule 64
	'{'            reduce using rule 64


State 92

	BaseType -> 'Array' '<' Type '>' .                  (rule 68)

	')'            reduce using rule 68
	','            reduce using rule 68
	'->'           reduce using rule 68
	';'            reduce using rule 68
	'='            reduce using rule 68
	'>'            reduce using rule 68
	'?'            reduce using rule 68
	'{'            reduce using rule 68


State 93

	ListType -> Type ',' ListType .                     (rule 76)

	')'            reduce using rule 76
	'>'            reduce using rule 76


State 94

	Type -> '(' ListType ')' '->' . RetType             (rule 73)

	'('            shift, and enter state 20
	'Array'        shift, and enter state 21
	'Bool'         shift, and enter state 22
	'Int'          shift, and enter state 23
	'String'       shift, and enter state 24
	'Tupla'        shift, and enter state 25
	'Unit'         shift, and enter state 82

	BaseType       goto state 18
	RetType        goto state 154
	Type           goto state 81

State 95

	Exp10 -> '{' ListArg . '->' ListStm '}'             (rule 46)

	'->'           shift, and enter state 153


State 96

	Exp -> Exp . OpAssign Exp1                          (rule 5)
	Iterable -> Exp . '..' Exp                          (rule 108)
	Iterable -> Exp . 'until' Exp                       (rule 109)
	Iterable -> Exp . 'downTo' Exp                      (rule 110)
	Iterable -> Exp . 'until' Exp 'step' Exp            (rule 111)
	Iterable -> Exp . 'downTo' Exp 'step' Exp           (rule 112)

	'%='           shift, and enter state 84
	'*='           shift, and enter state 85
	'+='           shift, and enter state 86
	'-='           shift, and enter state 87
	'..'           shift, and enter state 150
	'/='           shift, and enter state 88
	'='            shift, and enter state 90
	'downTo'       shift, and enter state 151
	'until'        shift, and enter state 152

	OpAssign       goto state 83

State 97

	Exp10 -> '[' Iterable . ']'                         (rule 36)

	']'            shift, and enter state 149


State 98

	Exp10 -> 'Tupla' '(' . ListExp ')'                  (rule 38)

	'!'            shift, and enter state 59
	'('            shift, and enter state 60
	')'            reduce using rule 52
	'++'           shift, and enter state 61
	'-'            shift, and enter state 62
	'--'           shift, and enter state 63
	'Array'        shift, and enter state 64
	'Tupla'        shift, and enter state 65
	'['            shift, and enter state 66
	'false'        shift, and enter state 67
	'null'         shift, and enter state 68
	'true'         shift, and enter state 69
	'{'            shift, and enter state 70
	L_integ        shift, and enter state 2
	L_quoted       shift, and enter state 71
	L_ident        shift, and enter state 12

	Integer        goto state 42
	String         goto state 43
	Ident          goto state 44
	Exp            goto state 129
	Exp1           goto state 46
	Exp2           goto state 47
	Exp3           goto state 48
	Exp4           goto state 49
	Exp5           goto state 50
	Exp6           goto state 51
	Exp7           goto state 52
	Exp8           goto state 53
	Exp9           goto state 54
	Exp10          goto state 55
	Exp11          goto state 56
	Exp12          goto state 57
	ListExp        goto state 148
	FunctionExp    goto state 58

State 99

	Exp10 -> 'Array' '(' . Exp ',' Exp ')'              (rule 37)

	'!'            shift, and enter state 59
	'('            shift, and enter state 60
	'++'           shift, and enter state 61
	'-'            shift, and enter state 62
	'--'           shift, and enter state 63
	'Array'        shift, and enter state 64
	'Tupla'        shift, and enter state 65
	'['            shift, and enter state 66
	'false'        shift, and enter state 67
	'null'         shift, and enter state 68
	'true'         shift, and enter state 69
	'{'            shift, and enter state 70
	L_integ        shift, and enter state 2
	L_quoted       shift, and enter state 71
	L_ident        shift, and enter state 12

	Integer        goto state 42
	String         goto state 43
	Ident          goto state 44
	Exp            goto state 147
	Exp1           goto state 46
	Exp2           goto state 47
	Exp3           goto state 48
	Exp4           goto state 49
	Exp5           goto state 50
	Exp6           goto state 51
	Exp7           goto state 52
	Exp8           goto state 53
	Exp9           goto state 54
	Exp10          goto state 55
	Exp11          goto state 56
	Exp12          goto state 57
	FunctionExp    goto state 58

State 100

	Exp12 -> Ident .                                    (rule 50)

	'!='           reduce using rule 50
	'%'            reduce using rule 50
	'%='           reduce using rule 50
	'&&'           reduce using rule 50
	')'            reduce using rule 50
	'*'            reduce using rule 50
	'*='           reduce using rule 50
	'+'            reduce using rule 50
	'+='           reduce using rule 50
	','            reduce using rule 50
	'-'            reduce using rule 50
	'-='           reduce using rule 50
	'..'           reduce using rule 50
	'/'            reduce using rule 50
	'/='           reduce using rule 50
	':'            reduce using rule 50
	';'            reduce using rule 50
	'<'            reduce using rule 50
	'<='           reduce using rule 50
	'='            reduce using rule 50
	'=='           reduce using rule 50
	'>'            reduce using rule 50
	'>='           reduce using rule 50
	'?'            reduce using rule 50
	'?.let'        reduce using rule 50
	']'            reduce using rule 50
	'downTo'       reduce using rule 50
	'step'         reduce using rule 50
	'until'        reduce using rule 50
	'||'           reduce using rule 50


State 101

	Exp8 -> '--' Exp12 .                                (rule 31)

	'!='           reduce using rule 31
	'%'            reduce using rule 31
	'%='           reduce using rule 31
	'&&'           reduce using rule 31
	')'            reduce using rule 31
	'*'            reduce using rule 31
	'*='           reduce using rule 31
	'+'            reduce using rule 31
	'+='           reduce using rule 31
	','            reduce using rule 31
	'-'            reduce using rule 31
	'-='           reduce using rule 31
	'..'           reduce using rule 31
	'/'            reduce using rule 31
	'/='           reduce using rule 31
	':'            reduce using rule 31
	';'            reduce using rule 31
	'<'            reduce using rule 31
	'<='           reduce using rule 31
	'='            reduce using rule 31
	'=='           reduce using rule 31
	'>'            reduce using rule 31
	'>='           reduce using rule 31
	'?'            reduce using rule 31
	'?.let'        reduce using rule 31
	']'            reduce using rule 31
	'downTo'       reduce using rule 31
	'step'         reduce using rule 31
	'until'        reduce using rule 31
	'||'           reduce using rule 31


State 102

	Exp8 -> '-' Exp8 .                                  (rule 28)

	'!='           reduce using rule 28
	'%'            reduce using rule 28
	'%='           reduce using rule 28
	'&&'           reduce using rule 28
	')'            reduce using rule 28
	'*'            reduce using rule 28
	'*='           reduce using rule 28
	'+'            reduce using rule 28
	'+='           reduce using rule 28
	','            reduce using rule 28
	'-'            reduce using rule 28
	'-='           reduce using rule 28
	'..'           reduce using rule 28
	'/'            reduce using rule 28
	'/='           reduce using rule 28
	':'            reduce using rule 28
	';'            reduce using rule 28
	'<'            reduce using rule 28
	'<='           reduce using rule 28
	'='            reduce using rule 28
	'=='           reduce using rule 28
	'>'            reduce using rule 28
	'>='           reduce using rule 28
	'?'            reduce using rule 28
	'?.let'        reduce using rule 28
	']'            reduce using rule 28
	'downTo'       reduce using rule 28
	'step'         reduce using rule 28
	'until'        reduce using rule 28
	'||'           reduce using rule 28


State 103

	Exp8 -> '++' Exp12 .                                (rule 30)

	'!='           reduce using rule 30
	'%'            reduce using rule 30
	'%='           reduce using rule 30
	'&&'           reduce using rule 30
	')'            reduce using rule 30
	'*'            reduce using rule 30
	'*='           reduce using rule 30
	'+'            reduce using rule 30
	'+='           reduce using rule 30
	','            reduce using rule 30
	'-'            reduce using rule 30
	'-='           reduce using rule 30
	'..'           reduce using rule 30
	'/'            reduce using rule 30
	'/='           reduce using rule 30
	':'            reduce using rule 30
	';'            reduce using rule 30
	'<'            reduce using rule 30
	'<='           reduce using rule 30
	'='            reduce using rule 30
	'=='           reduce using rule 30
	'>'            reduce using rule 30
	'>='           reduce using rule 30
	'?'            reduce using rule 30
	'?.let'        reduce using rule 30
	']'            reduce using rule 30
	'downTo'       reduce using rule 30
	'step'         reduce using rule 30
	'until'        reduce using rule 30
	'||'           reduce using rule 30


State 104

	Exp -> Exp . OpAssign Exp1                          (rule 5)
	Exp12 -> '(' Exp . ')'                              (rule 51)

	'%='           shift, and enter state 84
	')'            shift, and enter state 146
	'*='           shift, and enter state 85
	'+='           shift, and enter state 86
	'-='           shift, and enter state 87
	'/='           shift, and enter state 88
	'='            shift, and enter state 90

	OpAssign       goto state 83

State 105

	Exp8 -> '!' Exp8 .                                  (rule 29)

	'!='           reduce using rule 29
	'%'            reduce using rule 29
	'%='           reduce using rule 29
	'&&'           reduce using rule 29
	')'            reduce using rule 29
	'*'            reduce using rule 29
	'*='           reduce using rule 29
	'+'            reduce using rule 29
	'+='           reduce using rule 29
	','            reduce using rule 29
	'-'            reduce using rule 29
	'-='           reduce using rule 29
	'..'           reduce using rule 29
	'/'            reduce using rule 29
	'/='           reduce using rule 29
	':'            reduce using rule 29
	';'            reduce using rule 29
	'<'            reduce using rule 29
	'<='           reduce using rule 29
	'='            reduce using rule 29
	'=='           reduce using rule 29
	'>'            reduce using rule 29
	'>='           reduce using rule 29
	'?'            reduce using rule 29
	'?.let'        reduce using rule 29
	']'            reduce using rule 29
	'downTo'       reduce using rule 29
	'step'         reduce using rule 29
	'until'        reduce using rule 29
	'||'           reduce using rule 29


State 106

	Exp11 -> Exp12 '!!' .                               (rule 48)

	'!='           reduce using rule 48
	'%'            reduce using rule 48
	'%='           reduce using rule 48
	'&&'           reduce using rule 48
	')'            reduce using rule 48
	'*'            reduce using rule 48
	'*='           reduce using rule 48
	'+'            reduce using rule 48
	'+='           reduce using rule 48
	','            reduce using rule 48
	'-'            reduce using rule 48
	'-='           reduce using rule 48
	'..'           reduce using rule 48
	'/'            reduce using rule 48
	'/='           reduce using rule 48
	':'            reduce using rule 48
	';'            reduce using rule 48
	'<'            reduce using rule 48
	'<='           reduce using rule 48
	'='            reduce using rule 48
	'=='           reduce using rule 48
	'>'            reduce using rule 48
	'>='           reduce using rule 48
	'?'            reduce using rule 48
	'?.let'        reduce using rule 48
	']'            reduce using rule 48
	'downTo'       reduce using rule 48
	'step'         reduce using rule 48
	'until'        reduce using rule 48
	'||'           reduce using rule 48


State 107

	Exp9 -> Exp12 '++' .                                (rule 33)

	'!='           reduce using rule 33
	'%'            reduce using rule 33
	'%='           reduce using rule 33
	'&&'           reduce using rule 33
	')'            reduce using rule 33
	'*'            reduce using rule 33
	'*='           reduce using rule 33
	'+'            reduce using rule 33
	'+='           reduce using rule 33
	','            reduce using rule 33
	'-'            reduce using rule 33
	'-='           reduce using rule 33
	'..'           reduce using rule 33
	'/'            reduce using rule 33
	'/='           reduce using rule 33
	':'            reduce using rule 33
	';'            reduce using rule 33
	'<'            reduce using rule 33
	'<='           reduce using rule 33
	'='            reduce using rule 33
	'=='           reduce using rule 33
	'>'            reduce using rule 33
	'>='           reduce using rule 33
	'?'            reduce using rule 33
	'?.let'        reduce using rule 33
	']'            reduce using rule 33
	'downTo'       reduce using rule 33
	'step'         reduce using rule 33
	'until'        reduce using rule 33
	'||'           reduce using rule 33


State 108

	Exp9 -> Exp12 '--' .                                (rule 34)

	'!='           reduce using rule 34
	'%'            reduce using rule 34
	'%='           reduce using rule 34
	'&&'           reduce using rule 34
	')'            reduce using rule 34
	'*'            reduce using rule 34
	'*='           reduce using rule 34
	'+'            reduce using rule 34
	'+='           reduce using rule 34
	','            reduce using rule 34
	'-'            reduce using rule 34
	'-='           reduce using rule 34
	'..'           reduce using rule 34
	'/'            reduce using rule 34
	'/='           reduce using rule 34
	':'            reduce using rule 34
	';'            reduce using rule 34
	'<'            reduce using rule 34
	'<='           reduce using rule 34
	'='            reduce using rule 34
	'=='           reduce using rule 34
	'>'            reduce using rule 34
	'>='           reduce using rule 34
	'?'            reduce using rule 34
	'?.let'        reduce using rule 34
	']'            reduce using rule 34
	'downTo'       reduce using rule 34
	'step'         reduce using rule 34
	'until'        reduce using rule 34
	'||'           reduce using rule 34


State 109

	Exp7 -> Exp7 '%' . Exp8                             (rule 26)

	'!'            shift, and enter state 59
	'('            shift, and enter state 60
	'++'           shift, and enter state 61
	'-'            shift, and enter state 62
	'--'           shift, and enter state 63
	'Array'        shift, and enter state 64
	'Tupla'        shift, and enter state 65
	'['            shift, and enter state 66
	'false'        shift, and enter state 67
	'null'         shift, and enter state 68
	'true'         shift, and enter state 69
	'{'            shift, and enter state 70
	L_integ        shift, and enter state 2
	L_quoted       shift, and enter state 71
	L_ident        shift, and enter state 12

	Integer        goto state 42
	String         goto state 43
	Ident          goto state 44
	Exp8           goto state 145
	Exp9           goto state 54
	Exp10          goto state 55
	Exp11          goto state 56
	Exp12          goto state 57
	FunctionExp    goto state 58

State 110

	Exp7 -> Exp7 '*' . Exp8                             (rule 24)

	'!'            shift, and enter state 59
	'('            shift, and enter state 60
	'++'           shift, and enter state 61
	'-'            shift, and enter state 62
	'--'           shift, and enter state 63
	'Array'        shift, and enter state 64
	'Tupla'        shift, and enter state 65
	'['            shift, and enter state 66
	'false'        shift, and enter state 67
	'null'         shift, and enter state 68
	'true'         shift, and enter state 69
	'{'            shift, and enter state 70
	L_integ        shift, and enter state 2
	L_quoted       shift, and enter state 71
	L_ident        shift, and enter state 12

	Integer        goto state 42
	String         goto state 43
	Ident          goto state 44
	Exp8           goto state 144
	Exp9           goto state 54
	Exp10          goto state 55
	Exp11          goto state 56
	Exp12          goto state 57
	FunctionExp    goto state 58

State 111

	Exp7 -> Exp7 '/' . Exp8                             (rule 25)

	'!'            shift, and enter state 59
	'('            shift, and enter state 60
	'++'           shift, and enter state 61
	'-'            shift, and enter state 62
	'--'           shift, and enter state 63
	'Array'        shift, and enter state 64
	'Tupla'        shift, and enter state 65
	'['            shift, and enter state 66
	'false'        shift, and enter state 67
	'null'         shift, and enter state 68
	'true'         shift, and enter state 69
	'{'            shift, and enter state 70
	L_integ        shift, and enter state 2
	L_quoted       shift, and enter state 71
	L_ident        shift, and enter state 12

	Integer        goto state 42
	String         goto state 43
	Ident          goto state 44
	Exp8           goto state 143
	Exp9           goto state 54
	Exp10          goto state 55
	Exp11          goto state 56
	Exp12          goto state 57
	FunctionExp    goto state 58

State 112

	Exp6 -> Exp6 '+' . Exp7                             (rule 21)

	'!'            shift, and enter state 59
	'('            shift, and enter state 60
	'++'           shift, and enter state 61
	'-'            shift, and enter state 62
	'--'           shift, and enter state 63
	'Array'        shift, and enter state 64
	'Tupla'        shift, and enter state 65
	'['            shift, and enter state 66
	'false'        shift, and enter state 67
	'null'         shift, and enter state 68
	'true'         shift, and enter state 69
	'{'            shift, and enter state 70
	L_integ        shift, and enter state 2
	L_quoted       shift, and enter state 71
	L_ident        shift, and enter state 12

	Integer        goto state 42
	String         goto state 43
	Ident          goto state 44
	Exp7           goto state 142
	Exp8           goto state 53
	Exp9           goto state 54
	Exp10          goto state 55
	Exp11          goto state 56
	Exp12          goto state 57
	FunctionExp    goto state 58

State 113

	Exp6 -> Exp6 '-' . Exp7                             (rule 22)

	'!'            shift, and enter state 59
	'('            shift, and enter state 60
	'++'           shift, and enter state 61
	'-'            shift, and enter state 62
	'--'           shift, and enter state 63
	'Array'        shift, and enter state 64
	'Tupla'        shift, and enter state 65
	'['            shift, and enter state 66
	'false'        shift, and enter state 67
	'null'         shift, and enter state 68
	'true'         shift, and enter state 69
	'{'            shift, and enter state 70
	L_integ        shift, and enter state 2
	L_quoted       shift, and enter state 71
	L_ident        shift, and enter state 12

	Integer        goto state 42
	String         goto state 43
	Ident          goto state 44
	Exp7           goto state 141
	Exp8           goto state 53
	Exp9           goto state 54
	Exp10          goto state 55
	Exp11          goto state 56
	Exp12          goto state 57
	FunctionExp    goto state 58

State 114

	Exp5 -> Exp5 '<' . Exp6                             (rule 16)

	'!'            shift, and enter state 59
	'('            shift, and enter state 60
	'++'           shift, and enter state 61
	'-'            shift, and enter state 62
	'--'           shift, and enter state 63
	'Array'        shift, and enter state 64
	'Tupla'        shift, and enter state 65
	'['            shift, and enter state 66
	'false'        shift, and enter state 67
	'null'         shift, and enter state 68
	'true'         shift, and enter state 69
	'{'            shift, and enter state 70
	L_integ        shift, and enter state 2
	L_quoted       shift, and enter state 71
	L_ident        shift, and enter state 12

	Integer        goto state 42
	String         goto state 43
	Ident          goto state 44
	Exp6           goto state 140
	Exp7           goto state 52
	Exp8           goto state 53
	Exp9           goto state 54
	Exp10          goto state 55
	Exp11          goto state 56
	Exp12          goto state 57
	FunctionExp    goto state 58

State 115

	Exp5 -> Exp5 '<=' . Exp6                            (rule 18)

	'!'            shift, and enter state 59
	'('            shift, and enter state 60
	'++'           shift, and enter state 61
	'-'            shift, and enter state 62
	'--'           shift, and enter state 63
	'Array'        shift, and enter state 64
	'Tupla'        shift, and enter state 65
	'['            shift, and enter state 66
	'false'        shift, and enter state 67
	'null'         shift, and enter state 68
	'true'         shift, and enter state 69
	'{'            shift, and enter state 70
	L_integ        shift, and enter state 2
	L_quoted       shift, and enter state 71
	L_ident        shift, and enter state 12

	Integer        goto state 42
	String         goto state 43
	Ident          goto state 44
	Exp6           goto state 139
	Exp7           goto state 52
	Exp8           goto state 53
	Exp9           goto state 54
	Exp10          goto state 55
	Exp11          goto state 56
	Exp12          goto state 57
	FunctionExp    goto state 58

State 116

	Exp5 -> Exp5 '>' . Exp6                             (rule 17)

	'!'            shift, and enter state 59
	'('            shift, and enter state 60
	'++'           shift, and enter state 61
	'-'            shift, and enter state 62
	'--'           shift, and enter state 63
	'Array'        shift, and enter state 64
	'Tupla'        shift, and enter state 65
	'['            shift, and enter state 66
	'false'        shift, and enter state 67
	'null'         shift, and enter state 68
	'true'         shift, and enter state 69
	'{'            shift, and enter state 70
	L_integ        shift, and enter state 2
	L_quoted       shift, and enter state 71
	L_ident        shift, and enter state 12

	Integer        goto state 42
	String         goto state 43
	Ident          goto state 44
	Exp6           goto state 138
	Exp7           goto state 52
	Exp8           goto state 53
	Exp9           goto state 54
	Exp10          goto state 55
	Exp11          goto state 56
	Exp12          goto state 57
	FunctionExp    goto state 58

State 117

	Exp5 -> Exp5 '>=' . Exp6                            (rule 19)

	'!'            shift, and enter state 59
	'('            shift, and enter state 60
	'++'           shift, and enter state 61
	'-'            shift, and enter state 62
	'--'           shift, and enter state 63
	'Array'        shift, and enter state 64
	'Tupla'        shift, and enter state 65
	'['            shift, and enter state 66
	'false'        shift, and enter state 67
	'null'         shift, and enter state 68
	'true'         shift, and enter state 69
	'{'            shift, and enter state 70
	L_integ        shift, and enter state 2
	L_quoted       shift, and enter state 71
	L_ident        shift, and enter state 12

	Integer        goto state 42
	String         goto state 43
	Ident          goto state 44
	Exp6           goto state 137
	Exp7           goto state 52
	Exp8           goto state 53
	Exp9           goto state 54
	Exp10          goto state 55
	Exp11          goto state 56
	Exp12          goto state 57
	FunctionExp    goto state 58

State 118

	Exp4 -> Exp4 '!=' . Exp5                            (rule 14)

	'!'            shift, and enter state 59
	'('            shift, and enter state 60
	'++'           shift, and enter state 61
	'-'            shift, and enter state 62
	'--'           shift, and enter state 63
	'Array'        shift, and enter state 64
	'Tupla'        shift, and enter state 65
	'['            shift, and enter state 66
	'false'        shift, and enter state 67
	'null'         shift, and enter state 68
	'true'         shift, and enter state 69
	'{'            shift, and enter state 70
	L_integ        shift, and enter state 2
	L_quoted       shift, and enter state 71
	L_ident        shift, and enter state 12

	Integer        goto state 42
	String         goto state 43
	Ident          goto state 44
	Exp5           goto state 136
	Exp6           goto state 51
	Exp7           goto state 52
	Exp8           goto state 53
	Exp9           goto state 54
	Exp10          goto state 55
	Exp11          goto state 56
	Exp12          goto state 57
	FunctionExp    goto state 58

State 119

	Exp4 -> Exp4 '==' . Exp5                            (rule 13)

	'!'            shift, and enter state 59
	'('            shift, and enter state 60
	'++'           shift, and enter state 61
	'-'            shift, and enter state 62
	'--'           shift, and enter state 63
	'Array'        shift, and enter state 64
	'Tupla'        shift, and enter state 65
	'['            shift, and enter state 66
	'false'        shift, and enter state 67
	'null'         shift, and enter state 68
	'true'         shift, and enter state 69
	'{'            shift, and enter state 70
	L_integ        shift, and enter state 2
	L_quoted       shift, and enter state 71
	L_ident        shift, and enter state 12

	Integer        goto state 42
	String         goto state 43
	Ident          goto state 44
	Exp5           goto state 135
	Exp6           goto state 51
	Exp7           goto state 52
	Exp8           goto state 53
	Exp9           goto state 54
	Exp10          goto state 55
	Exp11          goto state 56
	Exp12          goto state 57
	FunctionExp    goto state 58

State 120

	Exp3 -> Exp3 '&&' . Exp4                            (rule 11)

	'!'            shift, and enter state 59
	'('            shift, and enter state 60
	'++'           shift, and enter state 61
	'-'            shift, and enter state 62
	'--'           shift, and enter state 63
	'Array'        shift, and enter state 64
	'Tupla'        shift, and enter state 65
	'['            shift, and enter state 66
	'false'        shift, and enter state 67
	'null'         shift, and enter state 68
	'true'         shift, and enter state 69
	'{'            shift, and enter state 70
	L_integ        shift, and enter state 2
	L_quoted       shift, and enter state 71
	L_ident        shift, and enter state 12

	Integer        goto state 42
	String         goto state 43
	Ident          goto state 44
	Exp4           goto state 134
	Exp5           goto state 50
	Exp6           goto state 51
	Exp7           goto state 52
	Exp8           goto state 53
	Exp9           goto state 54
	Exp10          goto state 55
	Exp11          goto state 56
	Exp12          goto state 57
	FunctionExp    goto state 58

State 121

	Exp1 -> Exp3 '?' . Exp1 ':' Exp2                    (rule 7)

	'!'            shift, and enter state 59
	'('            shift, and enter state 60
	'++'           shift, and enter state 61
	'-'            shift, and enter state 62
	'--'           shift, and enter state 63
	'Array'        shift, and enter state 64
	'Tupla'        shift, and enter state 65
	'['            shift, and enter state 66
	'false'        shift, and enter state 67
	'null'         shift, and enter state 68
	'true'         shift, and enter state 69
	'{'            shift, and enter state 70
	L_integ        shift, and enter state 2
	L_quoted       shift, and enter state 71
	L_ident        shift, and enter state 12

	Integer        goto state 42
	String         goto state 43
	Ident          goto state 44
	Exp1           goto state 133
	Exp2           goto state 47
	Exp3           goto state 48
	Exp4           goto state 49
	Exp5           goto state 50
	Exp6           goto state 51
	Exp7           goto state 52
	Exp8           goto state 53
	Exp9           goto state 54
	Exp10          goto state 55
	Exp11          goto state 56
	Exp12          goto state 57
	FunctionExp    goto state 58

State 122

	Exp2 -> Exp2 '||' . Exp3                            (rule 9)

	'!'            shift, and enter state 59
	'('            shift, and enter state 60
	'++'           shift, and enter state 61
	'-'            shift, and enter state 62
	'--'           shift, and enter state 63
	'Array'        shift, and enter state 64
	'Tupla'        shift, and enter state 65
	'['            shift, and enter state 66
	'false'        shift, and enter state 67
	'null'         shift, and enter state 68
	'true'         shift, and enter state 69
	'{'            shift, and enter state 70
	L_integ        shift, and enter state 2
	L_quoted       shift, and enter state 71
	L_ident        shift, and enter state 12

	Integer        goto state 42
	String         goto state 43
	Ident          goto state 44
	Exp3           goto state 132
	Exp4           goto state 49
	Exp5           goto state 50
	Exp6           goto state 51
	Exp7           goto state 52
	Exp8           goto state 53
	Exp9           goto state 54
	Exp10          goto state 55
	Exp11          goto state 56
	Exp12          goto state 57
	FunctionExp    goto state 58

State 123

	Dec -> 'var' Ident ':' Type '=' Exp ';' .           (rule 102)

	'!'            reduce using rule 102
	'('            reduce using rule 102
	'++'           reduce using rule 102
	'-'            reduce using rule 102
	'--'           reduce using rule 102
	'Array'        reduce using rule 102
	'Tupla'        reduce using rule 102
	'['            reduce using rule 102
	'assert'       reduce using rule 102
	'break'        reduce using rule 102
	'continue'     reduce using rule 102
	'false'        reduce using rule 102
	'for'          reduce using rule 102
	'fun'          reduce using rule 102
	'if'           reduce using rule 102
	'null'         reduce using rule 102
	'print'        reduce using rule 102
	'println'      reduce using rule 102
	'return'       reduce using rule 102
	'run'          reduce using rule 102
	'true'         reduce using rule 102
	'val'          reduce using rule 102
	'var'          reduce using rule 102
	'while'        reduce using rule 102
	'{'            reduce using rule 102
	'}'            reduce using rule 102
	L_integ        reduce using rule 102
	L_quoted       reduce using rule 102
	L_ident        reduce using rule 102
	%eof           reduce using rule 102


State 124

	ListDimExp -> DimExp .                              (rule 56)
	ListDimExp -> DimExp . ListDimExp                   (rule 57)

	'!='           reduce using rule 56
	'%'            reduce using rule 56
	'%='           reduce using rule 56
	'&&'           reduce using rule 56
	')'            reduce using rule 56
	'*'            reduce using rule 56
	'*='           reduce using rule 56
	'+'            reduce using rule 56
	'+='           reduce using rule 56
	','            reduce using rule 56
	'-'            reduce using rule 56
	'-='           reduce using rule 56
	'..'           reduce using rule 56
	'/'            reduce using rule 56
	'/='           reduce using rule 56
	':'            reduce using rule 56
	';'            reduce using rule 56
	'<'            reduce using rule 56
	'<='           reduce using rule 56
	'='            reduce using rule 56
	'=='           reduce using rule 56
	'>'            reduce using rule 56
	'>='           reduce using rule 56
	'?'            reduce using rule 56
	'?.let'        reduce using rule 56
	'['            shift, and enter state 127
	']'            reduce using rule 56
	'downTo'       reduce using rule 56
	'step'         reduce using rule 56
	'until'        reduce using rule 56
	'||'           reduce using rule 56

	DimExp         goto state 124
	ListDimExp     goto state 131

State 125

	Exp10 -> Ident ListDimExp .                         (rule 45)

	'!='           reduce using rule 45
	'%'            reduce using rule 45
	'%='           reduce using rule 45
	'&&'           reduce using rule 45
	')'            reduce using rule 45
	'*'            reduce using rule 45
	'*='           reduce using rule 45
	'+'            reduce using rule 45
	'+='           reduce using rule 45
	','            reduce using rule 45
	'-'            reduce using rule 45
	'-='           reduce using rule 45
	'..'           reduce using rule 45
	'/'            reduce using rule 45
	'/='           reduce using rule 45
	':'            reduce using rule 45
	';'            reduce using rule 45
	'<'            reduce using rule 45
	'<='           reduce using rule 45
	'='            reduce using rule 45
	'=='           reduce using rule 45
	'>'            reduce using rule 45
	'>='           reduce using rule 45
	'?'            reduce using rule 45
	'?.let'        reduce using rule 45
	']'            reduce using rule 45
	'downTo'       reduce using rule 45
	'step'         reduce using rule 45
	'until'        reduce using rule 45
	'||'           reduce using rule 45


State 126

	FunctionExp -> Ident '(' . ListExp ')'              (rule 107)

	'!'            shift, and enter state 59
	'('            shift, and enter state 60
	')'            reduce using rule 52
	'++'           shift, and enter state 61
	'-'            shift, and enter state 62
	'--'           shift, and enter state 63
	'Array'        shift, and enter state 64
	'Tupla'        shift, and enter state 65
	'['            shift, and enter state 66
	'false'        shift, and enter state 67
	'null'         shift, and enter state 68
	'true'         shift, and enter state 69
	'{'            shift, and enter state 70
	L_integ        shift, and enter state 2
	L_quoted       shift, and enter state 71
	L_ident        shift, and enter state 12

	Integer        goto state 42
	String         goto state 43
	Ident          goto state 44
	Exp            goto state 129
	Exp1           goto state 46
	Exp2           goto state 47
	Exp3           goto state 48
	Exp4           goto state 49
	Exp5           goto state 50
	Exp6           goto state 51
	Exp7           goto state 52
	Exp8           goto state 53
	Exp9           goto state 54
	Exp10          goto state 55
	Exp11          goto state 56
	Exp12          goto state 57
	ListExp        goto state 130
	FunctionExp    goto state 58

State 127

	DimExp -> '[' . Exp ']'                             (rule 55)

	'!'            shift, and enter state 59
	'('            shift, and enter state 60
	'++'           shift, and enter state 61
	'-'            shift, and enter state 62
	'--'           shift, and enter state 63
	'Array'        shift, and enter state 64
	'Tupla'        shift, and enter state 65
	'['            shift, and enter state 66
	'false'        shift, and enter state 67
	'null'         shift, and enter state 68
	'true'         shift, and enter state 69
	'{'            shift, and enter state 70
	L_integ        shift, and enter state 2
	L_quoted       shift, and enter state 71
	L_ident        shift, and enter state 12

	Integer        goto state 42
	String         goto state 43
	Ident          goto state 44
	Exp            goto state 128
	Exp1           goto state 46
	Exp2           goto state 47
	Exp3           goto state 48
	Exp4           goto state 49
	Exp5           goto state 50
	Exp6           goto state 51
	Exp7           goto state 52
	Exp8           goto state 53
	Exp9           goto state 54
	Exp10          goto state 55
	Exp11          goto state 56
	Exp12          goto state 57
	FunctionExp    goto state 58

State 128

	Exp -> Exp . OpAssign Exp1                          (rule 5)
	DimExp -> '[' Exp . ']'                             (rule 55)

	'%='           shift, and enter state 84
	'*='           shift, and enter state 85
	'+='           shift, and enter state 86
	'-='           shift, and enter state 87
	'/='           shift, and enter state 88
	'='            shift, and enter state 90
	']'            shift, and enter state 167

	OpAssign       goto state 83

State 129

	Exp -> Exp . OpAssign Exp1                          (rule 5)
	ListExp -> Exp .                                    (rule 53)
	ListExp -> Exp . ',' ListExp                        (rule 54)

	'%='           shift, and enter state 84
	')'            reduce using rule 53
	'*='           shift, and enter state 85
	'+='           shift, and enter state 86
	','            shift, and enter state 166
	'-='           shift, and enter state 87
	'/='           shift, and enter state 88
	'='            shift, and enter state 90

	OpAssign       goto state 83

State 130

	FunctionExp -> Ident '(' ListExp . ')'              (rule 107)

	')'            shift, and enter state 165


State 131

	ListDimExp -> DimExp ListDimExp .                   (rule 57)

	'!='           reduce using rule 57
	'%'            reduce using rule 57
	'%='           reduce using rule 57
	'&&'           reduce using rule 57
	')'            reduce using rule 57
	'*'            reduce using rule 57
	'*='           reduce using rule 57
	'+'            reduce using rule 57
	'+='           reduce using rule 57
	','            reduce using rule 57
	'-'            reduce using rule 57
	'-='           reduce using rule 57
	'..'           reduce using rule 57
	'/'            reduce using rule 57
	'/='           reduce using rule 57
	':'            reduce using rule 57
	';'            reduce using rule 57
	'<'            reduce using rule 57
	'<='           reduce using rule 57
	'='            reduce using rule 57
	'=='           reduce using rule 57
	'>'            reduce using rule 57
	'>='           reduce using rule 57
	'?'            reduce using rule 57
	'?.let'        reduce using rule 57
	']'            reduce using rule 57
	'downTo'       reduce using rule 57
	'step'         reduce using rule 57
	'until'        reduce using rule 57
	'||'           reduce using rule 57


State 132

	Exp2 -> Exp2 '||' Exp3 .                            (rule 9)
	Exp3 -> Exp3 . '&&' Exp4                            (rule 11)

	'%='           reduce using rule 9
	'&&'           shift, and enter state 120
	')'            reduce using rule 9
	'*='           reduce using rule 9
	'+='           reduce using rule 9
	','            reduce using rule 9
	'-='           reduce using rule 9
	'..'           reduce using rule 9
	'/='           reduce using rule 9
	':'            reduce using rule 9
	';'            reduce using rule 9
	'='            reduce using rule 9
	'?.let'        reduce using rule 9
	']'            reduce using rule 9
	'downTo'       reduce using rule 9
	'step'         reduce using rule 9
	'until'        reduce using rule 9
	'||'           reduce using rule 9


State 133

	Exp1 -> Exp3 '?' Exp1 . ':' Exp2                    (rule 7)

	':'            shift, and enter state 164


State 134

	Exp3 -> Exp3 '&&' Exp4 .                            (rule 11)
	Exp4 -> Exp4 . '==' Exp5                            (rule 13)
	Exp4 -> Exp4 . '!=' Exp5                            (rule 14)

	'!='           shift, and enter state 118
	'%='           reduce using rule 11
	'&&'           reduce using rule 11
	')'            reduce using rule 11
	'*='           reduce using rule 11
	'+='           reduce using rule 11
	','            reduce using rule 11
	'-='           reduce using rule 11
	'..'           reduce using rule 11
	'/='           reduce using rule 11
	':'            reduce using rule 11
	';'            reduce using rule 11
	'='            reduce using rule 11
	'=='           shift, and enter state 119
	'?'            reduce using rule 11
	'?.let'        reduce using rule 11
	']'            reduce using rule 11
	'downTo'       reduce using rule 11
	'step'         reduce using rule 11
	'until'        reduce using rule 11
	'||'           reduce using rule 11


State 135

	Exp4 -> Exp4 '==' Exp5 .                            (rule 13)
	Exp5 -> Exp5 . '<' Exp6                             (rule 16)
	Exp5 -> Exp5 . '>' Exp6                             (rule 17)
	Exp5 -> Exp5 . '<=' Exp6                            (rule 18)
	Exp5 -> Exp5 . '>=' Exp6                            (rule 19)

	'!='           reduce using rule 13
	'%='           reduce using rule 13
	'&&'           reduce using rule 13
	')'            reduce using rule 13
	'*='           reduce using rule 13
	'+='           reduce using rule 13
	','            reduce using rule 13
	'-='           reduce using rule 13
	'..'           reduce using rule 13
	'/='           reduce using rule 13
	':'            reduce using rule 13
	';'            reduce using rule 13
	'<'            shift, and enter state 114
	'<='           shift, and enter state 115
	'='            reduce using rule 13
	'=='           reduce using rule 13
	'>'            shift, and enter state 116
	'>='           shift, and enter state 117
	'?'            reduce using rule 13
	'?.let'        reduce using rule 13
	']'            reduce using rule 13
	'downTo'       reduce using rule 13
	'step'         reduce using rule 13
	'until'        reduce using rule 13
	'||'           reduce using rule 13


State 136

	Exp4 -> Exp4 '!=' Exp5 .                            (rule 14)
	Exp5 -> Exp5 . '<' Exp6                             (rule 16)
	Exp5 -> Exp5 . '>' Exp6                             (rule 17)
	Exp5 -> Exp5 . '<=' Exp6                            (rule 18)
	Exp5 -> Exp5 . '>=' Exp6                            (rule 19)

	'!='           reduce using rule 14
	'%='           reduce using rule 14
	'&&'           reduce using rule 14
	')'            reduce using rule 14
	'*='           reduce using rule 14
	'+='           reduce using rule 14
	','            reduce using rule 14
	'-='           reduce using rule 14
	'..'           reduce using rule 14
	'/='           reduce using rule 14
	':'            reduce using rule 14
	';'            reduce using rule 14
	'<'            shift, and enter state 114
	'<='           shift, and enter state 115
	'='            reduce using rule 14
	'=='           reduce using rule 14
	'>'            shift, and enter state 116
	'>='           shift, and enter state 117
	'?'            reduce using rule 14
	'?.let'        reduce using rule 14
	']'            reduce using rule 14
	'downTo'       reduce using rule 14
	'step'         reduce using rule 14
	'until'        reduce using rule 14
	'||'           reduce using rule 14


State 137

	Exp5 -> Exp5 '>=' Exp6 .                            (rule 19)
	Exp6 -> Exp6 . '+' Exp7                             (rule 21)
	Exp6 -> Exp6 . '-' Exp7                             (rule 22)

	'!='           reduce using rule 19
	'%='           reduce using rule 19
	'&&'           reduce using rule 19
	')'            reduce using rule 19
	'*='           reduce using rule 19
	'+'            shift, and enter state 112
	'+='           reduce using rule 19
	','            reduce using rule 19
	'-'            shift, and enter state 113
	'-='           reduce using rule 19
	'..'           reduce using rule 19
	'/='           reduce using rule 19
	':'            reduce using rule 19
	';'            reduce using rule 19
	'<'            reduce using rule 19
	'<='           reduce using rule 19
	'='            reduce using rule 19
	'=='           reduce using rule 19
	'>'            reduce using rule 19
	'>='           reduce using rule 19
	'?'            reduce using rule 19
	'?.let'        reduce using rule 19
	']'            reduce using rule 19
	'downTo'       reduce using rule 19
	'step'         reduce using rule 19
	'until'        reduce using rule 19
	'||'           reduce using rule 19


State 138

	Exp5 -> Exp5 '>' Exp6 .                             (rule 17)
	Exp6 -> Exp6 . '+' Exp7                             (rule 21)
	Exp6 -> Exp6 . '-' Exp7                             (rule 22)

	'!='           reduce using rule 17
	'%='           reduce using rule 17
	'&&'           reduce using rule 17
	')'            reduce using rule 17
	'*='           reduce using rule 17
	'+'            shift, and enter state 112
	'+='           reduce using rule 17
	','            reduce using rule 17
	'-'            shift, and enter state 113
	'-='           reduce using rule 17
	'..'           reduce using rule 17
	'/='           reduce using rule 17
	':'            reduce using rule 17
	';'            reduce using rule 17
	'<'            reduce using rule 17
	'<='           reduce using rule 17
	'='            reduce using rule 17
	'=='           reduce using rule 17
	'>'            reduce using rule 17
	'>='           reduce using rule 17
	'?'            reduce using rule 17
	'?.let'        reduce using rule 17
	']'            reduce using rule 17
	'downTo'       reduce using rule 17
	'step'         reduce using rule 17
	'until'        reduce using rule 17
	'||'           reduce using rule 17


State 139

	Exp5 -> Exp5 '<=' Exp6 .                            (rule 18)
	Exp6 -> Exp6 . '+' Exp7                             (rule 21)
	Exp6 -> Exp6 . '-' Exp7                             (rule 22)

	'!='           reduce using rule 18
	'%='           reduce using rule 18
	'&&'           reduce using rule 18
	')'            reduce using rule 18
	'*='           reduce using rule 18
	'+'            shift, and enter state 112
	'+='           reduce using rule 18
	','            reduce using rule 18
	'-'            shift, and enter state 113
	'-='           reduce using rule 18
	'..'           reduce using rule 18
	'/='           reduce using rule 18
	':'            reduce using rule 18
	';'            reduce using rule 18
	'<'            reduce using rule 18
	'<='           reduce using rule 18
	'='            reduce using rule 18
	'=='           reduce using rule 18
	'>'            reduce using rule 18
	'>='           reduce using rule 18
	'?'            reduce using rule 18
	'?.let'        reduce using rule 18
	']'            reduce using rule 18
	'downTo'       reduce using rule 18
	'step'         reduce using rule 18
	'until'        reduce using rule 18
	'||'           reduce using rule 18


State 140

	Exp5 -> Exp5 '<' Exp6 .                             (rule 16)
	Exp6 -> Exp6 . '+' Exp7                             (rule 21)
	Exp6 -> Exp6 . '-' Exp7                             (rule 22)

	'!='           reduce using rule 16
	'%='           reduce using rule 16
	'&&'           reduce using rule 16
	')'            reduce using rule 16
	'*='           reduce using rule 16
	'+'            shift, and enter state 112
	'+='           reduce using rule 16
	','            reduce using rule 16
	'-'            shift, and enter state 113
	'-='           reduce using rule 16
	'..'           reduce using rule 16
	'/='           reduce using rule 16
	':'            reduce using rule 16
	';'            reduce using rule 16
	'<'            reduce using rule 16
	'<='           reduce using rule 16
	'='            reduce using rule 16
	'=='           reduce using rule 16
	'>'            reduce using rule 16
	'>='           reduce using rule 16
	'?'            reduce using rule 16
	'?.let'        reduce using rule 16
	']'            reduce using rule 16
	'downTo'       reduce using rule 16
	'step'         reduce using rule 16
	'until'        reduce using rule 16
	'||'           reduce using rule 16


State 141

	Exp6 -> Exp6 '-' Exp7 .                             (rule 22)
	Exp7 -> Exp7 . '*' Exp8                             (rule 24)
	Exp7 -> Exp7 . '/' Exp8                             (rule 25)
	Exp7 -> Exp7 . '%' Exp8                             (rule 26)

	'!='           reduce using rule 22
	'%'            shift, and enter state 109
	'%='           reduce using rule 22
	'&&'           reduce using rule 22
	')'            reduce using rule 22
	'*'            shift, and enter state 110
	'*='           reduce using rule 22
	'+'            reduce using rule 22
	'+='           reduce using rule 22
	','            reduce using rule 22
	'-'            reduce using rule 22
	'-='           reduce using rule 22
	'..'           reduce using rule 22
	'/'            shift, and enter state 111
	'/='           reduce using rule 22
	':'            reduce using rule 22
	';'            reduce using rule 22
	'<'            reduce using rule 22
	'<='           reduce using rule 22
	'='            reduce using rule 22
	'=='           reduce using rule 22
	'>'            reduce using rule 22
	'>='           reduce using rule 22
	'?'            reduce using rule 22
	'?.let'        reduce using rule 22
	']'            reduce using rule 22
	'downTo'       reduce using rule 22
	'step'         reduce using rule 22
	'until'        reduce using rule 22
	'||'           reduce using rule 22


State 142

	Exp6 -> Exp6 '+' Exp7 .                             (rule 21)
	Exp7 -> Exp7 . '*' Exp8                             (rule 24)
	Exp7 -> Exp7 . '/' Exp8                             (rule 25)
	Exp7 -> Exp7 . '%' Exp8                             (rule 26)

	'!='           reduce using rule 21
	'%'            shift, and enter state 109
	'%='           reduce using rule 21
	'&&'           reduce using rule 21
	')'            reduce using rule 21
	'*'            shift, and enter state 110
	'*='           reduce using rule 21
	'+'            reduce using rule 21
	'+='           reduce using rule 21
	','            reduce using rule 21
	'-'            reduce using rule 21
	'-='           reduce using rule 21
	'..'           reduce using rule 21
	'/'            shift, and enter state 111
	'/='           reduce using rule 21
	':'            reduce using rule 21
	';'            reduce using rule 21
	'<'            reduce using rule 21
	'<='           reduce using rule 21
	'='            reduce using rule 21
	'=='           reduce using rule 21
	'>'            reduce using rule 21
	'>='           reduce using rule 21
	'?'            reduce using rule 21
	'?.let'        reduce using rule 21
	']'            reduce using rule 21
	'downTo'       reduce using rule 21
	'step'         reduce using rule 21
	'until'        reduce using rule 21
	'||'           reduce using rule 21


State 143

	Exp7 -> Exp7 '/' Exp8 .                             (rule 25)

	'!='           reduce using rule 25
	'%'            reduce using rule 25
	'%='           reduce using rule 25
	'&&'           reduce using rule 25
	')'            reduce using rule 25
	'*'            reduce using rule 25
	'*='           reduce using rule 25
	'+'            reduce using rule 25
	'+='           reduce using rule 25
	','            reduce using rule 25
	'-'            reduce using rule 25
	'-='           reduce using rule 25
	'..'           reduce using rule 25
	'/'            reduce using rule 25
	'/='           reduce using rule 25
	':'            reduce using rule 25
	';'            reduce using rule 25
	'<'            reduce using rule 25
	'<='           reduce using rule 25
	'='            reduce using rule 25
	'=='           reduce using rule 25
	'>'            reduce using rule 25
	'>='           reduce using rule 25
	'?'            reduce using rule 25
	'?.let'        reduce using rule 25
	']'            reduce using rule 25
	'downTo'       reduce using rule 25
	'step'         reduce using rule 25
	'until'        reduce using rule 25
	'||'           reduce using rule 25


State 144

	Exp7 -> Exp7 '*' Exp8 .                             (rule 24)

	'!='           reduce using rule 24
	'%'            reduce using rule 24
	'%='           reduce using rule 24
	'&&'           reduce using rule 24
	')'            reduce using rule 24
	'*'            reduce using rule 24
	'*='           reduce using rule 24
	'+'            reduce using rule 24
	'+='           reduce using rule 24
	','            reduce using rule 24
	'-'            reduce using rule 24
	'-='           reduce using rule 24
	'..'           reduce using rule 24
	'/'            reduce using rule 24
	'/='           reduce using rule 24
	':'            reduce using rule 24
	';'            reduce using rule 24
	'<'            reduce using rule 24
	'<='           reduce using rule 24
	'='            reduce using rule 24
	'=='           reduce using rule 24
	'>'            reduce using rule 24
	'>='           reduce using rule 24
	'?'            reduce using rule 24
	'?.let'        reduce using rule 24
	']'            reduce using rule 24
	'downTo'       reduce using rule 24
	'step'         reduce using rule 24
	'until'        reduce using rule 24
	'||'           reduce using rule 24


State 145

	Exp7 -> Exp7 '%' Exp8 .                             (rule 26)

	'!='           reduce using rule 26
	'%'            reduce using rule 26
	'%='           reduce using rule 26
	'&&'           reduce using rule 26
	')'            reduce using rule 26
	'*'            reduce using rule 26
	'*='           reduce using rule 26
	'+'            reduce using rule 26
	'+='           reduce using rule 26
	','            reduce using rule 26
	'-'            reduce using rule 26
	'-='           reduce using rule 26
	'..'           reduce using rule 26
	'/'            reduce using rule 26
	'/='           reduce using rule 26
	':'            reduce using rule 26
	';'            reduce using rule 26
	'<'            reduce using rule 26
	'<='           reduce using rule 26
	'='            reduce using rule 26
	'=='           reduce using rule 26
	'>'            reduce using rule 26
	'>='           reduce using rule 26
	'?'            reduce using rule 26
	'?.let'        reduce using rule 26
	']'            reduce using rule 26
	'downTo'       reduce using rule 26
	'step'         reduce using rule 26
	'until'        reduce using rule 26
	'||'           reduce using rule 26


State 146

	Exp12 -> '(' Exp ')' .                              (rule 51)

	'!!'           reduce using rule 51
	'!='           reduce using rule 51
	'%'            reduce using rule 51
	'%='           reduce using rule 51
	'&&'           reduce using rule 51
	')'            reduce using rule 51
	'*'            reduce using rule 51
	'*='           reduce using rule 51
	'+'            reduce using rule 51
	'++'           reduce using rule 51
	'+='           reduce using rule 51
	','            reduce using rule 51
	'-'            reduce using rule 51
	'--'           reduce using rule 51
	'-='           reduce using rule 51
	'..'           reduce using rule 51
	'/'            reduce using rule 51
	'/='           reduce using rule 51
	':'            reduce using rule 51
	';'            reduce using rule 51
	'<'            reduce using rule 51
	'<='           reduce using rule 51
	'='            reduce using rule 51
	'=='           reduce using rule 51
	'>'            reduce using rule 51
	'>='           reduce using rule 51
	'?'            reduce using rule 51
	'?.let'        reduce using rule 51
	']'            reduce using rule 51
	'downTo'       reduce using rule 51
	'step'         reduce using rule 51
	'until'        reduce using rule 51
	'||'           reduce using rule 51


State 147

	Exp -> Exp . OpAssign Exp1                          (rule 5)
	Exp10 -> 'Array' '(' Exp . ',' Exp ')'              (rule 37)

	'%='           shift, and enter state 84
	'*='           shift, and enter state 85
	'+='           shift, and enter state 86
	','            shift, and enter state 163
	'-='           shift, and enter state 87
	'/='           shift, and enter state 88
	'='            shift, and enter state 90

	OpAssign       goto state 83

State 148

	Exp10 -> 'Tupla' '(' ListExp . ')'                  (rule 38)

	')'            shift, and enter state 162


State 149

	Exp10 -> '[' Iterable ']' .                         (rule 36)

	'!='           reduce using rule 36
	'%'            reduce using rule 36
	'%='           reduce using rule 36
	'&&'           reduce using rule 36
	')'            reduce using rule 36
	'*'            reduce using rule 36
	'*='           reduce using rule 36
	'+'            reduce using rule 36
	'+='           reduce using rule 36
	','            reduce using rule 36
	'-'            reduce using rule 36
	'-='           reduce using rule 36
	'..'           reduce using rule 36
	'/'            reduce using rule 36
	'/='           reduce using rule 36
	':'            reduce using rule 36
	';'            reduce using rule 36
	'<'            reduce using rule 36
	'<='           reduce using rule 36
	'='            reduce using rule 36
	'=='           reduce using rule 36
	'>'            reduce using rule 36
	'>='           reduce using rule 36
	'?'            reduce using rule 36
	'?.let'        reduce using rule 36
	']'            reduce using rule 36
	'downTo'       reduce using rule 36
	'step'         reduce using rule 36
	'until'        reduce using rule 36
	'||'           reduce using rule 36


State 150

	Iterable -> Exp '..' . Exp                          (rule 108)

	'!'            shift, and enter state 59
	'('            shift, and enter state 60
	'++'           shift, and enter state 61
	'-'            shift, and enter state 62
	'--'           shift, and enter state 63
	'Array'        shift, and enter state 64
	'Tupla'        shift, and enter state 65
	'['            shift, and enter state 66
	'false'        shift, and enter state 67
	'null'         shift, and enter state 68
	'true'         shift, and enter state 69
	'{'            shift, and enter state 70
	L_integ        shift, and enter state 2
	L_quoted       shift, and enter state 71
	L_ident        shift, and enter state 12

	Integer        goto state 42
	String         goto state 43
	Ident          goto state 44
	Exp            goto state 161
	Exp1           goto state 46
	Exp2           goto state 47
	Exp3           goto state 48
	Exp4           goto state 49
	Exp5           goto state 50
	Exp6           goto state 51
	Exp7           goto state 52
	Exp8           goto state 53
	Exp9           goto state 54
	Exp10          goto state 55
	Exp11          goto state 56
	Exp12          goto state 57
	FunctionExp    goto state 58

State 151

	Iterable -> Exp 'downTo' . Exp                      (rule 110)
	Iterable -> Exp 'downTo' . Exp 'step' Exp           (rule 112)

	'!'            shift, and enter state 59
	'('            shift, and enter state 60
	'++'           shift, and enter state 61
	'-'            shift, and enter state 62
	'--'           shift, and enter state 63
	'Array'        shift, and enter state 64
	'Tupla'        shift, and enter state 65
	'['            shift, and enter state 66
	'false'        shift, and enter state 67
	'null'         shift, and enter state 68
	'true'         shift, and enter state 69
	'{'            shift, and enter state 70
	L_integ        shift, and enter state 2
	L_quoted       shift, and enter state 71
	L_ident        shift, and enter state 12

	Integer        goto state 42
	String         goto state 43
	Ident          goto state 44
	Exp            goto state 160
	Exp1           goto state 46
	Exp2           goto state 47
	Exp3           goto state 48
	Exp4           goto state 49
	Exp5           goto state 50
	Exp6           goto state 51
	Exp7           goto state 52
	Exp8           goto state 53
	Exp9           goto state 54
	Exp10          goto state 55
	Exp11          goto state 56
	Exp12          goto state 57
	FunctionExp    goto state 58

State 152

	Iterable -> Exp 'until' . Exp                       (rule 109)
	Iterable -> Exp 'until' . Exp 'step' Exp            (rule 111)

	'!'            shift, and enter state 59
	'('            shift, and enter state 60
	'++'           shift, and enter state 61
	'-'            shift, and enter state 62
	'--'           shift, and enter state 63
	'Array'        shift, and enter state 64
	'Tupla'        shift, and enter state 65
	'['            shift, and enter state 66
	'false'        shift, and enter state 67
	'null'         shift, and enter state 68
	'true'         shift, and enter state 69
	'{'            shift, and enter state 70
	L_integ        shift, and enter state 2
	L_quoted       shift, and enter state 71
	L_ident        shift, and enter state 12

	Integer        goto state 42
	String         goto state 43
	Ident          goto state 44
	Exp            goto state 159
	Exp1           goto state 46
	Exp2           goto state 47
	Exp3           goto state 48
	Exp4           goto state 49
	Exp5           goto state 50
	Exp6           goto state 51
	Exp7           goto state 52
	Exp8           goto state 53
	Exp9           goto state 54
	Exp10          goto state 55
	Exp11          goto state 56
	Exp12          goto state 57
	FunctionExp    goto state 58

State 153

	Exp10 -> '{' ListArg '->' . ListStm '}'             (rule 46)

	'!'            reduce using rule 96
	'('            reduce using rule 96
	'++'           reduce using rule 96
	'-'            reduce using rule 96
	'--'           reduce using rule 96
	'Array'        reduce using rule 96
	'Tupla'        reduce using rule 96
	'['            reduce using rule 96
	'assert'       reduce using rule 96
	'break'        reduce using rule 96
	'continue'     reduce using rule 96
	'false'        reduce using rule 96
	'for'          reduce using rule 96
	'fun'          reduce using rule 96
	'if'           reduce using rule 96
	'null'         reduce using rule 96
	'print'        reduce using rule 96
	'println'      reduce using rule 96
	'return'       reduce using rule 96
	'run'          reduce using rule 96
	'true'         reduce using rule 96
	'val'          reduce using rule 96
	'var'          reduce using rule 96
	'while'        reduce using rule 96
	'{'            reduce using rule 96
	'}'            reduce using rule 96
	L_integ        reduce using rule 96
	L_quoted       reduce using rule 96
	L_ident        reduce using rule 96

	ListStm        goto state 158

State 154

	Type -> '(' ListType ')' '->' RetType .             (rule 73)

	')'            reduce using rule 73
	','            reduce using rule 73
	'->'           reduce using rule 73
	';'            reduce using rule 73
	'='            reduce using rule 73
	'>'            reduce using rule 73
	'{'            reduce using rule 73


State 155

	Exp -> Exp OpAssign Exp1 .                          (rule 5)

	'%='           reduce using rule 5
	')'            reduce using rule 5
	'*='           reduce using rule 5
	'+='           reduce using rule 5
	','            reduce using rule 5
	'-='           reduce using rule 5
	'..'           reduce using rule 5
	'/='           reduce using rule 5
	';'            reduce using rule 5
	'='            reduce using rule 5
	'?.let'        reduce using rule 5
	']'            reduce using rule 5
	'downTo'       reduce using rule 5
	'step'         reduce using rule 5
	'until'        reduce using rule 5


State 156

	FunctionDec -> 'fun' Ident '(' ListArg ')' ':' RetType '{' . ListStm '}'    (rule 106)

	'!'            reduce using rule 96
	'('            reduce using rule 96
	'++'           reduce using rule 96
	'-'            reduce using rule 96
	'--'           reduce using rule 96
	'Array'        reduce using rule 96
	'Tupla'        reduce using rule 96
	'['            reduce using rule 96
	'assert'       reduce using rule 96
	'break'        reduce using rule 96
	'continue'     reduce using rule 96
	'false'        reduce using rule 96
	'for'          reduce using rule 96
	'fun'          reduce using rule 96
	'if'           reduce using rule 96
	'null'         reduce using rule 96
	'print'        reduce using rule 96
	'println'      reduce using rule 96
	'return'       reduce using rule 96
	'run'          reduce using rule 96
	'true'         reduce using rule 96
	'val'          reduce using rule 96
	'var'          reduce using rule 96
	'while'        reduce using rule 96
	'{'            reduce using rule 96
	'}'            reduce using rule 96
	L_integ        reduce using rule 96
	L_quoted       reduce using rule 96
	L_ident        reduce using rule 96

	ListStm        goto state 157

State 157

	ListStm -> ListStm . Stm                            (rule 97)
	FunctionDec -> 'fun' Ident '(' ListArg ')' ':' RetType '{' ListStm . '}'    (rule 106)

	'!'            shift, and enter state 59
	'('            shift, and enter state 60
	'++'           shift, and enter state 61
	'-'            shift, and enter state 62
	'--'           shift, and enter state 63
	'Array'        shift, and enter state 64
	'Tupla'        shift, and enter state 65
	'['            shift, and enter state 66
	'assert'       shift, and enter state 177
	'break'        shift, and enter state 178
	'continue'     shift, and enter state 179
	'false'        shift, and enter state 67
	'for'          shift, and enter state 180
	'fun'          shift, and enter state 8
	'if'           shift, and enter state 181
	'null'         shift, and enter state 68
	'print'        shift, and enter state 182
	'println'      shift, and enter state 183
	'return'       shift, and enter state 184
	'run'          shift, and enter state 185
	'true'         shift, and enter state 69
	'val'          shift, and enter state 9
	'var'          shift, and enter state 10
	'while'        shift, and enter state 186
	'{'            shift, and enter state 70
	'}'            shift, and enter state 188
	L_integ        shift, and enter state 2
	L_quoted       shift, and enter state 71
	L_ident        shift, and enter state 12

	Integer        goto state 42
	String         goto state 43
	Ident          goto state 44
	Exp            goto state 174
	Exp1           goto state 46
	Exp2           goto state 47
	Exp3           goto state 48
	Exp4           goto state 49
	Exp5           goto state 50
	Exp6           goto state 51
	Exp7           goto state 52
	Exp8           goto state 53
	Exp9           goto state 54
	Exp10          goto state 55
	Exp11          goto state 56
	Exp12          goto state 57
	Stm            goto state 175
	Dec            goto state 176
	FunctionDec    goto state 7
	FunctionExp    goto state 58

State 158

	Exp10 -> '{' ListArg '->' ListStm . '}'             (rule 46)
	ListStm -> ListStm . Stm                            (rule 97)

	'!'            shift, and enter state 59
	'('            shift, and enter state 60
	'++'           shift, and enter state 61
	'-'            shift, and enter state 62
	'--'           shift, and enter state 63
	'Array'        shift, and enter state 64
	'Tupla'        shift, and enter state 65
	'['            shift, and enter state 66
	'assert'       shift, and enter state 177
	'break'        shift, and enter state 178
	'continue'     shift, and enter state 179
	'false'        shift, and enter state 67
	'for'          shift, and enter state 180
	'fun'          shift, and enter state 8
	'if'           shift, and enter state 181
	'null'         shift, and enter state 68
	'print'        shift, and enter state 182
	'println'      shift, and enter state 183
	'return'       shift, and enter state 184
	'run'          shift, and enter state 185
	'true'         shift, and enter state 69
	'val'          shift, and enter state 9
	'var'          shift, and enter state 10
	'while'        shift, and enter state 186
	'{'            shift, and enter state 70
	'}'            shift, and enter state 187
	L_integ        shift, and enter state 2
	L_quoted       shift, and enter state 71
	L_ident        shift, and enter state 12

	Integer        goto state 42
	String         goto state 43
	Ident          goto state 44
	Exp            goto state 174
	Exp1           goto state 46
	Exp2           goto state 47
	Exp3           goto state 48
	Exp4           goto state 49
	Exp5           goto state 50
	Exp6           goto state 51
	Exp7           goto state 52
	Exp8           goto state 53
	Exp9           goto state 54
	Exp10          goto state 55
	Exp11          goto state 56
	Exp12          goto state 57
	Stm            goto state 175
	Dec            goto state 176
	FunctionDec    goto state 7
	FunctionExp    goto state 58

State 159

	Exp -> Exp . OpAssign Exp1                          (rule 5)
	Iterable -> Exp 'until' Exp .                       (rule 109)
	Iterable -> Exp 'until' Exp . 'step' Exp            (rule 111)

	'%='           shift, and enter state 84
	'*='           shift, and enter state 85
	'+='           shift, and enter state 86
	'-='           shift, and enter state 87
	'/='           shift, and enter state 88
	'='            shift, and enter state 90
	']'            reduce using rule 109
	'step'         shift, and enter state 173

	OpAssign       goto state 83

State 160

	Exp -> Exp . OpAssign Exp1                          (rule 5)
	Iterable -> Exp 'downTo' Exp .                      (rule 110)
	Iterable -> Exp 'downTo' Exp . 'step' Exp           (rule 112)

	'%='           shift, and enter state 84
	'*='           shift, and enter state 85
	'+='           shift, and enter state 86
	'-='           shift, and enter state 87
	'/='           shift, and enter state 88
	'='            shift, and enter state 90
	']'            reduce using rule 110
	'step'         shift, and enter state 172

	OpAssign       goto state 83

State 161

	Exp -> Exp . OpAssign Exp1                          (rule 5)
	Iterable -> Exp '..' Exp .                          (rule 108)

	'%='           shift, and enter state 84
	'*='           shift, and enter state 85
	'+='           shift, and enter state 86
	'-='           shift, and enter state 87
	'/='           shift, and enter state 88
	'='            shift, and enter state 90
	']'            reduce using rule 108

	OpAssign       goto state 83

State 162

	Exp10 -> 'Tupla' '(' ListExp ')' .                  (rule 38)

	'!='           reduce using rule 38
	'%'            reduce using rule 38
	'%='           reduce using rule 38
	'&&'           reduce using rule 38
	')'            reduce using rule 38
	'*'            reduce using rule 38
	'*='           reduce using rule 38
	'+'            reduce using rule 38
	'+='           reduce using rule 38
	','            reduce using rule 38
	'-'            reduce using rule 38
	'-='           reduce using rule 38
	'..'           reduce using rule 38
	'/'            reduce using rule 38
	'/='           reduce using rule 38
	':'            reduce using rule 38
	';'            reduce using rule 38
	'<'            reduce using rule 38
	'<='           reduce using rule 38
	'='            reduce using rule 38
	'=='           reduce using rule 38
	'>'            reduce using rule 38
	'>='           reduce using rule 38
	'?'            reduce using rule 38
	'?.let'        reduce using rule 38
	']'            reduce using rule 38
	'downTo'       reduce using rule 38
	'step'         reduce using rule 38
	'until'        reduce using rule 38
	'||'           reduce using rule 38


State 163

	Exp10 -> 'Array' '(' Exp ',' . Exp ')'              (rule 37)

	'!'            shift, and enter state 59
	'('            shift, and enter state 60
	'++'           shift, and enter state 61
	'-'            shift, and enter state 62
	'--'           shift, and enter state 63
	'Array'        shift, and enter state 64
	'Tupla'        shift, and enter state 65
	'['            shift, and enter state 66
	'false'        shift, and enter state 67
	'null'         shift, and enter state 68
	'true'         shift, and enter state 69
	'{'            shift, and enter state 70
	L_integ        shift, and enter state 2
	L_quoted       shift, and enter state 71
	L_ident        shift, and enter state 12

	Integer        goto state 42
	String         goto state 43
	Ident          goto state 44
	Exp            goto state 171
	Exp1           goto state 46
	Exp2           goto state 47
	Exp3           goto state 48
	Exp4           goto state 49
	Exp5           goto state 50
	Exp6           goto state 51
	Exp7           goto state 52
	Exp8           goto state 53
	Exp9           goto state 54
	Exp10          goto state 55
	Exp11          goto state 56
	Exp12          goto state 57
	FunctionExp    goto state 58

State 164

	Exp1 -> Exp3 '?' Exp1 ':' . Exp2                    (rule 7)

	'!'            shift, and enter state 59
	'('            shift, and enter state 60
	'++'           shift, and enter state 61
	'-'            shift, and enter state 62
	'--'           shift, and enter state 63
	'Array'        shift, and enter state 64
	'Tupla'        shift, and enter state 65
	'['            shift, and enter state 66
	'false'        shift, and enter state 67
	'null'         shift, and enter state 68
	'true'         shift, and enter state 69
	'{'            shift, and enter state 70
	L_integ        shift, and enter state 2
	L_quoted       shift, and enter state 71
	L_ident        shift, and enter state 12

	Integer        goto state 42
	String         goto state 43
	Ident          goto state 44
	Exp2           goto state 169
	Exp3           goto state 170
	Exp4           goto state 49
	Exp5           goto state 50
	Exp6           goto state 51
	Exp7           goto state 52
	Exp8           goto state 53
	Exp9           goto state 54
	Exp10          goto state 55
	Exp11          goto state 56
	Exp12          goto state 57
	FunctionExp    goto state 58

State 165

	FunctionExp -> Ident '(' ListExp ')' .              (rule 107)

	'!='           reduce using rule 107
	'%'            reduce using rule 107
	'%='           reduce using rule 107
	'&&'           reduce using rule 107
	')'            reduce using rule 107
	'*'            reduce using rule 107
	'*='           reduce using rule 107
	'+'            reduce using rule 107
	'+='           reduce using rule 107
	','            reduce using rule 107
	'-'            reduce using rule 107
	'-='           reduce using rule 107
	'..'           reduce using rule 107
	'/'            reduce using rule 107
	'/='           reduce using rule 107
	':'            reduce using rule 107
	';'            reduce using rule 107
	'<'            reduce using rule 107
	'<='           reduce using rule 107
	'='            reduce using rule 107
	'=='           reduce using rule 107
	'>'            reduce using rule 107
	'>='           reduce using rule 107
	'?'            reduce using rule 107
	'?.let'        reduce using rule 107
	']'            reduce using rule 107
	'downTo'       reduce using rule 107
	'step'         reduce using rule 107
	'until'        reduce using rule 107
	'||'           reduce using rule 107


State 166

	ListExp -> Exp ',' . ListExp                        (rule 54)

	'!'            shift, and enter state 59
	'('            shift, and enter state 60
	')'            reduce using rule 52
	'++'           shift, and enter state 61
	'-'            shift, and enter state 62
	'--'           shift, and enter state 63
	'Array'        shift, and enter state 64
	'Tupla'        shift, and enter state 65
	'['            shift, and enter state 66
	'false'        shift, and enter state 67
	'null'         shift, and enter state 68
	'true'         shift, and enter state 69
	'{'            shift, and enter state 70
	L_integ        shift, and enter state 2
	L_quoted       shift, and enter state 71
	L_ident        shift, and enter state 12

	Integer        goto state 42
	String         goto state 43
	Ident          goto state 44
	Exp            goto state 129
	Exp1           goto state 46
	Exp2           goto state 47
	Exp3           goto state 48
	Exp4           goto state 49
	Exp5           goto state 50
	Exp6           goto state 51
	Exp7           goto state 52
	Exp8           goto state 53
	Exp9           goto state 54
	Exp10          goto state 55
	Exp11          goto state 56
	Exp12          goto state 57
	ListExp        goto state 168
	FunctionExp    goto state 58

State 167

	DimExp -> '[' Exp ']' .                             (rule 55)

	'!='           reduce using rule 55
	'%'            reduce using rule 55
	'%='           reduce using rule 55
	'&&'           reduce using rule 55
	')'            reduce using rule 55
	'*'            reduce using rule 55
	'*='           reduce using rule 55
	'+'            reduce using rule 55
	'+='           reduce using rule 55
	','            reduce using rule 55
	'-'            reduce using rule 55
	'-='           reduce using rule 55
	'..'           reduce using rule 55
	'/'            reduce using rule 55
	'/='           reduce using rule 55
	':'            reduce using rule 55
	';'            reduce using rule 55
	'<'            reduce using rule 55
	'<='           reduce using rule 55
	'='            reduce using rule 55
	'=='           reduce using rule 55
	'>'            reduce using rule 55
	'>='           reduce using rule 55
	'?'            reduce using rule 55
	'?.let'        reduce using rule 55
	'['            reduce using rule 55
	']'            reduce using rule 55
	'downTo'       reduce using rule 55
	'step'         reduce using rule 55
	'until'        reduce using rule 55
	'||'           reduce using rule 55


State 168

	ListExp -> Exp ',' ListExp .                        (rule 54)

	')'            reduce using rule 54


State 169

	Exp1 -> Exp3 '?' Exp1 ':' Exp2 .                    (rule 7)
	Exp2 -> Exp2 . '||' Exp3                            (rule 9)

	'%='           reduce using rule 7
	')'            reduce using rule 7
	'*='           reduce using rule 7
	'+='           reduce using rule 7
	','            reduce using rule 7
	'-='           reduce using rule 7
	'..'           reduce using rule 7
	'/='           reduce using rule 7
	':'            reduce using rule 7
	';'            reduce using rule 7
	'='            reduce using rule 7
	'?.let'        reduce using rule 7
	']'            reduce using rule 7
	'downTo'       reduce using rule 7
	'step'         reduce using rule 7
	'until'        reduce using rule 7
	'||'           shift, and enter state 122


State 170

	Exp2 -> Exp3 .                                      (rule 10)
	Exp3 -> Exp3 . '&&' Exp4                            (rule 11)

	'%='           reduce using rule 10
	'&&'           shift, and enter state 120
	')'            reduce using rule 10
	'*='           reduce using rule 10
	'+='           reduce using rule 10
	','            reduce using rule 10
	'-='           reduce using rule 10
	'..'           reduce using rule 10
	'/='           reduce using rule 10
	':'            reduce using rule 10
	';'            reduce using rule 10
	'='            reduce using rule 10
	'?.let'        reduce using rule 10
	']'            reduce using rule 10
	'downTo'       reduce using rule 10
	'step'         reduce using rule 10
	'until'        reduce using rule 10
	'||'           reduce using rule 10


State 171

	Exp -> Exp . OpAssign Exp1                          (rule 5)
	Exp10 -> 'Array' '(' Exp ',' Exp . ')'              (rule 37)

	'%='           shift, and enter state 84
	')'            shift, and enter state 204
	'*='           shift, and enter state 85
	'+='           shift, and enter state 86
	'-='           shift, and enter state 87
	'/='           shift, and enter state 88
	'='            shift, and enter state 90

	OpAssign       goto state 83

State 172

	Iterable -> Exp 'downTo' Exp 'step' . Exp           (rule 112)

	'!'            shift, and enter state 59
	'('            shift, and enter state 60
	'++'           shift, and enter state 61
	'-'            shift, and enter state 62
	'--'           shift, and enter state 63
	'Array'        shift, and enter state 64
	'Tupla'        shift, and enter state 65
	'['            shift, and enter state 66
	'false'        shift, and enter state 67
	'null'         shift, and enter state 68
	'true'         shift, and enter state 69
	'{'            shift, and enter state 70
	L_integ        shift, and enter state 2
	L_quoted       shift, and enter state 71
	L_ident        shift, and enter state 12

	Integer        goto state 42
	String         goto state 43
	Ident          goto state 44
	Exp            goto state 203
	Exp1           goto state 46
	Exp2           goto state 47
	Exp3           goto state 48
	Exp4           goto state 49
	Exp5           goto state 50
	Exp6           goto state 51
	Exp7           goto state 52
	Exp8           goto state 53
	Exp9           goto state 54
	Exp10          goto state 55
	Exp11          goto state 56
	Exp12          goto state 57
	FunctionExp    goto state 58

State 173

	Iterable -> Exp 'until' Exp 'step' . Exp            (rule 111)

	'!'            shift, and enter state 59
	'('            shift, and enter state 60
	'++'           shift, and enter state 61
	'-'            shift, and enter state 62
	'--'           shift, and enter state 63
	'Array'        shift, and enter state 64
	'Tupla'        shift, and enter state 65
	'['            shift, and enter state 66
	'false'        shift, and enter state 67
	'null'         shift, and enter state 68
	'true'         shift, and enter state 69
	'{'            shift, and enter state 70
	L_integ        shift, and enter state 2
	L_quoted       shift, and enter state 71
	L_ident        shift, and enter state 12

	Integer        goto state 42
	String         goto state 43
	Ident          goto state 44
	Exp            goto state 202
	Exp1           goto state 46
	Exp2           goto state 47
	Exp3           goto state 48
	Exp4           goto state 49
	Exp5           goto state 50
	Exp6           goto state 51
	Exp7           goto state 52
	Exp8           goto state 53
	Exp9           goto state 54
	Exp10          goto state 55
	Exp11          goto state 56
	Exp12          goto state 57
	FunctionExp    goto state 58

State 174

	Exp -> Exp . OpAssign Exp1                          (rule 5)
	Stm -> Exp . ';'                                    (rule 82)
	Stm -> Exp . '?.let' '{' ListStm '}'                (rule 94)

	'%='           shift, and enter state 84
	'*='           shift, and enter state 85
	'+='           shift, and enter state 86
	'-='           shift, and enter state 87
	'/='           shift, and enter state 88
	';'            shift, and enter state 200
	'='            shift, and enter state 90
	'?.let'        shift, and enter state 201

	OpAssign       goto state 83

State 175

	ListStm -> ListStm Stm .                            (rule 97)

	'!'            reduce using rule 97
	'('            reduce using rule 97
	'++'           reduce using rule 97
	'-'            reduce using rule 97
	'--'           reduce using rule 97
	'Array'        reduce using rule 97
	'Tupla'        reduce using rule 97
	'['            reduce using rule 97
	'assert'       reduce using rule 97
	'break'        reduce using rule 97
	'continue'     reduce using rule 97
	'false'        reduce using rule 97
	'for'          reduce using rule 97
	'fun'          reduce using rule 97
	'if'           reduce using rule 97
	'null'         reduce using rule 97
	'print'        reduce using rule 97
	'println'      reduce using rule 97
	'return'       reduce using rule 97
	'run'          reduce using rule 97
	'true'         reduce using rule 97
	'val'          reduce using rule 97
	'var'          reduce using rule 97
	'while'        reduce using rule 97
	'{'            reduce using rule 97
	'}'            reduce using rule 97
	L_integ        reduce using rule 97
	L_quoted       reduce using rule 97
	L_ident        reduce using rule 97


State 176

	Stm -> Dec .                                        (rule 81)

	'!'            reduce using rule 81
	'('            reduce using rule 81
	'++'           reduce using rule 81
	'-'            reduce using rule 81
	'--'           reduce using rule 81
	'Array'        reduce using rule 81
	'Tupla'        reduce using rule 81
	'['            reduce using rule 81
	'assert'       reduce using rule 81
	'break'        reduce using rule 81
	'continue'     reduce using rule 81
	'false'        reduce using rule 81
	'for'          reduce using rule 81
	'fun'          reduce using rule 81
	'if'           reduce using rule 81
	'null'         reduce using rule 81
	'print'        reduce using rule 81
	'println'      reduce using rule 81
	'return'       reduce using rule 81
	'run'          reduce using rule 81
	'true'         reduce using rule 81
	'val'          reduce using rule 81
	'var'          reduce using rule 81
	'while'        reduce using rule 81
	'{'            reduce using rule 81
	'}'            reduce using rule 81
	L_integ        reduce using rule 81
	L_quoted       reduce using rule 81
	L_ident        reduce using rule 81


State 177

	Stm -> 'assert' . '(' Exp ')' ';'                   (rule 95)

	'('            shift, and enter state 199


State 178

	Stm -> 'break' . ';'                                (rule 86)

	';'            shift, and enter state 198


State 179

	Stm -> 'continue' . ';'                             (rule 87)

	';'            shift, and enter state 197


State 180

	Stm -> 'for' . '(' Ident 'in' Exp ')' '{' ListStm '}'    (rule 84)

	'('            shift, and enter state 196


State 181

	Stm -> 'if' . '(' Exp ')' '{' ListStm '}'           (rule 90)
	Stm -> 'if' . '(' Exp ')' '{' ListStm '}' 'else' '{' ListStm '}'    (rule 91)

	'('            shift, and enter state 195


State 182

	Stm -> 'print' . '(' Exp ')' ';'                    (rule 92)

	'('            shift, and enter state 194


State 183

	Stm -> 'println' . '(' Exp ')' ';'                  (rule 93)

	'('            shift, and enter state 193


State 184

	Stm -> 'return' . Exp ';'                           (rule 88)
	Stm -> 'return' . ';'                               (rule 89)

	'!'            shift, and enter state 59
	'('            shift, and enter state 60
	'++'           shift, and enter state 61
	'-'            shift, and enter state 62
	'--'           shift, and enter state 63
	';'            shift, and enter state 192
	'Array'        shift, and enter state 64
	'Tupla'        shift, and enter state 65
	'['            shift, and enter state 66
	'false'        shift, and enter state 67
	'null'         shift, and enter state 68
	'true'         shift, and enter state 69
	'{'            shift, and enter state 70
	L_integ        shift, and enter state 2
	L_quoted       shift, and enter state 71
	L_ident        shift, and enter state 12

	Integer        goto state 42
	String         goto state 43
	Ident          goto state 44
	Exp            goto state 191
	Exp1           goto state 46
	Exp2           goto state 47
	Exp3           goto state 48
	Exp4           goto state 49
	Exp5           goto state 50
	Exp6           goto state 51
	Exp7           goto state 52
	Exp8           goto state 53
	Exp9           goto state 54
	Exp10          goto state 55
	Exp11          goto state 56
	Exp12          goto state 57
	FunctionExp    goto state 58

State 185

	Stm -> 'run' . '{' ListStm '}'                      (rule 83)

	'{'            shift, and enter state 190


State 186

	Stm -> 'while' . '(' Exp ')' '{' ListStm '}'        (rule 85)

	'('            shift, and enter state 189


State 187

	Exp10 -> '{' ListArg '->' ListStm '}' .             (rule 46)

	'!='           reduce using rule 46
	'%'            reduce using rule 46
	'%='           reduce using rule 46
	'&&'           reduce using rule 46
	')'            reduce using rule 46
	'*'            reduce using rule 46
	'*='           reduce using rule 46
	'+'            reduce using rule 46
	'+='           reduce using rule 46
	','            reduce using rule 46
	'-'            reduce using rule 46
	'-='           reduce using rule 46
	'..'           reduce using rule 46
	'/'            reduce using rule 46
	'/='           reduce using rule 46
	':'            reduce using rule 46
	';'            reduce using rule 46
	'<'            reduce using rule 46
	'<='           reduce using rule 46
	'='            reduce using rule 46
	'=='           reduce using rule 46
	'>'            reduce using rule 46
	'>='           reduce using rule 46
	'?'            reduce using rule 46
	'?.let'        reduce using rule 46
	']'            reduce using rule 46
	'downTo'       reduce using rule 46
	'step'         reduce using rule 46
	'until'        reduce using rule 46
	'||'           reduce using rule 46


State 188

	FunctionDec -> 'fun' Ident '(' ListArg ')' ':' RetType '{' ListStm '}' .    (rule 106)

	'!'            reduce using rule 106
	'('            reduce using rule 106
	'++'           reduce using rule 106
	'-'            reduce using rule 106
	'--'           reduce using rule 106
	'Array'        reduce using rule 106
	'Tupla'        reduce using rule 106
	'['            reduce using rule 106
	'assert'       reduce using rule 106
	'break'        reduce using rule 106
	'continue'     reduce using rule 106
	'false'        reduce using rule 106
	'for'          reduce using rule 106
	'fun'          reduce using rule 106
	'if'           reduce using rule 106
	'null'         reduce using rule 106
	'print'        reduce using rule 106
	'println'      reduce using rule 106
	'return'       reduce using rule 106
	'run'          reduce using rule 106
	'true'         reduce using rule 106
	'val'          reduce using rule 106
	'var'          reduce using rule 106
	'while'        reduce using rule 106
	'{'            reduce using rule 106
	'}'            reduce using rule 106
	L_integ        reduce using rule 106
	L_quoted       reduce using rule 106
	L_ident        reduce using rule 106
	%eof           reduce using rule 106


State 189

	Stm -> 'while' '(' . Exp ')' '{' ListStm '}'        (rule 85)

	'!'            shift, and enter state 59
	'('            shift, and enter state 60
	'++'           shift, and enter state 61
	'-'            shift, and enter state 62
	'--'           shift, and enter state 63
	'Array'        shift, and enter state 64
	'Tupla'        shift, and enter state 65
	'['            shift, and enter state 66
	'false'        shift, and enter state 67
	'null'         shift, and enter state 68
	'true'         shift, and enter state 69
	'{'            shift, and enter state 70
	L_integ        shift, and enter state 2
	L_quoted       shift, and enter state 71
	L_ident        shift, and enter state 12

	Integer        goto state 42
	String         goto state 43
	Ident          goto state 44
	Exp            goto state 213
	Exp1           goto state 46
	Exp2           goto state 47
	Exp3           goto state 48
	Exp4           goto state 49
	Exp5           goto state 50
	Exp6           goto state 51
	Exp7           goto state 52
	Exp8           goto state 53
	Exp9           goto state 54
	Exp10          goto state 55
	Exp11          goto state 56
	Exp12          goto state 57
	FunctionExp    goto state 58

State 190

	Stm -> 'run' '{' . ListStm '}'                      (rule 83)

	'!'            reduce using rule 96
	'('            reduce using rule 96
	'++'           reduce using rule 96
	'-'            reduce using rule 96
	'--'           reduce using rule 96
	'Array'        reduce using rule 96
	'Tupla'        reduce using rule 96
	'['            reduce using rule 96
	'assert'       reduce using rule 96
	'break'        reduce using rule 96
	'continue'     reduce using rule 96
	'false'        reduce using rule 96
	'for'          reduce using rule 96
	'fun'          reduce using rule 96
	'if'           reduce using rule 96
	'null'         reduce using rule 96
	'print'        reduce using rule 96
	'println'      reduce using rule 96
	'return'       reduce using rule 96
	'run'          reduce using rule 96
	'true'         reduce using rule 96
	'val'          reduce using rule 96
	'var'          reduce using rule 96
	'while'        reduce using rule 96
	'{'            reduce using rule 96
	'}'            reduce using rule 96
	L_integ        reduce using rule 96
	L_quoted       reduce using rule 96
	L_ident        reduce using rule 96

	ListStm        goto state 212

State 191

	Exp -> Exp . OpAssign Exp1                          (rule 5)
	Stm -> 'return' Exp . ';'                           (rule 88)

	'%='           shift, and enter state 84
	'*='           shift, and enter state 85
	'+='           shift, and enter state 86
	'-='           shift, and enter state 87
	'/='           shift, and enter state 88
	';'            shift, and enter state 211
	'='            shift, and enter state 90

	OpAssign       goto state 83

State 192

	Stm -> 'return' ';' .                               (rule 89)

	'!'            reduce using rule 89
	'('            reduce using rule 89
	'++'           reduce using rule 89
	'-'            reduce using rule 89
	'--'           reduce using rule 89
	'Array'        reduce using rule 89
	'Tupla'        reduce using rule 89
	'['            reduce using rule 89
	'assert'       reduce using rule 89
	'break'        reduce using rule 89
	'continue'     reduce using rule 89
	'false'        reduce using rule 89
	'for'          reduce using rule 89
	'fun'          reduce using rule 89
	'if'           reduce using rule 89
	'null'         reduce using rule 89
	'print'        reduce using rule 89
	'println'      reduce using rule 89
	'return'       reduce using rule 89
	'run'          reduce using rule 89
	'true'         reduce using rule 89
	'val'          reduce using rule 89
	'var'          reduce using rule 89
	'while'        reduce using rule 89
	'{'            reduce using rule 89
	'}'            reduce using rule 89
	L_integ        reduce using rule 89
	L_quoted       reduce using rule 89
	L_ident        reduce using rule 89


State 193

	Stm -> 'println' '(' . Exp ')' ';'                  (rule 93)

	'!'            shift, and enter state 59
	'('            shift, and enter state 60
	'++'           shift, and enter state 61
	'-'            shift, and enter state 62
	'--'           shift, and enter state 63
	'Array'        shift, and enter state 64
	'Tupla'        shift, and enter state 65
	'['            shift, and enter state 66
	'false'        shift, and enter state 67
	'null'         shift, and enter state 68
	'true'         shift, and enter state 69
	'{'            shift, and enter state 70
	L_integ        shift, and enter state 2
	L_quoted       shift, and enter state 71
	L_ident        shift, and enter state 12

	Integer        goto state 42
	String         goto state 43
	Ident          goto state 44
	Exp            goto state 210
	Exp1           goto state 46
	Exp2           goto state 47
	Exp3           goto state 48
	Exp4           goto state 49
	Exp5           goto state 50
	Exp6           goto state 51
	Exp7           goto state 52
	Exp8           goto state 53
	Exp9           goto state 54
	Exp10          goto state 55
	Exp11          goto state 56
	Exp12          goto state 57
	FunctionExp    goto state 58

State 194

	Stm -> 'print' '(' . Exp ')' ';'                    (rule 92)

	'!'            shift, and enter state 59
	'('            shift, and enter state 60
	'++'           shift, and enter state 61
	'-'            shift, and enter state 62
	'--'           shift, and enter state 63
	'Array'        shift, and enter state 64
	'Tupla'        shift, and enter state 65
	'['            shift, and enter state 66
	'false'        shift, and enter state 67
	'null'         shift, and enter state 68
	'true'         shift, and enter state 69
	'{'            shift, and enter state 70
	L_integ        shift, and enter state 2
	L_quoted       shift, and enter state 71
	L_ident        shift, and enter state 12

	Integer        goto state 42
	String         goto state 43
	Ident          goto state 44
	Exp            goto state 209
	Exp1           goto state 46
	Exp2           goto state 47
	Exp3           goto state 48
	Exp4           goto state 49
	Exp5           goto state 50
	Exp6           goto state 51
	Exp7           goto state 52
	Exp8           goto state 53
	Exp9           goto state 54
	Exp10          goto state 55
	Exp11          goto state 56
	Exp12          goto state 57
	FunctionExp    goto state 58

State 195

	Stm -> 'if' '(' . Exp ')' '{' ListStm '}'           (rule 90)
	Stm -> 'if' '(' . Exp ')' '{' ListStm '}' 'else' '{' ListStm '}'    (rule 91)

	'!'            shift, and enter state 59
	'('            shift, and enter state 60
	'++'           shift, and enter state 61
	'-'            shift, and enter state 62
	'--'           shift, and enter state 63
	'Array'        shift, and enter state 64
	'Tupla'        shift, and enter state 65
	'['            shift, and enter state 66
	'false'        shift, and enter state 67
	'null'         shift, and enter state 68
	'true'         shift, and enter state 69
	'{'            shift, and enter state 70
	L_integ        shift, and enter state 2
	L_quoted       shift, and enter state 71
	L_ident        shift, and enter state 12

	Integer        goto state 42
	String         goto state 43
	Ident          goto state 44
	Exp            goto state 208
	Exp1           goto state 46
	Exp2           goto state 47
	Exp3           goto state 48
	Exp4           goto state 49
	Exp5           goto state 50
	Exp6           goto state 51
	Exp7           goto state 52
	Exp8           goto state 53
	Exp9           goto state 54
	Exp10          goto state 55
	Exp11          goto state 56
	Exp12          goto state 57
	FunctionExp    goto state 58

State 196

	Stm -> 'for' '(' . Ident 'in' Exp ')' '{' ListStm '}'    (rule 84)

	L_ident        shift, and enter state 12

	Ident          goto state 207

State 197

	Stm -> 'continue' ';' .                             (rule 87)

	'!'            reduce using rule 87
	'('            reduce using rule 87
	'++'           reduce using rule 87
	'-'            reduce using rule 87
	'--'           reduce using rule 87
	'Array'        reduce using rule 87
	'Tupla'        reduce using rule 87
	'['            reduce using rule 87
	'assert'       reduce using rule 87
	'break'        reduce using rule 87
	'continue'     reduce using rule 87
	'false'        reduce using rule 87
	'for'          reduce using rule 87
	'fun'          reduce using rule 87
	'if'           reduce using rule 87
	'null'         reduce using rule 87
	'print'        reduce using rule 87
	'println'      reduce using rule 87
	'return'       reduce using rule 87
	'run'          reduce using rule 87
	'true'         reduce using rule 87
	'val'          reduce using rule 87
	'var'          reduce using rule 87
	'while'        reduce using rule 87
	'{'            reduce using rule 87
	'}'            reduce using rule 87
	L_integ        reduce using rule 87
	L_quoted       reduce using rule 87
	L_ident        reduce using rule 87


State 198

	Stm -> 'break' ';' .                                (rule 86)

	'!'            reduce using rule 86
	'('            reduce using rule 86
	'++'           reduce using rule 86
	'-'            reduce using rule 86
	'--'           reduce using rule 86
	'Array'        reduce using rule 86
	'Tupla'        reduce using rule 86
	'['            reduce using rule 86
	'assert'       reduce using rule 86
	'break'        reduce using rule 86
	'continue'     reduce using rule 86
	'false'        reduce using rule 86
	'for'          reduce using rule 86
	'fun'          reduce using rule 86
	'if'           reduce using rule 86
	'null'         reduce using rule 86
	'print'        reduce using rule 86
	'println'      reduce using rule 86
	'return'       reduce using rule 86
	'run'          reduce using rule 86
	'true'         reduce using rule 86
	'val'          reduce using rule 86
	'var'          reduce using rule 86
	'while'        reduce using rule 86
	'{'            reduce using rule 86
	'}'            reduce using rule 86
	L_integ        reduce using rule 86
	L_quoted       reduce using rule 86
	L_ident        reduce using rule 86


State 199

	Stm -> 'assert' '(' . Exp ')' ';'                   (rule 95)

	'!'            shift, and enter state 59
	'('            shift, and enter state 60
	'++'           shift, and enter state 61
	'-'            shift, and enter state 62
	'--'           shift, and enter state 63
	'Array'        shift, and enter state 64
	'Tupla'        shift, and enter state 65
	'['            shift, and enter state 66
	'false'        shift, and enter state 67
	'null'         shift, and enter state 68
	'true'         shift, and enter state 69
	'{'            shift, and enter state 70
	L_integ        shift, and enter state 2
	L_quoted       shift, and enter state 71
	L_ident        shift, and enter state 12

	Integer        goto state 42
	String         goto state 43
	Ident          goto state 44
	Exp            goto state 206
	Exp1           goto state 46
	Exp2           goto state 47
	Exp3           goto state 48
	Exp4           goto state 49
	Exp5           goto state 50
	Exp6           goto state 51
	Exp7           goto state 52
	Exp8           goto state 53
	Exp9           goto state 54
	Exp10          goto state 55
	Exp11          goto state 56
	Exp12          goto state 57
	FunctionExp    goto state 58

State 200

	Stm -> Exp ';' .                                    (rule 82)

	'!'            reduce using rule 82
	'('            reduce using rule 82
	'++'           reduce using rule 82
	'-'            reduce using rule 82
	'--'           reduce using rule 82
	'Array'        reduce using rule 82
	'Tupla'        reduce using rule 82
	'['            reduce using rule 82
	'assert'       reduce using rule 82
	'break'        reduce using rule 82
	'continue'     reduce using rule 82
	'false'        reduce using rule 82
	'for'          reduce using rule 82
	'fun'          reduce using rule 82
	'if'           reduce using rule 82
	'null'         reduce using rule 82
	'print'        reduce using rule 82
	'println'      reduce using rule 82
	'return'       reduce using rule 82
	'run'          reduce using rule 82
	'true'         reduce using rule 82
	'val'          reduce using rule 82
	'var'          reduce using rule 82
	'while'        reduce using rule 82
	'{'            reduce using rule 82
	'}'            reduce using rule 82
	L_integ        reduce using rule 82
	L_quoted       reduce using rule 82
	L_ident        reduce using rule 82


State 201

	Stm -> Exp '?.let' . '{' ListStm '}'                (rule 94)

	'{'            shift, and enter state 205


State 202

	Exp -> Exp . OpAssign Exp1                          (rule 5)
	Iterable -> Exp 'until' Exp 'step' Exp .            (rule 111)

	'%='           shift, and enter state 84
	'*='           shift, and enter state 85
	'+='           shift, and enter state 86
	'-='           shift, and enter state 87
	'/='           shift, and enter state 88
	'='            shift, and enter state 90
	']'            reduce using rule 111

	OpAssign       goto state 83

State 203

	Exp -> Exp . OpAssign Exp1                          (rule 5)
	Iterable -> Exp 'downTo' Exp 'step' Exp .           (rule 112)

	'%='           shift, and enter state 84
	'*='           shift, and enter state 85
	'+='           shift, and enter state 86
	'-='           shift, and enter state 87
	'/='           shift, and enter state 88
	'='            shift, and enter state 90
	']'            reduce using rule 112

	OpAssign       goto state 83

State 204

	Exp10 -> 'Array' '(' Exp ',' Exp ')' .              (rule 37)

	'!='           reduce using rule 37
	'%'            reduce using rule 37
	'%='           reduce using rule 37
	'&&'           reduce using rule 37
	')'            reduce using rule 37
	'*'            reduce using rule 37
	'*='           reduce using rule 37
	'+'            reduce using rule 37
	'+='           reduce using rule 37
	','            reduce using rule 37
	'-'            reduce using rule 37
	'-='           reduce using rule 37
	'..'           reduce using rule 37
	'/'            reduce using rule 37
	'/='           reduce using rule 37
	':'            reduce using rule 37
	';'            reduce using rule 37
	'<'            reduce using rule 37
	'<='           reduce using rule 37
	'='            reduce using rule 37
	'=='           reduce using rule 37
	'>'            reduce using rule 37
	'>='           reduce using rule 37
	'?'            reduce using rule 37
	'?.let'        reduce using rule 37
	']'            reduce using rule 37
	'downTo'       reduce using rule 37
	'step'         reduce using rule 37
	'until'        reduce using rule 37
	'||'           reduce using rule 37


State 205

	Stm -> Exp '?.let' '{' . ListStm '}'                (rule 94)

	'!'            reduce using rule 96
	'('            reduce using rule 96
	'++'           reduce using rule 96
	'-'            reduce using rule 96
	'--'           reduce using rule 96
	'Array'        reduce using rule 96
	'Tupla'        reduce using rule 96
	'['            reduce using rule 96
	'assert'       reduce using rule 96
	'break'        reduce using rule 96
	'continue'     reduce using rule 96
	'false'        reduce using rule 96
	'for'          reduce using rule 96
	'fun'          reduce using rule 96
	'if'           reduce using rule 96
	'null'         reduce using rule 96
	'print'        reduce using rule 96
	'println'      reduce using rule 96
	'return'       reduce using rule 96
	'run'          reduce using rule 96
	'true'         reduce using rule 96
	'val'          reduce using rule 96
	'var'          reduce using rule 96
	'while'        reduce using rule 96
	'{'            reduce using rule 96
	'}'            reduce using rule 96
	L_integ        reduce using rule 96
	L_quoted       reduce using rule 96
	L_ident        reduce using rule 96

	ListStm        goto state 221

State 206

	Exp -> Exp . OpAssign Exp1                          (rule 5)
	Stm -> 'assert' '(' Exp . ')' ';'                   (rule 95)

	'%='           shift, and enter state 84
	')'            shift, and enter state 220
	'*='           shift, and enter state 85
	'+='           shift, and enter state 86
	'-='           shift, and enter state 87
	'/='           shift, and enter state 88
	'='            shift, and enter state 90

	OpAssign       goto state 83

State 207

	Stm -> 'for' '(' Ident . 'in' Exp ')' '{' ListStm '}'    (rule 84)

	'in'           shift, and enter state 219


State 208

	Exp -> Exp . OpAssign Exp1                          (rule 5)
	Stm -> 'if' '(' Exp . ')' '{' ListStm '}'           (rule 90)
	Stm -> 'if' '(' Exp . ')' '{' ListStm '}' 'else' '{' ListStm '}'    (rule 91)

	'%='           shift, and enter state 84
	')'            shift, and enter state 218
	'*='           shift, and enter state 85
	'+='           shift, and enter state 86
	'-='           shift, and enter state 87
	'/='           shift, and enter state 88
	'='            shift, and enter state 90

	OpAssign       goto state 83

State 209

	Exp -> Exp . OpAssign Exp1                          (rule 5)
	Stm -> 'print' '(' Exp . ')' ';'                    (rule 92)

	'%='           shift, and enter state 84
	')'            shift, and enter state 217
	'*='           shift, and enter state 85
	'+='           shift, and enter state 86
	'-='           shift, and enter state 87
	'/='           shift, and enter state 88
	'='            shift, and enter state 90

	OpAssign       goto state 83

State 210

	Exp -> Exp . OpAssign Exp1                          (rule 5)
	Stm -> 'println' '(' Exp . ')' ';'                  (rule 93)

	'%='           shift, and enter state 84
	')'            shift, and enter state 216
	'*='           shift, and enter state 85
	'+='           shift, and enter state 86
	'-='           shift, and enter state 87
	'/='           shift, and enter state 88
	'='            shift, and enter state 90

	OpAssign       goto state 83

State 211

	Stm -> 'return' Exp ';' .                           (rule 88)

	'!'            reduce using rule 88
	'('            reduce using rule 88
	'++'           reduce using rule 88
	'-'            reduce using rule 88
	'--'           reduce using rule 88
	'Array'        reduce using rule 88
	'Tupla'        reduce using rule 88
	'['            reduce using rule 88
	'assert'       reduce using rule 88
	'break'        reduce using rule 88
	'continue'     reduce using rule 88
	'false'        reduce using rule 88
	'for'          reduce using rule 88
	'fun'          reduce using rule 88
	'if'           reduce using rule 88
	'null'         reduce using rule 88
	'print'        reduce using rule 88
	'println'      reduce using rule 88
	'return'       reduce using rule 88
	'run'          reduce using rule 88
	'true'         reduce using rule 88
	'val'          reduce using rule 88
	'var'          reduce using rule 88
	'while'        reduce using rule 88
	'{'            reduce using rule 88
	'}'            reduce using rule 88
	L_integ        reduce using rule 88
	L_quoted       reduce using rule 88
	L_ident        reduce using rule 88


State 212

	Stm -> 'run' '{' ListStm . '}'                      (rule 83)
	ListStm -> ListStm . Stm                            (rule 97)

	'!'            shift, and enter state 59
	'('            shift, and enter state 60
	'++'           shift, and enter state 61
	'-'            shift, and enter state 62
	'--'           shift, and enter state 63
	'Array'        shift, and enter state 64
	'Tupla'        shift, and enter state 65
	'['            shift, and enter state 66
	'assert'       shift, and enter state 177
	'break'        shift, and enter state 178
	'continue'     shift, and enter state 179
	'false'        shift, and enter state 67
	'for'          shift, and enter state 180
	'fun'          shift, and enter state 8
	'if'           shift, and enter state 181
	'null'         shift, and enter state 68
	'print'        shift, and enter state 182
	'println'      shift, and enter state 183
	'return'       shift, and enter state 184
	'run'          shift, and enter state 185
	'true'         shift, and enter state 69
	'val'          shift, and enter state 9
	'var'          shift, and enter state 10
	'while'        shift, and enter state 186
	'{'            shift, and enter state 70
	'}'            shift, and enter state 215
	L_integ        shift, and enter state 2
	L_quoted       shift, and enter state 71
	L_ident        shift, and enter state 12

	Integer        goto state 42
	String         goto state 43
	Ident          goto state 44
	Exp            goto state 174
	Exp1           goto state 46
	Exp2           goto state 47
	Exp3           goto state 48
	Exp4           goto state 49
	Exp5           goto state 50
	Exp6           goto state 51
	Exp7           goto state 52
	Exp8           goto state 53
	Exp9           goto state 54
	Exp10          goto state 55
	Exp11          goto state 56
	Exp12          goto state 57
	Stm            goto state 175
	Dec            goto state 176
	FunctionDec    goto state 7
	FunctionExp    goto state 58

State 213

	Exp -> Exp . OpAssign Exp1                          (rule 5)
	Stm -> 'while' '(' Exp . ')' '{' ListStm '}'        (rule 85)

	'%='           shift, and enter state 84
	')'            shift, and enter state 214
	'*='           shift, and enter state 85
	'+='           shift, and enter state 86
	'-='           shift, and enter state 87
	'/='           shift, and enter state 88
	'='            shift, and enter state 90

	OpAssign       goto state 83

State 214

	Stm -> 'while' '(' Exp ')' . '{' ListStm '}'        (rule 85)

	'{'            shift, and enter state 228


State 215

	Stm -> 'run' '{' ListStm '}' .                      (rule 83)

	'!'            reduce using rule 83
	'('            reduce using rule 83
	'++'           reduce using rule 83
	'-'            reduce using rule 83
	'--'           reduce using rule 83
	'Array'        reduce using rule 83
	'Tupla'        reduce using rule 83
	'['            reduce using rule 83
	'assert'       reduce using rule 83
	'break'        reduce using rule 83
	'continue'     reduce using rule 83
	'false'        reduce using rule 83
	'for'          reduce using rule 83
	'fun'          reduce using rule 83
	'if'           reduce using rule 83
	'null'         reduce using rule 83
	'print'        reduce using rule 83
	'println'      reduce using rule 83
	'return'       reduce using rule 83
	'run'          reduce using rule 83
	'true'         reduce using rule 83
	'val'          reduce using rule 83
	'var'          reduce using rule 83
	'while'        reduce using rule 83
	'{'            reduce using rule 83
	'}'            reduce using rule 83
	L_integ        reduce using rule 83
	L_quoted       reduce using rule 83
	L_ident        reduce using rule 83


State 216

	Stm -> 'println' '(' Exp ')' . ';'                  (rule 93)

	';'            shift, and enter state 227


State 217

	Stm -> 'print' '(' Exp ')' . ';'                    (rule 92)

	';'            shift, and enter state 226


State 218

	Stm -> 'if' '(' Exp ')' . '{' ListStm '}'           (rule 90)
	Stm -> 'if' '(' Exp ')' . '{' ListStm '}' 'else' '{' ListStm '}'    (rule 91)

	'{'            shift, and enter state 225


State 219

	Stm -> 'for' '(' Ident 'in' . Exp ')' '{' ListStm '}'    (rule 84)

	'!'            shift, and enter state 59
	'('            shift, and enter state 60
	'++'           shift, and enter state 61
	'-'            shift, and enter state 62
	'--'           shift, and enter state 63
	'Array'        shift, and enter state 64
	'Tupla'        shift, and enter state 65
	'['            shift, and enter state 66
	'false'        shift, and enter state 67
	'null'         shift, and enter state 68
	'true'         shift, and enter state 69
	'{'            shift, and enter state 70
	L_integ        shift, and enter state 2
	L_quoted       shift, and enter state 71
	L_ident        shift, and enter state 12

	Integer        goto state 42
	String         goto state 43
	Ident          goto state 44
	Exp            goto state 224
	Exp1           goto state 46
	Exp2           goto state 47
	Exp3           goto state 48
	Exp4           goto state 49
	Exp5           goto state 50
	Exp6           goto state 51
	Exp7           goto state 52
	Exp8           goto state 53
	Exp9           goto state 54
	Exp10          goto state 55
	Exp11          goto state 56
	Exp12          goto state 57
	FunctionExp    goto state 58

State 220

	Stm -> 'assert' '(' Exp ')' . ';'                   (rule 95)

	';'            shift, and enter state 223


State 221

	Stm -> Exp '?.let' '{' ListStm . '}'                (rule 94)
	ListStm -> ListStm . Stm                            (rule 97)

	'!'            shift, and enter state 59
	'('            shift, and enter state 60
	'++'           shift, and enter state 61
	'-'            shift, and enter state 62
	'--'           shift, and enter state 63
	'Array'        shift, and enter state 64
	'Tupla'        shift, and enter state 65
	'['            shift, and enter state 66
	'assert'       shift, and enter state 177
	'break'        shift, and enter state 178
	'continue'     shift, and enter state 179
	'false'        shift, and enter state 67
	'for'          shift, and enter state 180
	'fun'          shift, and enter state 8
	'if'           shift, and enter state 181
	'null'         shift, and enter state 68
	'print'        shift, and enter state 182
	'println'      shift, and enter state 183
	'return'       shift, and enter state 184
	'run'          shift, and enter state 185
	'true'         shift, and enter state 69
	'val'          shift, and enter state 9
	'var'          shift, and enter state 10
	'while'        shift, and enter state 186
	'{'            shift, and enter state 70
	'}'            shift, and enter state 222
	L_integ        shift, and enter state 2
	L_quoted       shift, and enter state 71
	L_ident        shift, and enter state 12

	Integer        goto state 42
	String         goto state 43
	Ident          goto state 44
	Exp            goto state 174
	Exp1           goto state 46
	Exp2           goto state 47
	Exp3           goto state 48
	Exp4           goto state 49
	Exp5           goto state 50
	Exp6           goto state 51
	Exp7           goto state 52
	Exp8           goto state 53
	Exp9           goto state 54
	Exp10          goto state 55
	Exp11          goto state 56
	Exp12          goto state 57
	Stm            goto state 175
	Dec            goto state 176
	FunctionDec    goto state 7
	FunctionExp    goto state 58

State 222

	Stm -> Exp '?.let' '{' ListStm '}' .                (rule 94)

	'!'            reduce using rule 94
	'('            reduce using rule 94
	'++'           reduce using rule 94
	'-'            reduce using rule 94
	'--'           reduce using rule 94
	'Array'        reduce using rule 94
	'Tupla'        reduce using rule 94
	'['            reduce using rule 94
	'assert'       reduce using rule 94
	'break'        reduce using rule 94
	'continue'     reduce using rule 94
	'false'        reduce using rule 94
	'for'          reduce using rule 94
	'fun'          reduce using rule 94
	'if'           reduce using rule 94
	'null'         reduce using rule 94
	'print'        reduce using rule 94
	'println'      reduce using rule 94
	'return'       reduce using rule 94
	'run'          reduce using rule 94
	'true'         reduce using rule 94
	'val'          reduce using rule 94
	'var'          reduce using rule 94
	'while'        reduce using rule 94
	'{'            reduce using rule 94
	'}'            reduce using rule 94
	L_integ        reduce using rule 94
	L_quoted       reduce using rule 94
	L_ident        reduce using rule 94


State 223

	Stm -> 'assert' '(' Exp ')' ';' .                   (rule 95)

	'!'            reduce using rule 95
	'('            reduce using rule 95
	'++'           reduce using rule 95
	'-'            reduce using rule 95
	'--'           reduce using rule 95
	'Array'        reduce using rule 95
	'Tupla'        reduce using rule 95
	'['            reduce using rule 95
	'assert'       reduce using rule 95
	'break'        reduce using rule 95
	'continue'     reduce using rule 95
	'false'        reduce using rule 95
	'for'          reduce using rule 95
	'fun'          reduce using rule 95
	'if'           reduce using rule 95
	'null'         reduce using rule 95
	'print'        reduce using rule 95
	'println'      reduce using rule 95
	'return'       reduce using rule 95
	'run'          reduce using rule 95
	'true'         reduce using rule 95
	'val'          reduce using rule 95
	'var'          reduce using rule 95
	'while'        reduce using rule 95
	'{'            reduce using rule 95
	'}'            reduce using rule 95
	L_integ        reduce using rule 95
	L_quoted       reduce using rule 95
	L_ident        reduce using rule 95


State 224

	Exp -> Exp . OpAssign Exp1                          (rule 5)
	Stm -> 'for' '(' Ident 'in' Exp . ')' '{' ListStm '}'    (rule 84)

	'%='           shift, and enter state 84
	')'            shift, and enter state 231
	'*='           shift, and enter state 85
	'+='           shift, and enter state 86
	'-='           shift, and enter state 87
	'/='           shift, and enter state 88
	'='            shift, and enter state 90

	OpAssign       goto state 83

State 225

	Stm -> 'if' '(' Exp ')' '{' . ListStm '}'           (rule 90)
	Stm -> 'if' '(' Exp ')' '{' . ListStm '}' 'else' '{' ListStm '}'    (rule 91)

	'!'            reduce using rule 96
	'('            reduce using rule 96
	'++'           reduce using rule 96
	'-'            reduce using rule 96
	'--'           reduce using rule 96
	'Array'        reduce using rule 96
	'Tupla'        reduce using rule 96
	'['            reduce using rule 96
	'assert'       reduce using rule 96
	'break'        reduce using rule 96
	'continue'     reduce using rule 96
	'false'        reduce using rule 96
	'for'          reduce using rule 96
	'fun'          reduce using rule 96
	'if'           reduce using rule 96
	'null'         reduce using rule 96
	'print'        reduce using rule 96
	'println'      reduce using rule 96
	'return'       reduce using rule 96
	'run'          reduce using rule 96
	'true'         reduce using rule 96
	'val'          reduce using rule 96
	'var'          reduce using rule 96
	'while'        reduce using rule 96
	'{'            reduce using rule 96
	'}'            reduce using rule 96
	L_integ        reduce using rule 96
	L_quoted       reduce using rule 96
	L_ident        reduce using rule 96

	ListStm        goto state 230

State 226

	Stm -> 'print' '(' Exp ')' ';' .                    (rule 92)

	'!'            reduce using rule 92
	'('            reduce using rule 92
	'++'           reduce using rule 92
	'-'            reduce using rule 92
	'--'           reduce using rule 92
	'Array'        reduce using rule 92
	'Tupla'        reduce using rule 92
	'['            reduce using rule 92
	'assert'       reduce using rule 92
	'break'        reduce using rule 92
	'continue'     reduce using rule 92
	'false'        reduce using rule 92
	'for'          reduce using rule 92
	'fun'          reduce using rule 92
	'if'           reduce using rule 92
	'null'         reduce using rule 92
	'print'        reduce using rule 92
	'println'      reduce using rule 92
	'return'       reduce using rule 92
	'run'          reduce using rule 92
	'true'         reduce using rule 92
	'val'          reduce using rule 92
	'var'          reduce using rule 92
	'while'        reduce using rule 92
	'{'            reduce using rule 92
	'}'            reduce using rule 92
	L_integ        reduce using rule 92
	L_quoted       reduce using rule 92
	L_ident        reduce using rule 92


State 227

	Stm -> 'println' '(' Exp ')' ';' .                  (rule 93)

	'!'            reduce using rule 93
	'('            reduce using rule 93
	'++'           reduce using rule 93
	'-'            reduce using rule 93
	'--'           reduce using rule 93
	'Array'        reduce using rule 93
	'Tupla'        reduce using rule 93
	'['            reduce using rule 93
	'assert'       reduce using rule 93
	'break'        reduce using rule 93
	'continue'     reduce using rule 93
	'false'        reduce using rule 93
	'for'          reduce using rule 93
	'fun'          reduce using rule 93
	'if'           reduce using rule 93
	'null'         reduce using rule 93
	'print'        reduce using rule 93
	'println'      reduce using rule 93
	'return'       reduce using rule 93
	'run'          reduce using rule 93
	'true'         reduce using rule 93
	'val'          reduce using rule 93
	'var'          reduce using rule 93
	'while'        reduce using rule 93
	'{'            reduce using rule 93
	'}'            reduce using rule 93
	L_integ        reduce using rule 93
	L_quoted       reduce using rule 93
	L_ident        reduce using rule 93


State 228

	Stm -> 'while' '(' Exp ')' '{' . ListStm '}'        (rule 85)

	'!'            reduce using rule 96
	'('            reduce using rule 96
	'++'           reduce using rule 96
	'-'            reduce using rule 96
	'--'           reduce using rule 96
	'Array'        reduce using rule 96
	'Tupla'        reduce using rule 96
	'['            reduce using rule 96
	'assert'       reduce using rule 96
	'break'        reduce using rule 96
	'continue'     reduce using rule 96
	'false'        reduce using rule 96
	'for'          reduce using rule 96
	'fun'          reduce using rule 96
	'if'           reduce using rule 96
	'null'         reduce using rule 96
	'print'        reduce using rule 96
	'println'      reduce using rule 96
	'return'       reduce using rule 96
	'run'          reduce using rule 96
	'true'         reduce using rule 96
	'val'          reduce using rule 96
	'var'          reduce using rule 96
	'while'        reduce using rule 96
	'{'            reduce using rule 96
	'}'            reduce using rule 96
	L_integ        reduce using rule 96
	L_quoted       reduce using rule 96
	L_ident        reduce using rule 96

	ListStm        goto state 229

State 229

	Stm -> 'while' '(' Exp ')' '{' ListStm . '}'        (rule 85)
	ListStm -> ListStm . Stm                            (rule 97)

	'!'            shift, and enter state 59
	'('            shift, and enter state 60
	'++'           shift, and enter state 61
	'-'            shift, and enter state 62
	'--'           shift, and enter state 63
	'Array'        shift, and enter state 64
	'Tupla'        shift, and enter state 65
	'['            shift, and enter state 66
	'assert'       shift, and enter state 177
	'break'        shift, and enter state 178
	'continue'     shift, and enter state 179
	'false'        shift, and enter state 67
	'for'          shift, and enter state 180
	'fun'          shift, and enter state 8
	'if'           shift, and enter state 181
	'null'         shift, and enter state 68
	'print'        shift, and enter state 182
	'println'      shift, and enter state 183
	'return'       shift, and enter state 184
	'run'          shift, and enter state 185
	'true'         shift, and enter state 69
	'val'          shift, and enter state 9
	'var'          shift, and enter state 10
	'while'        shift, and enter state 186
	'{'            shift, and enter state 70
	'}'            shift, and enter state 234
	L_integ        shift, and enter state 2
	L_quoted       shift, and enter state 71
	L_ident        shift, and enter state 12

	Integer        goto state 42
	String         goto state 43
	Ident          goto state 44
	Exp            goto state 174
	Exp1           goto state 46
	Exp2           goto state 47
	Exp3           goto state 48
	Exp4           goto state 49
	Exp5           goto state 50
	Exp6           goto state 51
	Exp7           goto state 52
	Exp8           goto state 53
	Exp9           goto state 54
	Exp10          goto state 55
	Exp11          goto state 56
	Exp12          goto state 57
	Stm            goto state 175
	Dec            goto state 176
	FunctionDec    goto state 7
	FunctionExp    goto state 58

State 230

	Stm -> 'if' '(' Exp ')' '{' ListStm . '}'           (rule 90)
	Stm -> 'if' '(' Exp ')' '{' ListStm . '}' 'else' '{' ListStm '}'    (rule 91)
	ListStm -> ListStm . Stm                            (rule 97)

	'!'            shift, and enter state 59
	'('            shift, and enter state 60
	'++'           shift, and enter state 61
	'-'            shift, and enter state 62
	'--'           shift, and enter state 63
	'Array'        shift, and enter state 64
	'Tupla'        shift, and enter state 65
	'['            shift, and enter state 66
	'assert'       shift, and enter state 177
	'break'        shift, and enter state 178
	'continue'     shift, and enter state 179
	'false'        shift, and enter state 67
	'for'          shift, and enter state 180
	'fun'          shift, and enter state 8
	'if'           shift, and enter state 181
	'null'         shift, and enter state 68
	'print'        shift, and enter state 182
	'println'      shift, and enter state 183
	'return'       shift, and enter state 184
	'run'          shift, and enter state 185
	'true'         shift, and enter state 69
	'val'          shift, and enter state 9
	'var'          shift, and enter state 10
	'while'        shift, and enter state 186
	'{'            shift, and enter state 70
	'}'            shift, and enter state 233
	L_integ        shift, and enter state 2
	L_quoted       shift, and enter state 71
	L_ident        shift, and enter state 12

	Integer        goto state 42
	String         goto state 43
	Ident          goto state 44
	Exp            goto state 174
	Exp1           goto state 46
	Exp2           goto state 47
	Exp3           goto state 48
	Exp4           goto state 49
	Exp5           goto state 50
	Exp6           goto state 51
	Exp7           goto state 52
	Exp8           goto state 53
	Exp9           goto state 54
	Exp10          goto state 55
	Exp11          goto state 56
	Exp12          goto state 57
	Stm            goto state 175
	Dec            goto state 176
	FunctionDec    goto state 7
	FunctionExp    goto state 58

State 231

	Stm -> 'for' '(' Ident 'in' Exp ')' . '{' ListStm '}'    (rule 84)

	'{'            shift, and enter state 232


State 232

	Stm -> 'for' '(' Ident 'in' Exp ')' '{' . ListStm '}'    (rule 84)

	'!'            reduce using rule 96
	'('            reduce using rule 96
	'++'           reduce using rule 96
	'-'            reduce using rule 96
	'--'           reduce using rule 96
	'Array'        reduce using rule 96
	'Tupla'        reduce using rule 96
	'['            reduce using rule 96
	'assert'       reduce using rule 96
	'break'        reduce using rule 96
	'continue'     reduce using rule 96
	'false'        reduce using rule 96
	'for'          reduce using rule 96
	'fun'          reduce using rule 96
	'if'           reduce using rule 96
	'null'         reduce using rule 96
	'print'        reduce using rule 96
	'println'      reduce using rule 96
	'return'       reduce using rule 96
	'run'          reduce using rule 96
	'true'         reduce using rule 96
	'val'          reduce using rule 96
	'var'          reduce using rule 96
	'while'        reduce using rule 96
	'{'            reduce using rule 96
	'}'            reduce using rule 96
	L_integ        reduce using rule 96
	L_quoted       reduce using rule 96
	L_ident        reduce using rule 96

	ListStm        goto state 236

State 233

	Stm -> 'if' '(' Exp ')' '{' ListStm '}' .           (rule 90)
	Stm -> 'if' '(' Exp ')' '{' ListStm '}' . 'else' '{' ListStm '}'    (rule 91)

	'!'            reduce using rule 90
	'('            reduce using rule 90
	'++'           reduce using rule 90
	'-'            reduce using rule 90
	'--'           reduce using rule 90
	'Array'        reduce using rule 90
	'Tupla'        reduce using rule 90
	'['            reduce using rule 90
	'assert'       reduce using rule 90
	'break'        reduce using rule 90
	'continue'     reduce using rule 90
	'else'         shift, and enter state 235
	'false'        reduce using rule 90
	'for'          reduce using rule 90
	'fun'          reduce using rule 90
	'if'           reduce using rule 90
	'null'         reduce using rule 90
	'print'        reduce using rule 90
	'println'      reduce using rule 90
	'return'       reduce using rule 90
	'run'          reduce using rule 90
	'true'         reduce using rule 90
	'val'          reduce using rule 90
	'var'          reduce using rule 90
	'while'        reduce using rule 90
	'{'            reduce using rule 90
	'}'            reduce using rule 90
	L_integ        reduce using rule 90
	L_quoted       reduce using rule 90
	L_ident        reduce using rule 90


State 234

	Stm -> 'while' '(' Exp ')' '{' ListStm '}' .        (rule 85)

	'!'            reduce using rule 85
	'('            reduce using rule 85
	'++'           reduce using rule 85
	'-'            reduce using rule 85
	'--'           reduce using rule 85
	'Array'        reduce using rule 85
	'Tupla'        reduce using rule 85
	'['            reduce using rule 85
	'assert'       reduce using rule 85
	'break'        reduce using rule 85
	'continue'     reduce using rule 85
	'false'        reduce using rule 85
	'for'          reduce using rule 85
	'fun'          reduce using rule 85
	'if'           reduce using rule 85
	'null'         reduce using rule 85
	'print'        reduce using rule 85
	'println'      reduce using rule 85
	'return'       reduce using rule 85
	'run'          reduce using rule 85
	'true'         reduce using rule 85
	'val'          reduce using rule 85
	'var'          reduce using rule 85
	'while'        reduce using rule 85
	'{'            reduce using rule 85
	'}'            reduce using rule 85
	L_integ        reduce using rule 85
	L_quoted       reduce using rule 85
	L_ident        reduce using rule 85


State 235

	Stm -> 'if' '(' Exp ')' '{' ListStm '}' 'else' . '{' ListStm '}'    (rule 91)

	'{'            shift, and enter state 238


State 236

	Stm -> 'for' '(' Ident 'in' Exp ')' '{' ListStm . '}'    (rule 84)
	ListStm -> ListStm . Stm                            (rule 97)

	'!'            shift, and enter state 59
	'('            shift, and enter state 60
	'++'           shift, and enter state 61
	'-'            shift, and enter state 62
	'--'           shift, and enter state 63
	'Array'        shift, and enter state 64
	'Tupla'        shift, and enter state 65
	'['            shift, and enter state 66
	'assert'       shift, and enter state 177
	'break'        shift, and enter state 178
	'continue'     shift, and enter state 179
	'false'        shift, and enter state 67
	'for'          shift, and enter state 180
	'fun'          shift, and enter state 8
	'if'           shift, and enter state 181
	'null'         shift, and enter state 68
	'print'        shift, and enter state 182
	'println'      shift, and enter state 183
	'return'       shift, and enter state 184
	'run'          shift, and enter state 185
	'true'         shift, and enter state 69
	'val'          shift, and enter state 9
	'var'          shift, and enter state 10
	'while'        shift, and enter state 186
	'{'            shift, and enter state 70
	'}'            shift, and enter state 237
	L_integ        shift, and enter state 2
	L_quoted       shift, and enter state 71
	L_ident        shift, and enter state 12

	Integer        goto state 42
	String         goto state 43
	Ident          goto state 44
	Exp            goto state 174
	Exp1           goto state 46
	Exp2           goto state 47
	Exp3           goto state 48
	Exp4           goto state 49
	Exp5           goto state 50
	Exp6           goto state 51
	Exp7           goto state 52
	Exp8           goto state 53
	Exp9           goto state 54
	Exp10          goto state 55
	Exp11          goto state 56
	Exp12          goto state 57
	Stm            goto state 175
	Dec            goto state 176
	FunctionDec    goto state 7
	FunctionExp    goto state 58

State 237

	Stm -> 'for' '(' Ident 'in' Exp ')' '{' ListStm '}' .    (rule 84)

	'!'            reduce using rule 84
	'('            reduce using rule 84
	'++'           reduce using rule 84
	'-'            reduce using rule 84
	'--'           reduce using rule 84
	'Array'        reduce using rule 84
	'Tupla'        reduce using rule 84
	'['            reduce using rule 84
	'assert'       reduce using rule 84
	'break'        reduce using rule 84
	'continue'     reduce using rule 84
	'false'        reduce using rule 84
	'for'          reduce using rule 84
	'fun'          reduce using rule 84
	'if'           reduce using rule 84
	'null'         reduce using rule 84
	'print'        reduce using rule 84
	'println'      reduce using rule 84
	'return'       reduce using rule 84
	'run'          reduce using rule 84
	'true'         reduce using rule 84
	'val'          reduce using rule 84
	'var'          reduce using rule 84
	'while'        reduce using rule 84
	'{'            reduce using rule 84
	'}'            reduce using rule 84
	L_integ        reduce using rule 84
	L_quoted       reduce using rule 84
	L_ident        reduce using rule 84


State 238

	Stm -> 'if' '(' Exp ')' '{' ListStm '}' 'else' '{' . ListStm '}'    (rule 91)

	'!'            reduce using rule 96
	'('            reduce using rule 96
	'++'           reduce using rule 96
	'-'            reduce using rule 96
	'--'           reduce using rule 96
	'Array'        reduce using rule 96
	'Tupla'        reduce using rule 96
	'['            reduce using rule 96
	'assert'       reduce using rule 96
	'break'        reduce using rule 96
	'continue'     reduce using rule 96
	'false'        reduce using rule 96
	'for'          reduce using rule 96
	'fun'          reduce using rule 96
	'if'           reduce using rule 96
	'null'         reduce using rule 96
	'print'        reduce using rule 96
	'println'      reduce using rule 96
	'return'       reduce using rule 96
	'run'          reduce using rule 96
	'true'         reduce using rule 96
	'val'          reduce using rule 96
	'var'          reduce using rule 96
	'while'        reduce using rule 96
	'{'            reduce using rule 96
	'}'            reduce using rule 96
	L_integ        reduce using rule 96
	L_quoted       reduce using rule 96
	L_ident        reduce using rule 96

	ListStm        goto state 239

State 239

	Stm -> 'if' '(' Exp ')' '{' ListStm '}' 'else' '{' ListStm . '}'    (rule 91)
	ListStm -> ListStm . Stm                            (rule 97)

	'!'            shift, and enter state 59
	'('            shift, and enter state 60
	'++'           shift, and enter state 61
	'-'            shift, and enter state 62
	'--'           shift, and enter state 63
	'Array'        shift, and enter state 64
	'Tupla'        shift, and enter state 65
	'['            shift, and enter state 66
	'assert'       shift, and enter state 177
	'break'        shift, and enter state 178
	'continue'     shift, and enter state 179
	'false'        shift, and enter state 67
	'for'          shift, and enter state 180
	'fun'          shift, and enter state 8
	'if'           shift, and enter state 181
	'null'         shift, and enter state 68
	'print'        shift, and enter state 182
	'println'      shift, and enter state 183
	'return'       shift, and enter state 184
	'run'          shift, and enter state 185
	'true'         shift, and enter state 69
	'val'          shift, and enter state 9
	'var'          shift, and enter state 10
	'while'        shift, and enter state 186
	'{'            shift, and enter state 70
	'}'            shift, and enter state 240
	L_integ        shift, and enter state 2
	L_quoted       shift, and enter state 71
	L_ident        shift, and enter state 12

	Integer        goto state 42
	String         goto state 43
	Ident          goto state 44
	Exp            goto state 174
	Exp1           goto state 46
	Exp2           goto state 47
	Exp3           goto state 48
	Exp4           goto state 49
	Exp5           goto state 50
	Exp6           goto state 51
	Exp7           goto state 52
	Exp8           goto state 53
	Exp9           goto state 54
	Exp10          goto state 55
	Exp11          goto state 56
	Exp12          goto state 57
	Stm            goto state 175
	Dec            goto state 176
	FunctionDec    goto state 7
	FunctionExp    goto state 58

State 240

	Stm -> 'if' '(' Exp ')' '{' ListStm '}' 'else' '{' ListStm '}' .    (rule 91)

	'!'            reduce using rule 91
	'('            reduce using rule 91
	'++'           reduce using rule 91
	'-'            reduce using rule 91
	'--'           reduce using rule 91
	'Array'        reduce using rule 91
	'Tupla'        reduce using rule 91
	'['            reduce using rule 91
	'assert'       reduce using rule 91
	'break'        reduce using rule 91
	'continue'     reduce using rule 91
	'false'        reduce using rule 91
	'for'          reduce using rule 91
	'fun'          reduce using rule 91
	'if'           reduce using rule 91
	'null'         reduce using rule 91
	'print'        reduce using rule 91
	'println'      reduce using rule 91
	'return'       reduce using rule 91
	'run'          reduce using rule 91
	'true'         reduce using rule 91
	'val'          reduce using rule 91
	'var'          reduce using rule 91
	'while'        reduce using rule 91
	'{'            reduce using rule 91
	'}'            reduce using rule 91
	L_integ        reduce using rule 91
	L_quoted       reduce using rule 91
	L_ident        reduce using rule 91


-----------------------------------------------------------------------------
Grammar Totals
-----------------------------------------------------------------------------
Number of rules: 113
Number of terminals: 66
Number of non-terminals: 36
Number of states: 241
